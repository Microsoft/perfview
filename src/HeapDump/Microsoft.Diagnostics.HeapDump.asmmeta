.assembly extern 'Microsoft.Diagnostics.FastSerialization'
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 14:0:0:0
}
.assembly extern 'Microsoft.Diagnostics.MemoryGraph'
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 14:0:0:0
}
.assembly extern 'Microsoft.Diagnostics.Runtime'
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 0:8:4:2
}
.assembly extern 'mscorlib'
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly 'Microsoft.Diagnostics.HeapDump'
{
	.custom instance void ['mscorlib']'System'.'CLSCompliantAttribute'::.ctor(bool) = (01 00 00 00 00)
	.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
	.permissionset reqmin = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 15 01 54 02 10 53 6B 69 70 56 65 72 69 66 69 63 61 74 69 6F 6E 01)
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93)
	.hash algorithm 0x00008004
	.ver 14:0:0:0
}
.class public sealed 'Action`6'<- 'T1', - 'T2', - 'T3', - 'T4', - 'T5', - 'T6'>
	extends ['mscorlib']'System'.'MulticastDelegate'
{
	.method public hidebysig specialname 
		instance void '.ctor'(object 'object', native int 'method')
		runtime 
	{
	}
	.method public virtual hidebysig newslot 
		instance void 'Invoke'(!0 'arg1', !1 'arg2', !2 'arg3', !3 'arg4', !4 'arg5', !5 'arg6')
		runtime 
	{
	}
	.method public virtual hidebysig newslot 
		instance class ['mscorlib']'System'.'IAsyncResult' 'BeginInvoke'(!0 'arg1', !1 'arg2', !2 'arg3', !3 'arg4', !4 'arg5', !5 'arg6', class ['mscorlib']'System'.'AsyncCallback' 'callback', object 'object')
		runtime 
	{
	}
	.method public virtual hidebysig newslot 
		instance void 'EndInvoke'(class ['mscorlib']'System'.'IAsyncResult' 'result')
		runtime 
	{
	}
}
.class public sealed 'Action`7'<- 'T1', - 'T2', - 'T3', - 'T4', - 'T5', - 'T6', - 'T7'>
	extends ['mscorlib']'System'.'MulticastDelegate'
{
	.method public hidebysig specialname 
		instance void '.ctor'(object 'object', native int 'method')
		runtime 
	{
	}
	.method public virtual hidebysig newslot 
		instance void 'Invoke'(!0 'arg1', !1 'arg2', !2 'arg3', !3 'arg4', !4 'arg5', !5 'arg6', !6 'arg7')
		runtime 
	{
	}
	.method public virtual hidebysig newslot 
		instance class ['mscorlib']'System'.'IAsyncResult' 'BeginInvoke'(!0 'arg1', !1 'arg2', !2 'arg3', !3 'arg4', !4 'arg5', !5 'arg6', !6 'arg7', class ['mscorlib']'System'.'AsyncCallback' 'callback', object 'object')
		runtime 
	{
	}
	.method public virtual hidebysig newslot 
		instance void 'EndInvoke'(class ['mscorlib']'System'.'IAsyncResult' 'result')
		runtime 
	{
	}
}
.class public 'DotNetHeapInfo'
	extends ['mscorlib']'System'.'Object'
	implements ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'
{
	.method public hidebysig specialname 
		instance int32 'get_CorruptedObject'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int64 'get_UndumpedSegementRegion'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int64 'get_SizeOfAllSegments'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance class ['mscorlib']'System.Collections.Generic'.'List`1'<class 'GCHeapDumpSegment'> 'get_Segments'()
	{
		ret
	}
	.method public hidebysig 
		instance int32 'GenerationFor'(uint64 'obj')
	{
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.ToStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Serializer' 'serializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'ToStream'
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.FromStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Deserializer' 'deserializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'FromStream'
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'()
	{
		ret
	}
	.property instance int32 'CorruptedObject'()
	{
		.get instance int32 'DotNetHeapInfo'::'get_CorruptedObject'()
	}
	.property instance class ['mscorlib']'System.Collections.Generic'.'List`1'<class 'GCHeapDumpSegment'> 'Segments'()
	{
		.get instance class ['mscorlib']'System.Collections.Generic'.'List`1'<class 'GCHeapDumpSegment'> 'DotNetHeapInfo'::'get_Segments'()
	}
	.property instance int64 'SizeOfAllSegments'()
	{
		.get instance int64 'DotNetHeapInfo'::'get_SizeOfAllSegments'()
	}
	.property instance int64 'UndumpedSegementRegion'()
	{
		.get instance int64 'DotNetHeapInfo'::'get_UndumpedSegementRegion'()
	}
}
.class public 'GCHeapDump'
	extends ['mscorlib']'System'.'Object'
	implements ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable', ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializableVersion'
{
	.class nested public sequential sealed 'ProcessInfo'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public int32 'ID'
		.field public bool 'UsesDotNet'
		.field public bool 'UsesJavaScript'
	}
	.method public hidebysig specialname 
		instance void '.ctor'(string 'inputFileName')
	{
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'(class ['mscorlib']'System.IO'.'Stream' 'inputStream', string 'streamName')
	{
		ret
	}
	.method public hidebysig specialname 
		instance class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'get_MemoryGraph'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance class 'InteropInfo' 'get_InteropInfo'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance bool 'get_Is64Bit'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance float32 'get_AverageCountMultiplier'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance float32 'get_AverageSizeMultiplier'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance float32[] 'get_CountMultipliersByType'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance class 'DotNetHeapInfo' 'get_DotNetHeapInfo'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance class 'JSHeapInfo' 'get_JSHeapInfo'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance string 'get_CollectionLog'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance valuetype ['mscorlib']'System'.'DateTime' 'get_TimeCollected'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance string 'get_MachineName'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance string 'get_ProcessName'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int32 'get_ProcessID'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int64 'get_TotalProcessCommit'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int64 'get_TotalProcessWorkingSet'()
	{
		ret
	}
	.method public static hidebysig 
		class ['mscorlib']'System.Collections.Generic'.'Dictionary`2'<int32,valuetype 'GCHeapDump'/'ProcessInfo'> 'GetProcessesWithGCHeaps'()
	{
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.ToStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Serializer' 'serializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'ToStream'
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.FromStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Deserializer' 'deserializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'FromStream'
		ret
	}
	.method private final virtual hidebysig newslot specialname 
		instance int32 'FastSerialization.IFastSerializableVersion.get_Version'()
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializableVersion'::'get_Version'
		ret
	}
	.method private final virtual hidebysig newslot specialname 
		instance int32 'FastSerialization.IFastSerializableVersion.get_MinimumVersionCanRead'()
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializableVersion'::'get_MinimumVersionCanRead'
		ret
	}
	.method private final virtual hidebysig newslot specialname 
		instance int32 'FastSerialization.IFastSerializableVersion.get_MinimumReaderVersion'()
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializableVersion'::'get_MinimumReaderVersion'
		ret
	}
	.property instance float32 'AverageCountMultiplier'()
	{
		.get instance float32 'GCHeapDump'::'get_AverageCountMultiplier'()
	}
	.property instance float32 'AverageSizeMultiplier'()
	{
		.get instance float32 'GCHeapDump'::'get_AverageSizeMultiplier'()
	}
	.property instance string 'CollectionLog'()
	{
		.get instance string 'GCHeapDump'::'get_CollectionLog'()
	}
	.property instance float32[] 'CountMultipliersByType'()
	{
		.get instance float32[] 'GCHeapDump'::'get_CountMultipliersByType'()
	}
	.property instance class 'DotNetHeapInfo' 'DotNetHeapInfo'()
	{
		.get instance class 'DotNetHeapInfo' 'GCHeapDump'::'get_DotNetHeapInfo'()
	}
	.property instance int32 'FastSerialization.IFastSerializableVersion.MinimumReaderVersion'()
	{
		.get instance int32 'GCHeapDump'::'FastSerialization.IFastSerializableVersion.get_MinimumReaderVersion'()
	}
	.property instance int32 'FastSerialization.IFastSerializableVersion.MinimumVersionCanRead'()
	{
		.get instance int32 'GCHeapDump'::'FastSerialization.IFastSerializableVersion.get_MinimumVersionCanRead'()
	}
	.property instance int32 'FastSerialization.IFastSerializableVersion.Version'()
	{
		.get instance int32 'GCHeapDump'::'FastSerialization.IFastSerializableVersion.get_Version'()
	}
	.property instance class 'InteropInfo' 'InteropInfo'()
	{
		.get instance class 'InteropInfo' 'GCHeapDump'::'get_InteropInfo'()
	}
	.property instance bool 'Is64Bit'()
	{
		.get instance bool 'GCHeapDump'::'get_Is64Bit'()
	}
	.property instance class 'JSHeapInfo' 'JSHeapInfo'()
	{
		.get instance class 'JSHeapInfo' 'GCHeapDump'::'get_JSHeapInfo'()
	}
	.property instance string 'MachineName'()
	{
		.get instance string 'GCHeapDump'::'get_MachineName'()
	}
	.property instance class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'MemoryGraph'()
	{
		.get instance class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'GCHeapDump'::'get_MemoryGraph'()
	}
	.property instance int32 'ProcessID'()
	{
		.get instance int32 'GCHeapDump'::'get_ProcessID'()
	}
	.property instance string 'ProcessName'()
	{
		.get instance string 'GCHeapDump'::'get_ProcessName'()
	}
	.property instance valuetype ['mscorlib']'System'.'DateTime' 'TimeCollected'()
	{
		.get instance valuetype ['mscorlib']'System'.'DateTime' 'GCHeapDump'::'get_TimeCollected'()
	}
	.property instance int64 'TotalProcessCommit'()
	{
		.get instance int64 'GCHeapDump'::'get_TotalProcessCommit'()
	}
	.property instance int64 'TotalProcessWorkingSet'()
	{
		.get instance int64 'GCHeapDump'::'get_TotalProcessWorkingSet'()
	}
}
.class public 'GCHeapDumpSegment'
	extends ['mscorlib']'System'.'Object'
	implements ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'
{
	.method public hidebysig specialname 
		instance uint64 'get_Start'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen0End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen1End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen2End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen3End'()
	{
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.ToStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Serializer' 'serializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'ToStream'
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.FromStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Deserializer' 'deserializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'FromStream'
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'()
	{
		ret
	}
	.property instance uint64 'End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_End'()
	}
	.property instance uint64 'Gen0End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen0End'()
	}
	.property instance uint64 'Gen1End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen1End'()
	}
	.property instance uint64 'Gen2End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen2End'()
	}
	.property instance uint64 'Gen3End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen3End'()
	}
	.property instance uint64 'Start'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Start'()
	}
}
.class public 'GCHeapDumper'
	extends ['mscorlib']'System'.'Object'
{
	.method public hidebysig specialname 
		instance void '.ctor'(class ['mscorlib']'System.IO'.'TextWriter' 'log')
	{
		ret
	}
	.method public hidebysig 
		instance class 'Microsoft.Diagnostics.HeapDump'.'CollectionMetadata' 'DumpLiveHeap'(int32 'processID', class ['mscorlib']'System.IO'.'Stream' 'outputStream')
	{
		ret
	}
	.method public hidebysig 
		instance class 'Microsoft.Diagnostics.HeapDump'.'CollectionMetadata' 'DumpLiveHeap'(int32 'processID', string 'outputFileName')
	{
		ret
	}
	.method public hidebysig 
		instance class 'Microsoft.Diagnostics.HeapDump'.'CollectionMetadata' 'DumpHeapFromProcessDump'(string 'processDumpFile', string 'outputFileName')
	{
		ret
	}
	.method public hidebysig 
		instance class 'Microsoft.Diagnostics.HeapDump'.'CollectionMetadata' 'DumpHeapFromProcessDump'(string 'processDumpFile', class ['mscorlib']'System.IO'.'Stream' 'outputStream')
	{
		ret
	}
	.method public hidebysig specialname 
		instance int32 'get_BadObjectCount'()
	{
		ret
	}
	.method public hidebysig 
		instance string 'DumpAt'(class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'heap', uint64 'address')
	{
		ret
	}
	.method public virtual hidebysig newslot 
		instance uint64 'FetchIntPtrAt'(class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'heap', uint64 'address')
	{
		ret
	}
	.method public static hidebysig 
		void 'DebugWriteLine'(string 'format', object[] 'args')
	{
		.custom instance void ['mscorlib']'System.Diagnostics'.'ConditionalAttribute'::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
		.param [2]
		.custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
		ret
	}
	.field public bool 'CrossGeneration'
	.field public bool 'DumpData'
	.field public bool 'Freeze'
	.field public int32 'GenerationToTrigger'
	.field public int32 'MaxDumpCountK'
	.field public int32 'MaxNodeCountK'
	.field public uint64 'PromotedBytesThreshold'
	.field public bool 'SaveETL'
	.field public bool 'UseETW'
	.property instance int32 'BadObjectCount'()
	{
		.get instance int32 'GCHeapDumper'::'get_BadObjectCount'()
	}
}
.class public interface abstract import 'ICLRProfiling'
{
	.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 42 33 34 39 41 42 45 33 2D 42 35 36 46 2D 34 36 38 39 2D 42 46 43 44 2D 37 36 42 46 33 39 44 38 38 38 45 41 00 00)
	.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
	.method public virtual hidebysig newslot abstract 
		instance int32 'AttachProfiler'(int32 'dwProfileeProcessID', int32 'dwMillisecondsMax', valuetype ['mscorlib']'System'.'Guid'& 'pClsidProfiler', string 'wszProfilerPath', native int 'pvClientData', int32 'cbClientData')
	{
	}
}
.class public 'InteropInfo'
	extends ['mscorlib']'System'.'Object'
	implements ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'
{
	.class nested public 'CCWInfo'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
	}
	.class nested public 'ComInterfaceInfo'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
	}
	.class nested public 'InteropModuleInfo'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance string 'get_moduleName'()
		{
			ret
		}
		.method public static hidebysig 
			int32 'CompareBase'(class 'InteropInfo'/'InteropModuleInfo' 'one', class 'InteropInfo'/'InteropModuleInfo' 'two')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.field public uint64 'baseAddress'
		.field public string 'fileName'
		.field public uint32 'fileSize'
		.field public int32 'loadOrder'
		.field public uint32 'timeStamp'
		.property instance string 'moduleName'()
		{
			.get instance string 'InteropInfo'/'InteropModuleInfo'::'get_moduleName'()
		}
	}
	.class nested public 'RCWInfo'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
	}
	.method public hidebysig specialname 
		instance void '.ctor'([opt] bool 'fInitLater')
	{
		.param [1] = bool(false)
		ret
	}
	.method public hidebysig specialname 
		instance int32 'get_currentRCWCount'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int32 'get_currentCCWCount'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int32 'get_currentInterfaceCount'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int32 'get_currentModuleCount'()
	{
		ret
	}
	.method public hidebysig 
		instance void 'AddRCW'(class 'InteropInfo'/'RCWInfo' 'rcwInfo')
	{
		ret
	}
	.method public hidebysig 
		instance void 'AddCCW'(class 'InteropInfo'/'CCWInfo' 'ccwInfo')
	{
		ret
	}
	.method public hidebysig 
		instance void 'AddComInterface'(class 'InteropInfo'/'ComInterfaceInfo' 'interfaceInfo')
	{
		ret
	}
	.method public hidebysig 
		instance void 'AddModule'(class 'InteropInfo'/'InteropModuleInfo' 'moduleInfo')
	{
		ret
	}
	.method public hidebysig 
		instance bool 'InteropInfoExists'()
	{
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.ToStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Serializer' 'serializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'ToStream'
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.FromStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Deserializer' 'deserializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'FromStream'
		ret
	}
	.property instance int32 'currentCCWCount'()
	{
		.get instance int32 'InteropInfo'::'get_currentCCWCount'()
	}
	.property instance int32 'currentInterfaceCount'()
	{
		.get instance int32 'InteropInfo'::'get_currentInterfaceCount'()
	}
	.property instance int32 'currentModuleCount'()
	{
		.get instance int32 'InteropInfo'::'get_currentModuleCount'()
	}
	.property instance int32 'currentRCWCount'()
	{
		.get instance int32 'InteropInfo'::'get_currentRCWCount'()
	}
}
.class public 'JSHeapInfo'
	extends ['mscorlib']'System'.'Object'
	implements ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'
{
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.ToStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Serializer' 'serializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'ToStream'
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.FromStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Deserializer' 'deserializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'FromStream'
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'()
	{
		ret
	}
}
.class public 'Silverlight'
	extends ['mscorlib']'System'.'Object'
{
	.method public static hidebysig 
		class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug' 'DebugActiveSilverlightProcess'(int32 'processId', [opt] class 'Profiler'.'DebuggerCallBacks' 'callBacks')
	{
		.param [2] = nullref
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'()
	{
		ret
	}
}
.namespace 'ClrMemory'
{
	.class public 'ICorDebugAD'
		extends ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrAppDomain'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'name')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_Address'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_Id'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string 'get_Name'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string 'get_AppBase'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string 'get_ConfigurationFile'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrModule'> 'get_Modules'()
		{
			ret
		}
		.property instance uint64 'Address'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugAD'::'get_Address'()
		}
		.property instance string 'AppBase'()
		{
			.get instance string 'ClrMemory'.'ICorDebugAD'::'get_AppBase'()
		}
		.property instance string 'ConfigurationFile'()
		{
			.get instance string 'ClrMemory'.'ICorDebugAD'::'get_ConfigurationFile'()
		}
		.property instance int32 'Id'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugAD'::'get_Id'()
		}
		.property instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrModule'> 'Modules'()
		{
			.get instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrModule'> 'ClrMemory'.'ICorDebugAD'::'get_Modules'()
		}
		.property instance string 'Name'()
		{
			.get instance string 'ClrMemory'.'ICorDebugAD'::'get_Name'()
		}
	}
	.class public 'ICorDebugClrModule'
		extends ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrModule'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'fn')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string 'get_AssemblyName'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType'> 'EnumerateTypes'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string 'get_FileName'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_ImageBase'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsFile'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsDynamic'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string 'get_Name'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_Size'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_MetadataAddress'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object 'get_MetadataImport'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_MetadataLength'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_AssemblyId'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype ['mscorlib']'System.Diagnostics'.'DebuggableAttribute'/'DebuggingModes' 'get_DebuggingMode'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'GetTypeByName'(string 'name')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'SourceLocation' 'GetSourceInformation'(class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrMethod' 'method', int32 'ilOffset')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'SourceLocation' 'GetSourceInformation'(uint32 'mdMethodToken', int32 'ilOffset')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool 'IsMatchingPdb'(string 'pdbPath')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsPdbLoaded'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'LoadPdb'(string 'path')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string 'TryDownloadPdb'(class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ISymbolNotification' 'notification')
		{
			ret
		}
		.property instance uint64 'AssemblyId'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugClrModule'::'get_AssemblyId'()
		}
		.property instance string 'AssemblyName'()
		{
			.get instance string 'ClrMemory'.'ICorDebugClrModule'::'get_AssemblyName'()
		}
		.property instance valuetype ['mscorlib']'System.Diagnostics'.'DebuggableAttribute'/'DebuggingModes' 'DebuggingMode'()
		{
			.get instance valuetype ['mscorlib']'System.Diagnostics'.'DebuggableAttribute'/'DebuggingModes' 'ClrMemory'.'ICorDebugClrModule'::'get_DebuggingMode'()
		}
		.property instance string 'FileName'()
		{
			.get instance string 'ClrMemory'.'ICorDebugClrModule'::'get_FileName'()
		}
		.property instance uint64 'ImageBase'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugClrModule'::'get_ImageBase'()
		}
		.property instance bool 'IsDynamic'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugClrModule'::'get_IsDynamic'()
		}
		.property instance bool 'IsFile'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugClrModule'::'get_IsFile'()
		}
		.property instance bool 'IsPdbLoaded'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugClrModule'::'get_IsPdbLoaded'()
		}
		.property instance uint64 'MetadataAddress'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugClrModule'::'get_MetadataAddress'()
		}
		.property instance object 'MetadataImport'()
		{
			.get instance object 'ClrMemory'.'ICorDebugClrModule'::'get_MetadataImport'()
		}
		.property instance uint64 'MetadataLength'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugClrModule'::'get_MetadataLength'()
		}
		.property instance string 'Name'()
		{
			.get instance string 'ClrMemory'.'ICorDebugClrModule'::'get_Name'()
		}
		.property instance uint64 'Size'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugClrModule'::'get_Size'()
		}
	}
	.class public 'ICorDebugGCHeap'
		extends ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'process')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'GetObjectType'(uint64 'objRef')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'GetTypeByIndex'(int32 'typeIndex')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_TypeIndexLimit'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrRoot'> 'EnumerateRoots'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrRoot'> 'EnumerateRoots'(bool 'enumStatics')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_CanWalkHeap'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrSegment' 'GetSegmentByAddress'(uint64 'objRef')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_TotalHeapSize'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance uint64 'GetSizeByGen'(int32 'gen')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_PointerSize'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrSegment'> 'get_Segments'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<uint64> 'EnumerateObjects'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'GetTypeByName'(string 'name')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool 'ReadPointer'(uint64 'addr', [out] uint64& 'value')
		{
			ret
		}
		.field family int32 'm_lastSegmentIdx'
		.field family class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrSegment'[] 'm_segments'
		.property instance bool 'CanWalkHeap'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeap'::'get_CanWalkHeap'()
		}
		.property instance int32 'PointerSize'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeap'::'get_PointerSize'()
		}
		.property instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrSegment'> 'Segments'()
		{
			.get instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrSegment'> 'ClrMemory'.'ICorDebugGCHeap'::'get_Segments'()
		}
		.property instance uint64 'TotalHeapSize'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugGCHeap'::'get_TotalHeapSize'()
		}
		.property instance int32 'TypeIndexLimit'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeap'::'get_TypeIndexLimit'()
		}
	}
	.class public 'ICorDebugGCHeapField'
		extends ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInstanceField'
	{
		.method public virtual hidebysig specialname 
			instance string 'get_Name'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_Offset'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'get_Type'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance uint64 'GetFieldAddress'(uint64 'objRef', bool 'interior')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object 'GetFieldValue'(uint64 'objRef', bool 'interior')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_Size'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_HasSimpleValue'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrElementType' 'get_ElementType'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsInternal'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsPrivate'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsProtected'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsPublic'()
		{
			ret
		}
		.property instance valuetype ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrElementType' 'ElementType'()
		{
			.get instance valuetype ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrElementType' 'ClrMemory'.'ICorDebugGCHeapField'::'get_ElementType'()
		}
		.property instance bool 'HasSimpleValue'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapField'::'get_HasSimpleValue'()
		}
		.property instance bool 'IsInternal'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapField'::'get_IsInternal'()
		}
		.property instance bool 'IsPrivate'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapField'::'get_IsPrivate'()
		}
		.property instance bool 'IsProtected'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapField'::'get_IsProtected'()
		}
		.property instance bool 'IsPublic'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapField'::'get_IsPublic'()
		}
		.property instance string 'Name'()
		{
			.get instance string 'ClrMemory'.'ICorDebugGCHeapField'::'get_Name'()
		}
		.property instance int32 'Offset'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeapField'::'get_Offset'()
		}
		.property instance int32 'Size'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeapField'::'get_Size'()
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'Type'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'ClrMemory'.'ICorDebugGCHeapField'::'get_Type'()
		}
	}
	.class public 'ICorDebugGCHeapRoot'
		extends ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrRoot'
	{
		.method public virtual hidebysig specialname 
			instance string 'get_Name'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'get_Type'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrAppDomain' 'get_AppDomain'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'GCRootKind' 'get_Kind'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_Object'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_Address'()
		{
			ret
		}
		.property instance uint64 'Address'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugGCHeapRoot'::'get_Address'()
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrAppDomain' 'AppDomain'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrAppDomain' 'ClrMemory'.'ICorDebugGCHeapRoot'::'get_AppDomain'()
		}
		.property instance valuetype ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'GCRootKind' 'Kind'()
		{
			.get instance valuetype ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'GCRootKind' 'ClrMemory'.'ICorDebugGCHeapRoot'::'get_Kind'()
		}
		.property instance string 'Name'()
		{
			.get instance string 'ClrMemory'.'ICorDebugGCHeapRoot'::'get_Name'()
		}
		.property instance uint64 'Object'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugGCHeapRoot'::'get_Object'()
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'Type'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'ClrMemory'.'ICorDebugGCHeapRoot'::'get_Type'()
		}
	}
	.class public 'ICorDebugGCHeapSegment'
		extends ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrSegment'
	{
		.method public virtual hidebysig specialname 
			instance uint64 'get_Start'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint64 'get_End'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'get_Heap'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_ProcessorAffinity'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<uint64> 'EnumerateObjects'()
		{
			ret
		}
		.property instance uint64 'End'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugGCHeapSegment'::'get_End'()
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'Heap'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'ClrMemory'.'ICorDebugGCHeapSegment'::'get_Heap'()
		}
		.property instance int32 'ProcessorAffinity'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeapSegment'::'get_ProcessorAffinity'()
		}
		.property instance uint64 'Start'()
		{
			.get instance uint64 'ClrMemory'.'ICorDebugGCHeapSegment'::'get_Start'()
		}
	}
	.class public 'ICorDebugGCHeapType'
		extends ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType'
	{
		.method public virtual hidebysig specialname 
			instance string 'get_Name'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_Index'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance uint64 'GetSize'(uint64 'objRef')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'EnumerateRefsOfObject'(uint64 'objRef', class ['mscorlib']'System'.'Action`2'<uint64,int32> 'action')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'EnumerateRefsOfObjectCarefully'(uint64 'objRef', class ['mscorlib']'System'.'Action`2'<uint64,int32> 'action')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'get_Heap'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrModule' 'get_Module'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_HasSimpleValue'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object 'GetValue'(uint64 'address')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsArray'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'get_ArrayComponentType'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 'GetArrayLength'(uint64 'objRef')
		{
			ret
		}
		.method public virtual hidebysig 
			instance uint64 'GetArrayElementAddress'(uint64 'objRef', int32 'index')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object 'GetArrayElementValue'(uint64 'objRef', int32 'index')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool 'GetFieldForOffset'(int32 'fieldOffset', bool 'inner', [out] class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInstanceField'& 'childField', [out] int32& 'childFieldOffset')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInstanceField'> 'get_Fields'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'get_BaseType'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInstanceField' 'GetFieldByName'(string 'name')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'get_TypeKind'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_ElementSize'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 'get_BaseSize'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInterface'> 'get_Interfaces'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsAbstract'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsFinalizable'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsInterface'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsInternal'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsPrivate'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsProtected'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsPublic'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool 'get_IsSealed'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrStaticField' 'GetStaticFieldByName'(string 'name')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance uint32 'get_MetadataToken'()
		{
			ret
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'ArrayComponentType'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'ClrMemory'.'ICorDebugGCHeapType'::'get_ArrayComponentType'()
		}
		.property instance int32 'BaseSize'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeapType'::'get_BaseSize'()
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'BaseType'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrType' 'ClrMemory'.'ICorDebugGCHeapType'::'get_BaseType'()
		}
		.property instance int32 'ElementSize'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeapType'::'get_ElementSize'()
		}
		.property instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInstanceField'> 'Fields'()
		{
			.get instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInstanceField'> 'ClrMemory'.'ICorDebugGCHeapType'::'get_Fields'()
		}
		.property instance bool 'HasSimpleValue'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_HasSimpleValue'()
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'Heap'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrHeap' 'ClrMemory'.'ICorDebugGCHeapType'::'get_Heap'()
		}
		.property instance int32 'Index'()
		{
			.get instance int32 'ClrMemory'.'ICorDebugGCHeapType'::'get_Index'()
		}
		.property instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInterface'> 'Interfaces'()
		{
			.get instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrInterface'> 'ClrMemory'.'ICorDebugGCHeapType'::'get_Interfaces'()
		}
		.property instance bool 'IsAbstract'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsAbstract'()
		}
		.property instance bool 'IsArray'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsArray'()
		}
		.property instance bool 'IsFinalizable'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsFinalizable'()
		}
		.property instance bool 'IsInterface'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsInterface'()
		}
		.property instance bool 'IsInternal'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsInternal'()
		}
		.property instance bool 'IsPrivate'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsPrivate'()
		}
		.property instance bool 'IsProtected'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsProtected'()
		}
		.property instance bool 'IsPublic'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsPublic'()
		}
		.property instance bool 'IsSealed'()
		{
			.get instance bool 'ClrMemory'.'ICorDebugGCHeapType'::'get_IsSealed'()
		}
		.property instance uint32 'MetadataToken'()
		{
			.get instance uint32 'ClrMemory'.'ICorDebugGCHeapType'::'get_MetadataToken'()
		}
		.property instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrModule' 'Module'()
		{
			.get instance class ['Microsoft.Diagnostics.Runtime']'Microsoft.Diagnostics.Runtime'.'ClrModule' 'ClrMemory'.'ICorDebugGCHeapType'::'get_Module'()
		}
		.property instance string 'Name'()
		{
			.get instance string 'ClrMemory'.'ICorDebugGCHeapType'::'get_Name'()
		}
		.property instance valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'TypeKind'()
		{
			.get instance valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ClrMemory'.'ICorDebugGCHeapType'::'get_TypeKind'()
		}
	}
}
.namespace 'Microsoft.Diagnostics.HeapDump'
{
	.class public 'CollectionMetadata'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.Diagnostics.HeapDump'.'TargetSource' 'get_Source'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool 'get_Is64BitSource'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<string> 'get_ConfigurationDirectories'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.property instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<string> 'ConfigurationDirectories'()
		{
			.get instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<string> 'Microsoft.Diagnostics.HeapDump'.'CollectionMetadata'::'get_ConfigurationDirectories'()
		}
		.property instance bool 'Is64BitSource'()
		{
			.get instance bool 'Microsoft.Diagnostics.HeapDump'.'CollectionMetadata'::'get_Is64BitSource'()
		}
		.property instance valuetype 'Microsoft.Diagnostics.HeapDump'.'TargetSource' 'Source'()
		{
			.get instance valuetype 'Microsoft.Diagnostics.HeapDump'.'TargetSource' 'Microsoft.Diagnostics.HeapDump'.'CollectionMetadata'::'get_Source'()
		}
	}
	.class public sealed 'HR'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'CouldNotAccessDac' = int32(0x81220006)
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'CouldNotFindProcessId' = int32(0x81220002)
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'NoDotNetRuntimeFound' = int32(0x81220005)
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'NoHeapFound' = int32(0x81220001)
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'Opening32BitDumpIn64BitProcess' = int32(0x81220003)
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'Opening64BitDumpIn32BitProcess' = int32(0x81220004)
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'UnknownError' = int32(0x81220000)
	}
	.class public 'HeapDumpException'
		extends ['mscorlib']'System'.'ApplicationException'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message', valuetype 'Microsoft.Diagnostics.HeapDump'.'HR' 'hr')
		{
			ret
		}
	}
	.class public sealed 'TargetSource'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'TargetSource' 'LiveProcess' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Diagnostics.HeapDump'.'TargetSource' 'MiniDumpFile' = int32(0x00000001)
	}
}
.namespace 'Microsoft.Samples.Debugging.CorDebug'
{
	.class public sealed 'HResult'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_E_FIRST' = int32(0x80040170)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_E_LAST' = int32(0x8004017F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_E_NOCACHE_UPDATED' = int32(0x80040170)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_S_FIRST' = int32(0x00040170)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_S_FORMATETC_NOTSUPPORTED' = int32(0x00040170)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_S_LAST' = int32(0x0004017F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_S_SAMECACHE' = int32(0x00040171)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CACHE_S_SOMECACHES_NOTUPDATED' = int32(0x00040172)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CAT_E_CATIDNOEXIST' = int32(0x80040160)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CAT_E_FIRST' = int32(0x80040160)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CAT_E_LAST' = int32(0x80040161)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CAT_E_NODESCRIPTION' = int32(0x80040161)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CEE_E_CVTRES_NOT_FOUND' = int32(0x80131001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CEE_E_ENTRYPOINT' = int32(0x80131000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_ALIGNMENT_FAULT' = int32(0x80094010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_ARCHIVED_KEY_REQUIRED' = int32(0x80094804)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_ARCHIVED_KEY_UNEXPECTED' = int32(0x80094810)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE' = int32(0x8009400E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_BAD_RENEWAL_SUBJECT' = int32(0x80094806)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_BAD_REQUESTSTATUS' = int32(0x80094003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_BAD_REQUESTSUBJECT' = int32(0x80094001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL' = int32(0x8009400C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_BAD_TEMPLATE_VERSION' = int32(0x80094807)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_CERT_TYPE_OVERLAP' = int32(0x80094814)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE' = int32(0x80094013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_ENCODING_LENGTH' = int32(0x80094007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_ENROLL_DENIED' = int32(0x80094011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_INVALID_CA_CERTIFICATE' = int32(0x80094005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_ISSUANCE_POLICY_REQUIRED' = int32(0x8009480C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED' = int32(0x8009400A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_KEY_LENGTH' = int32(0x80094811)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_NO_CAADMIN_DEFINED' = int32(0x8009400D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_NO_CERT_TYPE' = int32(0x80094801)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_NO_DB_SESSIONS' = int32(0x8009400F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_NO_REQUEST' = int32(0x80094002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_NO_VALID_KRA' = int32(0x8009400B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_PROPERTY_EMPTY' = int32(0x80094004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_RESTRICTEDOFFICER' = int32(0x80094009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_ROLECONFLICT' = int32(0x80094008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SERVER_SUSPENDED' = int32(0x80094006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SIGNATURE_COUNT' = int32(0x8009480A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SIGNATURE_POLICY_REQUIRED' = int32(0x80094809)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SIGNATURE_REJECTED' = int32(0x8009480B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SMIME_REQUIRED' = int32(0x80094805)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED' = int32(0x80094803)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED' = int32(0x8009480E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SUBJECT_DNS_REQUIRED' = int32(0x8009480F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SUBJECT_EMAIL_REQUIRED' = int32(0x80094812)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_SUBJECT_UPN_REQUIRED' = int32(0x8009480D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_TEMPLATE_CONFLICT' = int32(0x80094802)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_TEMPLATE_DENIED' = int32(0x80094012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_TEMPLATE_POLICY_REQUIRED' = int32(0x80094808)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_UNKNOWN_CERT_TYPE' = int32(0x80094813)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERTSRV_E_UNSUPPORTED_CERT_TYPE' = int32(0x80094800)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_CHAINING' = int32(0x800B010A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_CN_NO_MATCH' = int32(0x800B010F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_CRITICAL' = int32(0x800B0105)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_EXPIRED' = int32(0x800B0101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_INVALID_NAME' = int32(0x800B0114)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_INVALID_POLICY' = int32(0x800B0113)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_ISSUERCHAINING' = int32(0x800B0107)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_MALFORMED' = int32(0x800B0108)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_PATHLENCONST' = int32(0x800B0104)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_PURPOSE' = int32(0x800B0106)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_REVOCATION_FAILURE' = int32(0x800B010E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_REVOKED' = int32(0x800B010C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_ROLE' = int32(0x800B0103)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_UNTRUSTEDCA' = int32(0x800B0112)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_UNTRUSTEDROOT' = int32(0x800B0109)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_UNTRUSTEDTESTROOT' = int32(0x800B010D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_VALIDITYPERIODNESTING' = int32(0x800B0102)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CERT_E_WRONG_USAGE' = int32(0x800B0110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLASSFACTORY_E_FIRST' = int32(0x80040110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLASSFACTORY_E_LAST' = int32(0x8004011F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLASSFACTORY_S_FIRST' = int32(0x00040110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLASSFACTORY_S_LAST' = int32(0x0004011F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLASS_E_CLASSNOTAVAILABLE' = int32(0x80040111)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLASS_E_NOAGGREGATION' = int32(0x80040110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLASS_E_NOTLICENSED' = int32(0x80040112)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_BADUPDATEMODE' = int32(0x80131110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_COLUMN_OVERFLOW' = int32(0x80131140)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_COLUMN_PKNONULLS' = int32(0x80131143)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_COLUMN_READONLY' = int32(0x80131141)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_COLUMN_SPECIALCOL' = int32(0x80131142)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_FILE_BADREAD' = int32(0x80131100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_FILE_BADWRITE' = int32(0x80131101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_FILE_CORRUPT' = int32(0x8013110E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_FILE_OLDVER' = int32(0x80131107)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_FILE_READONLY' = int32(0x80131103)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_INCOMPATIBLE' = int32(0x8013110D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_INDEX_BADTYPE' = int32(0x80131123)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_INDEX_DUPLICATE' = int32(0x80131122)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_INDEX_NONULLKEYS' = int32(0x80131121)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_INDEX_NOTFOUND' = int32(0x80131124)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_INTERNALERROR' = int32(0x80131FFF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_NAME_ERROR' = int32(0x80131105)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_NO_DATA' = int32(0x8013110B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_OBJECT_COLNOTFOUND' = int32(0x80131152)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_OBJECT_NOTFOUND' = int32(0x80131151)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_READONLY' = int32(0x8013110C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_RECORD_DELETED' = int32(0x80131134)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_RECORD_DUPLICATE' = int32(0x80131132)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_RECORD_NOTFOUND' = int32(0x80131130)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_RECORD_OUTOFORDER' = int32(0x80131135)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_RECORD_OVERFLOW' = int32(0x80131131)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_RECORD_PKREQUIRED' = int32(0x80131133)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_RELOCATED' = int32(0x80131108)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_SCHEMA_VERNOTFOUND' = int32(0x8013110F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_SMDUPLICATE' = int32(0x8013110A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_TABLE_CANTDROP' = int32(0x80131150)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_TOO_BIG' = int32(0x80131154)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_TRUNCATION' = int32(0x80131106)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_E_VECTOR_BADINDEX' = int32(0x80131153)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_S_INDEX_TABLESCANREQUIRED' = int32(0x00131125)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_S_NULL' = int32(0x00131109)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLDB_S_TRUNCATION' = int32(0x00131106)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIENTSITE_E_FIRST' = int32(0x80040190)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIENTSITE_E_LAST' = int32(0x8004019F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIENTSITE_S_FIRST' = int32(0x00040190)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIENTSITE_S_LAST' = int32(0x0004019F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_E_BAD_DATA' = int32(0x800401D3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_E_CANT_CLOSE' = int32(0x800401D4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_E_CANT_EMPTY' = int32(0x800401D1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_E_CANT_OPEN' = int32(0x800401D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_E_CANT_SET' = int32(0x800401D2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_E_FIRST' = int32(0x800401D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_E_LAST' = int32(0x800401DF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_S_FIRST' = int32(0x000401D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLIPBRD_S_LAST' = int32(0x000401DF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLR_E_SHIM_INSTALLCOMP' = int32(0x80131703)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLR_E_SHIM_INSTALLROOT' = int32(0x80131702)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLR_E_SHIM_RUNTIMEEXPORT' = int32(0x80131701)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CLR_E_SHIM_RUNTIMELOAD' = int32(0x80131700)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_ALREADYINSTALLED' = int32(0x80110404)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_AMBIGUOUS_APPLICATION_NAME' = int32(0x8011045C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_AMBIGUOUS_PARTITION_NAME' = int32(0x8011045D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_APPDIRNOTFOUND' = int32(0x8011041F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_APPLICATIONEXISTS' = int32(0x8011040B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_APPLID_MATCHES_CLSID' = int32(0x80110446)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_APP_FILE_READFAIL' = int32(0x80110408)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_APP_FILE_VERSION' = int32(0x80110409)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_APP_FILE_WRITEFAIL' = int32(0x80110407)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_APP_NOT_RUNNING' = int32(0x8011080A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_AUTHENTICATIONLEVEL' = int32(0x80110413)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_BADPATH' = int32(0x8011040A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_BADREGISTRYLIBID' = int32(0x8011041E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_BADREGISTRYPROGID' = int32(0x80110412)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET' = int32(0x8011081F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_BASE_PARTITION_ONLY' = int32(0x80110450)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CANNOT_ALIAS_EVENTCLASS' = int32(0x80110820)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CANTCOPYFILE' = int32(0x8011040D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CANTMAKEINPROCSERVICE' = int32(0x80110814)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CANTRECYCLELIBRARYAPPS' = int32(0x8011080F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CANTRECYCLESERVICEAPPS' = int32(0x80110811)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT' = int32(0x8011044D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY' = int32(0x8011044A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAN_NOT_EXPORT_SYS_APP' = int32(0x8011044C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAN_NOT_START_APP' = int32(0x8011044B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_BITNESSMISMATCH' = int32(0x80110482)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME' = int32(0x80110457)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED' = int32(0x8011045B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_INVALID_PARTITION_NAME' = int32(0x80110458)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_PARTITION_IN_USE' = int32(0x80110459)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED' = int32(0x80110485)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_SERVERFAULT' = int32(0x80110486)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_UNACCEPTABLEBITNESS' = int32(0x80110483)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CAT_WRONGAPPBITNESS' = int32(0x80110484)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_CLSIDORIIDMISMATCH' = int32(0x80110418)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPFILE_BADTLB' = int32(0x80110428)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPFILE_CLASSNOTAVAIL' = int32(0x80110427)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPFILE_DOESNOTEXIST' = int32(0x80110424)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPFILE_GETCLASSOBJ' = int32(0x80110426)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPFILE_LOADDLLFAIL' = int32(0x80110425)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPFILE_NOREGISTRAR' = int32(0x80110434)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPFILE_NOTINSTALLABLE' = int32(0x80110429)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMPONENTEXISTS' = int32(0x80110439)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMP_MOVE_BAD_DEST' = int32(0x8011042E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMP_MOVE_DEST' = int32(0x8011081D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMP_MOVE_LOCKED' = int32(0x8011042D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMP_MOVE_PRIVATE' = int32(0x8011081E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COMP_MOVE_SOURCE' = int32(0x8011081C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_COREQCOMPINSTALLED' = int32(0x80110435)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET' = int32(0x80110816)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_DLLLOADFAILED' = int32(0x8011041D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_DLLREGISTERSERVER' = int32(0x8011041A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER' = int32(0x8011044E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES' = int32(0x8011045A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_INVALIDUSERIDS' = int32(0x80110410)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_INVALID_PARTITION' = int32(0x8011080B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_KEYMISSING' = int32(0x80110403)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT' = int32(0x8011081A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS' = int32(0x8011081B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE' = int32(0x8011044F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_MIG_SCHEMANOTFOUND' = int32(0x80110481)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_MIG_VERSIONNOTSUPPORTED' = int32(0x80110480)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_NOREGISTRYCLSID' = int32(0x80110411)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_NOSERVERSHARE' = int32(0x8011041B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_NOTCHANGEABLE' = int32(0x8011042A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_NOTDELETEABLE' = int32(0x8011042B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_NOTINREGISTRY' = int32(0x8011043E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_NOUSER' = int32(0x8011040F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_OBJECTERRORS' = int32(0x80110401)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_OBJECTEXISTS' = int32(0x80110438)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_OBJECTINVALID' = int32(0x80110402)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_OBJECTNOTPOOLABLE' = int32(0x8011043F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_OBJECT_DOES_NOT_EXIST' = int32(0x80110809)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_OBJECT_PARENT_MISSING' = int32(0x80110808)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PARTITIONS_DISABLED' = int32(0x80110824)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PARTITION_ACCESSDENIED' = int32(0x80110818)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PARTITION_MSI_ONLY' = int32(0x80110819)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED' = int32(0x80110813)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PRIVATE_ACCESSDENIED' = int32(0x80110821)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PROCESSALREADYRECYCLED' = int32(0x80110812)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PROGIDINUSEBYCLSID' = int32(0x80110815)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PROPERTYSAVEFAILED' = int32(0x80110437)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_PROPERTY_OVERFLOW' = int32(0x8011043C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED' = int32(0x80110817)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGDB_ALREADYRUNNING' = int32(0x80110475)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGDB_NOTINITIALIZED' = int32(0x80110472)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGDB_NOTOPEN' = int32(0x80110473)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGDB_SYSTEMERR' = int32(0x80110474)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGFILE_CORRUPT' = int32(0x8011043B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGISTERTLB' = int32(0x80110430)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGISTRARFAILED' = int32(0x80110423)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REGISTRY_ACCESSDENIED' = int32(0x80110823)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REMOTEINTERFACE' = int32(0x80110419)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM' = int32(0x80110449)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_ROLEEXISTS' = int32(0x8011040C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_ROLE_DOES_NOT_EXIST' = int32(0x80110447)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_SAFERINVALID' = int32(0x80110822)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_SERVICENOTINSTALLED' = int32(0x80110436)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_SESSION' = int32(0x8011042C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_START_APP_DISABLED' = int32(0x80110451)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_START_APP_NEEDS_COMPONENTS' = int32(0x80110448)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE' = int32(0x8011080D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_SYSTEMAPP' = int32(0x80110433)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_USERPASSWDNOTVALID' = int32(0x80110414)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMADMIN_E_USER_IN_SET' = int32(0x8011080E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMQC_E_APPLICATION_NOT_QUEUED' = int32(0x80110600)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMQC_E_BAD_MESSAGE' = int32(0x80110604)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMQC_E_NO_IPERSISTSTREAM' = int32(0x80110603)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMQC_E_NO_QUEUEABLE_INTERFACES' = int32(0x80110601)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE' = int32(0x80110602)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMQC_E_UNAUTHENTICATED' = int32(0x80110605)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COMQC_E_UNTRUSTED_ENQUEUER' = int32(0x80110606)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_ABORTED' = int32(0x8004E002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_ABORTING' = int32(0x8004E003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_FIRST' = int32(0x8004E000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_LAST' = int32(0x8004E02F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_NOCONTEXT' = int32(0x8004E004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_NOJIT' = int32(0x8004E026)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_NOTRANSACTION' = int32(0x8004E027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_OLDREF' = int32(0x8004E007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_ROLENOTFOUND' = int32(0x8004E00C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_SYNCH_TIMEOUT' = int32(0x8004E006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_TMNOTAVAILABLE' = int32(0x8004E00F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_E_WOULD_DEADLOCK' = int32(0x8004E005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_S_FIRST' = int32(0x0004E000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONTEXT_S_LAST' = int32(0x0004E02F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_FIRST' = int32(0x800401C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_LAST' = int32(0x800401CF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_OLESTREAM_BITMAP_TO_DIB' = int32(0x800401C3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_OLESTREAM_FMT' = int32(0x800401C2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_OLESTREAM_GET' = int32(0x800401C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_OLESTREAM_PUT' = int32(0x800401C1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_STG_DIB_TO_BITMAP' = int32(0x800401C6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_STG_FMT' = int32(0x800401C4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_E_STG_NO_STD_STREAM' = int32(0x800401C5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_S_FIRST' = int32(0x000401C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_S_LAST' = int32(0x000401CF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CONVERT10_S_NO_PRESENTATION' = int32(0x000401C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_BAD_REFERENCE_VALUE' = int32(0x80131305)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_BAD_THREAD_STATE' = int32(0x8013132D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANNOT_BE_ON_ATTACH' = int32(0x80131C13)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANNOT_DEBUG_FIBER_PROCESS' = int32(0x80131C16)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANNOT_RESOLVE_ASSEMBLY' = int32(0x80131C11)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_CALL_ON_THIS_THREAD' = int32(0x80131C09)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_CHANGE_JIT_SETTING_FOR_ZAP_MODULE' = int32(0x8013131D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_INTEROP_STEP_OUT' = int32(0x80131C20)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_SETIP_INTO_OR_OUT_OF_FILTER' = int32(0x8013131C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_SET_IP_INTO_CATCH' = int32(0x80131310)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_SET_IP_INTO_FINALLY' = int32(0x8013130E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_SET_IP_OUT_OF_CATCH_ON_WIN64' = int32(0x8013131F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_SET_IP_OUT_OF_FINALLY' = int32(0x8013130F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_SET_IP_OUT_OF_FINALLY_ON_WIN64' = int32(0x8013131E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_SET_TO_JMC' = int32(0x80131323)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CANT_UNWIND_ABOVE_CALLBACK' = int32(0x80131C03)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CLASS_NOT_LOADED' = int32(0x80131303)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_CODE_NOT_AVAILABLE' = int32(0x80131309)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_DEBUGGER_ALREADY_ATTACHED' = int32(0x8013132E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_DEBUGGING_NOT_POSSIBLE' = int32(0x80131346)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_DETACH_FAILED_OUTSTANDING_BREAKPOINTS' = int32(0x80131C21)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_DETACH_FAILED_OUTSTANDING_EVALS' = int32(0x80131C18)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_DETACH_FAILED_OUTSTANDING_STEPPERS' = int32(0x80131C19)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_BAD_METHOD_INFO' = int32(0x8013133E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_CANT_ADD_FIELD_TO_VALUE_OR_LAYOUT_CLASS' = int32(0x80131338)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_CANT_ADD_NON_PRIVATE_MEMBER' = int32(0x8013133A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_CANT_CHANGE_FIELD' = int32(0x80131339)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_CANT_CHANGE_SUPERCLASS' = int32(0x80131344)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_EDIT_NOT_SUPPORTED' = int32(0x80131C0E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_EH_MAX_NESTING_LEVEL_CANT_INCREASE' = int32(0x80131331)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_HANGING_FIELD' = int32(0x80131342)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_INFOLESS_METHOD' = int32(0x80131C0A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_INTERNAL_ERROR' = int32(0x80131341)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_IN_FUNCLET' = int32(0x80131C0C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_JIT_CANT_UPDATE' = int32(0x8013133F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_LOCALLOC' = int32(0x80131C0D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_METHOD_NO_LOCAL_SIG' = int32(0x80131337)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_METHOD_SIG_CHANGED' = int32(0x80131336)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_MISSING_CLASS' = int32(0x80131340)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_MODULE_NOT_ENC_ENABLED' = int32(0x80131332)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_NESTED_HANLDERS' = int32(0x80131C0B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ENC_ZAPPED_WITHOUT_ENC' = int32(0x8013133D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FAIL_TO_UNWIND_FRAME' = int32(0x80131325)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FEABORT_DELAYED_UNTIL_THREAD_RESUMED' = int32(0x80131C0F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FIELD_NOT_AVAILABLE' = int32(0x80131306)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FIELD_NOT_INSTANCE' = int32(0x8013133C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FIELD_NOT_STATIC' = int32(0x8013133B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FUNCTION_NOT_IL' = int32(0x8013130A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FUNC_EVAL_BAD_START_POINT' = int32(0x80131313)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_FUNC_EVAL_NOT_COMPLETE' = int32(0x80131315)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_HANDLE_HAS_BEEN_DISPOSED' = int32(0x80131C01)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_HELPER_THREAD_DEAD' = int32(0x80131349)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ILLEGAL_AT_GC_UNSAFE_POINT' = int32(0x80131C23)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ILLEGAL_IN_NATIVE_CODE' = int32(0x80131C25)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ILLEGAL_IN_OPTIMIZED_CODE' = int32(0x80131C26)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ILLEGAL_IN_PROLOG' = int32(0x80131C24)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ILLEGAL_IN_STACK_OVERFLOW' = int32(0x80131C22)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_ILLEGAL_SHUTDOWN_ORDER' = int32(0x80131C15)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_IL_VAR_NOT_AVAILABLE' = int32(0x80131304)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_INCOMPATIBLE_PROTOCOL' = int32(0x8013134B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_INPROC_NOT_IMPL' = int32(0x80131318)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_INTERCEPT_FRAME_ALREADY_SET' = int32(0x80131C04)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_INTERFACE_INHERITANCE_CANT_CHANGE' = int32(0x8013134A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_INTEROP_NOT_SUPPORTED' = int32(0x8013134D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_INVALID_OBJECT' = int32(0x80131314)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_KERNEL_DEBUGGER_ENABLED' = int32(0x80131347)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_KERNEL_DEBUGGER_PRESENT' = int32(0x80131348)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_LIBRARY_PROVIDER_ERROR' = int32(0x80131C43)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_MISSING_DATA_TARGET_INTERFACE' = int32(0x80131C45)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_MISSING_METADATA' = int32(0x80131C35)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_MODULE_LOADED_FROM_DISK' = int32(0x80131C3A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_MODULE_NOT_LOADED' = int32(0x80131343)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_MUST_BE_INTEROP_DEBUGGING' = int32(0x80131C06)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_MUST_BE_IN_CREATE_PROCESS' = int32(0x80131C17)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_MUST_BE_IN_LOAD_MODULE' = int32(0x80131C12)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NATIVE_PATCH_ALREADY_AT_ADDR' = int32(0x80131C07)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NGEN_NOT_SUPPORTED' = int32(0x80131C14)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NONCONTINUABLE_EXCEPTION' = int32(0x80131308)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NONINTERCEPTABLE_EXCEPTION' = int32(0x80131C02)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NON_MATCHING_CONTEXT' = int32(0x80131327)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NON_NATIVE_FRAME' = int32(0x80131307)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NOTREADY' = int32(0x80131C10)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NOT_CHILD_FRAME' = int32(0x80131326)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NOT_CLR' = int32(0x80131C44)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NO_NATIVE_PATCH_AT_ADDR' = int32(0x80131C05)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_NO_REMAP_BREAKPIONT' = int32(0x8013134E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_OBJECT_IS_NOT_COPYABLE_VALUE_CLASS' = int32(0x8013131B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_OBJECT_NEUTERED' = int32(0x8013134F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_PAST_END_OF_STACK' = int32(0x80131328)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_PROCESS_DETACHED' = int32(0x80131335)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_PROCESS_NOT_SYNCHRONIZED' = int32(0x80131302)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_PROCESS_TERMINATED' = int32(0x80131301)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_READVIRTUAL_FAILURE' = int32(0x80131C49)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_REMOTE_CONNECTION_CONN_RESET' = int32(0x80131320)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_REMOTE_CONNECTION_FATAL_ERROR' = int32(0x80131322)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_REMOTE_CONNECTION_KEEP_ALIVE' = int32(0x80131321)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_SET_IP_IMPOSSIBLE' = int32(0x80131312)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_SET_IP_NOT_ALLOWED_ON_EXCEPTION' = int32(0x80131333)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_SET_IP_NOT_ALLOWED_ON_NONLEAF_FRAME' = int32(0x80131311)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_SET_VALUE_NOT_ALLOWED_ON_NONLEAF_FRAME' = int32(0x80131330)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_STATIC_VAR_NOT_AVAILABLE' = int32(0x8013131A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_SUPERFLOUS_CONTINUE' = int32(0x8013132F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_SYMBOLS_NOT_AVAILABLE' = int32(0x80131C3B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_THREAD_NOT_SCHEDULED' = int32(0x80131C00)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_TIMEOUT' = int32(0x80131C08)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_TOO_MANY_PROCESSES' = int32(0x8013134C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_UNABLE_TO_SET_BREAKPOINT' = int32(0x80131345)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_UNRECOVERABLE_ERROR' = int32(0x80131300)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_UNSUPPORTED_DEBUGGING_MODEL' = int32(0x80131C46)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_UNSUPPORTED_FORWARD_COMPAT' = int32(0x80131C47)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_UNSUPPORTED_VERSION_STRUCT' = int32(0x80131C48)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_VALUE_POINTS_TO_FUNCTION' = int32(0x80131C4A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_E_VARIABLE_IS_ACTUALLY_LITERAL' = int32(0x80131334)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_AT_END_OF_STACK' = int32(0x00131324)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_BAD_END_SEQUENCE_POINT' = int32(0x0013130C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_BAD_START_SEQUENCE_POINT' = int32(0x0013130B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_FUNC_EVAL_ABORTED' = int32(0x00131319)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_FUNC_EVAL_HAS_NO_RESULT' = int32(0x00131316)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_INSUFFICIENT_INFO_FOR_SET_IP' = int32(0x0013130D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_NOT_ALL_BITS_SET' = int32(0x00131C13)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORDBG_S_VALUE_POINTS_TO_VOID' = int32(0x00131317)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_CALL_ONLY_FROM_INIT' = int32(0x80131356)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_CANNOT_UPDATE_METHOD' = int32(0x80131353)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_DATAINCOMPLETE' = int32(0x80131351)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_FUNCTION_IS_PARAMETERIZED' = int32(0x8013135D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_FUNCTION_NOT_COMPILED' = int32(0x80131350)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_FUNCTION_NOT_IL' = int32(0x80131354)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_INPROC_ALREADY_BEGUN' = int32(0x80131359)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_INPROC_NOT_AVAILABLE' = int32(0x8013135A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_INPROC_NOT_ENABLED' = int32(0x80131357)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_JITMAPS_NOT_ENABLED' = int32(0x80131358)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_NOT_MANAGED_THREAD' = int32(0x80131355)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_NOT_REJITABLE_METHODS' = int32(0x80131352)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_NOT_YET_AVAILABLE' = int32(0x8013135B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORPROF_E_TYPE_IS_PARAMETERIZED' = int32(0x8013135C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_ABSTRACT' = int32(0x80131449)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_ASSEMBLY_LOAD_FAILED' = int32(0x80131445)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_ASSEMBLY_LOAD_FAILED_EX' = int32(0x80131446)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_BAD_ACTION' = int32(0x80131442)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_BAD_ACTION_ASM' = int32(0x8013143D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_BAD_ACTION_OTHER' = int32(0x8013143E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_BAD_ATTRIBUTE' = int32(0x8013143A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_BAD_NONCAS' = int32(0x80131444)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_BAD_PARENT' = int32(0x8013143F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_BAD_VERSION' = int32(0x80131441)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_EXCEPTION' = int32(0x8013144E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_EXCEPTION_HR' = int32(0x8013144F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_FAILED_TO_CREATE_PERM' = int32(0x8013143C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_MISSING_CONSTRUCTOR' = int32(0x8013143B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_NO_FIELD' = int32(0x8013144C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_NO_PROPERTY' = int32(0x8013144D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_NO_SELF_REF' = int32(0x80131443)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_TRUNCATED' = int32(0x80131440)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_TYPE_LOAD_FAILED' = int32(0x80131447)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_TYPE_LOAD_FAILED_EX' = int32(0x80131448)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_UNSUPPORTED_ENUM_TYPE' = int32(0x8013144B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSECATTR_E_UNSUPPORTED_TYPE' = int32(0x8013144A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_CONTAINER_NOT_FOUND' = int32(0x8013141C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_CRYPTO' = int32(0x80131430)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_CRYPTOAPI_CALL_FAILED' = int32(0x80131413)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_CRYPTO_UNEX_OPER' = int32(0x80131431)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_DECODE_SET' = int32(0x80131410)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_ENCODE_SET' = int32(0x80131411)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_INVALID_ATTR' = int32(0x80131415)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_INVALID_IMAGE_FORMAT' = int32(0x8013141D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_INVALID_PUBLICKEY' = int32(0x8013141E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_INVALID_STRONGNAME' = int32(0x8013141A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_MIN_GRANT_FAIL' = int32(0x80131417)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_MISSING_STRONGNAME' = int32(0x8013141B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_NO_EXEC_PERM' = int32(0x80131418)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_NO_SUITABLE_CSP' = int32(0x80131414)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_POLICY_EXCEPTION' = int32(0x80131416)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_SIGNATURE_MISMATCH' = int32(0x80131420)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_UNSUPPORTED_FORMAT' = int32(0x80131412)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CORSEC_E_XMLSYNTAX' = int32(0x80131419)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_ABANDONEDMUTEX' = int32(0x8013152D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_AMBIGUOUSMATCH' = int32(0x8000211D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_APPDOMAINUNLOADED' = int32(0x80131014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_APPLICATION' = int32(0x80131600)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_ARGUMENT' = int32(0x80070057)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_ARGUMENTOUTOFRANGE' = int32(0x80131502)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_ARITHMETIC' = int32(0x80070216)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_ARRAYTYPEMISMATCH' = int32(0x80131503)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_ASSEMBLYEXPECTED' = int32(0x80131018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_BADIMAGEFORMAT' = int32(0x8007000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_CANNOTUNLOADAPPDOMAIN' = int32(0x80131015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_COMOBJECTINUSE' = int32(0x8013152A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_CONTEXTMARSHAL' = int32(0x80131504)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_CUSTOMATTRIBUTEFORMAT' = int32(0x80131605)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_DATAMISALIGNED' = int32(0x80131541)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_DEVICESNOTSUPPORTED' = int32(0x80131540)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_DIVIDEBYZERO' = int32(0x80020012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_DLLNOTFOUND' = int32(0x80131524)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_DUPLICATEWAITOBJECT' = int32(0x80131529)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_ENTRYPOINTNOTFOUND' = int32(0x80131523)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_EXCEPTION' = int32(0x80131500)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_EXECUTIONENGINE' = int32(0x80131506)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_FAILFAST' = int32(0x80131623)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_FIELDACCESS' = int32(0x80131507)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_FILELOAD' = int32(0x80131621)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_FIXUPSINEXE' = int32(0x80131019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_FORMAT' = int32(0x80131537)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_HOSTPROTECTION' = int32(0x80131640)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_INDEXOUTOFRANGE' = int32(0x80131508)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_INVALIDCAST' = int32(0x80004002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_INVALIDCOMOBJECT' = int32(0x80131527)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_INVALIDFILTERCRITERIA' = int32(0x80131601)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_INVALIDOLEVARIANTTYPE' = int32(0x80131531)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_INVALIDOPERATION' = int32(0x80131509)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_INVALIDPROGRAM' = int32(0x8013153A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_IO' = int32(0x80131620)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_KEYNOTFOUND' = int32(0x80131577)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MARSHALDIRECTIVE' = int32(0x80131535)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MEMBERACCESS' = int32(0x8013151A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_METHODACCESS' = int32(0x80131510)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MISSINGFIELD' = int32(0x80131511)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MISSINGMANIFESTRESOURCE' = int32(0x80131532)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MISSINGMEMBER' = int32(0x80131512)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MISSINGMETHOD' = int32(0x80131513)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MISSINGSATELLITEASSEMBLY' = int32(0x80131536)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MODULE_HASH_CHECK_FAILED' = int32(0x80131039)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_MULTICASTNOTSUPPORTED' = int32(0x80131514)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_NEWER_RUNTIME' = int32(0x8013101B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_NOTCANCELABLE' = int32(0x8013153C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_NOTFINITENUMBER' = int32(0x80131528)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_NOTSUPPORTED' = int32(0x80131515)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_NO_LOADLIBRARY_ALLOWED' = int32(0x8013101A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_NULLREFERENCE' = int32(0x80004003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_OBJECTDISPOSED' = int32(0x80131622)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_OPERATIONCANCELED' = int32(0x8013153B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_OUTOFMEMORY' = int32(0x8007000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_OVERFLOW' = int32(0x80131516)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_PLATFORMNOTSUPPORTED' = int32(0x80131539)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_RANK' = int32(0x80131517)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_REFLECTIONTYPELOAD' = int32(0x80131602)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_REMOTING' = int32(0x8013150B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SAFEARRAYRANKMISMATCH' = int32(0x80131538)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SAFEARRAYTYPEMISMATCH' = int32(0x80131533)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SECURITY' = int32(0x8013150A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SEMAPHOREFULL' = int32(0x8013152B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SERIALIZATION' = int32(0x8013150C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SERVER' = int32(0x8013150E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SERVICEDCOMPONENT' = int32(0x8013150F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_STACKOVERFLOW' = int32(0x800703E9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SYNCHRONIZATIONLOCK' = int32(0x80131518)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_SYSTEM' = int32(0x80131501)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_TARGET' = int32(0x80131603)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_TARGETINVOCATION' = int32(0x80131604)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_TARGETPARAMCOUNT' = int32(0x8002000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_THREADABORTED' = int32(0x80131530)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_THREADINTERRUPTED' = int32(0x80131519)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_THREADSTATE' = int32(0x80131520)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_THREADSTOP' = int32(0x80131521)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_TIMEOUT' = int32(0x80131505)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_TYPEINITIALIZATION' = int32(0x80131534)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_TYPELOAD' = int32(0x80131522)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_TYPEUNLOADED' = int32(0x80131013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_UNAUTHORIZEDACCESS' = int32(0x80070005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_VERIFICATION' = int32(0x8013150D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'COR_E_WAITHANDLECANNOTBEOPENED' = int32(0x8013152C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ACCESSCHECKFAILED' = int32(0x8001012A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ACESINWRONGORDER' = int32(0x8001013A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ACNOTINITIALIZED' = int32(0x8001013F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ACTIVATIONFAILED' = int32(0x8004E021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ACTIVATIONFAILED_CATALOGERROR' = int32(0x8004E023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ACTIVATIONFAILED_EVENTLOGGED' = int32(0x8004E022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ACTIVATIONFAILED_TIMEOUT' = int32(0x8004E024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ALREADYINITIALIZED' = int32(0x800401F1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_APPDIDNTREG' = int32(0x800401FE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_APPNOTFOUND' = int32(0x800401F5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_APPSINGLEUSE' = int32(0x800401F6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ASYNC_WORK_REJECTED' = int32(0x80004029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT' = int32(0x80004024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_BAD_PATH' = int32(0x80080004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_BAD_SERVER_NAME' = int32(0x80004014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CANCEL_DISABLED' = int32(0x80010140)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CANTDETERMINECLASS' = int32(0x800401F2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CANT_REMOTE' = int32(0x80004013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CLASSSTRING' = int32(0x800401F3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CLASS_CREATE_FAILED' = int32(0x80080001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CLASS_DISABLED' = int32(0x80004027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CLRNOTAVAILABLE' = int32(0x80004028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CLSREG_INCONSISTENT' = int32(0x8000401F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CONVERSIONFAILED' = int32(0x8001012E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_CREATEPROCESS_FAILURE' = int32(0x80004018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_DBERROR' = int32(0x8004E02B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_DECODEFAILED' = int32(0x8001013D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_DLLNOTFOUND' = int32(0x800401F8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ERRORINAPP' = int32(0x800401F7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ERRORINDLL' = int32(0x800401F9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_EXCEEDSYSACLLIMIT' = int32(0x80010139)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOCLOSEHANDLE' = int32(0x80010138)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOCREATEFILE' = int32(0x80010137)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOGENUUID' = int32(0x80010136)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOGETSECCTX' = int32(0x80010124)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOGETTOKENINFO' = int32(0x80010126)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOGETWINDIR' = int32(0x80010134)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOIMPERSONATE' = int32(0x80010123)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOOPENPROCESSTOKEN' = int32(0x8001013C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOOPENTHREADTOKEN' = int32(0x80010125)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOQUERYCLIENTBLANKET' = int32(0x80010128)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FAILEDTOSETDACL' = int32(0x80010129)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_FIRST' = int32(0x800401F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_IIDREG_INCONSISTENT' = int32(0x80004020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_IIDSTRING' = int32(0x800401F4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INCOMPATIBLESTREAMVERSION' = int32(0x8001013B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INITIALIZATIONFAILED' = int32(0x8004E025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_CLASS_CACHE' = int32(0x80004009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_MEMORY_ALLOCATOR' = int32(0x80004008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_ONLY_SINGLE_THREADED' = int32(0x80004012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_RPC_CHANNEL' = int32(0x8000400A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_SCM_EXEC_FAILURE' = int32(0x80004011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_SCM_FILE_MAPPING_EXISTS' = int32(0x8000400F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_SCM_MAP_VIEW_OF_FILE' = int32(0x80004010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_SCM_MUTEX_EXISTS' = int32(0x8000400E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_SHARED_ALLOCATOR' = int32(0x80004007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_TLS' = int32(0x80004006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_TLS_CHANNEL_CONTROL' = int32(0x8000400C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_TLS_SET_CHANNEL_CONTROL' = int32(0x8000400B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INIT_UNACCEPTED_USER_ALLOCATOR' = int32(0x8000400D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_INVALIDSID' = int32(0x8001012D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_ISOLEVELMISMATCH' = int32(0x8004E02F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_LAST' = int32(0x800401FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_LAUNCH_PERMSSION_DENIED' = int32(0x8000401B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_LOOKUPACCNAMEFAILED' = int32(0x80010132)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_LOOKUPACCSIDFAILED' = int32(0x80010130)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_MALFORMED_SPN' = int32(0x80004033)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_MSI_ERROR' = int32(0x80004023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NETACCESSAPIFAILED' = int32(0x8001012B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOCOOKIES' = int32(0x8004E02A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOIISINTRINSICS' = int32(0x8004E029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOMATCHINGNAMEFOUND' = int32(0x80010131)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOMATCHINGSIDFOUND' = int32(0x8001012F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOSYNCHRONIZATION' = int32(0x8004E02E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOTCONSTRUCTED' = int32(0x8004E02D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOTINITIALIZED' = int32(0x800401F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOTPOOLED' = int32(0x8004E02C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NOT_SUPPORTED' = int32(0x80004021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_NO_SECCTX_IN_ACTIVATE' = int32(0x8000402B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_OBJISREG' = int32(0x800401FC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_OBJNOTCONNECTED' = int32(0x800401FD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_OBJNOTREG' = int32(0x800401FB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_OBJSRV_RPC_FAILURE' = int32(0x80080006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_OLE1DDE_DISABLED' = int32(0x80004016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_PATHTOOLONG' = int32(0x80010135)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_RELEASED' = int32(0x800401FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_RELOAD_DLL' = int32(0x80004022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_REMOTE_COMMUNICATION_FAILURE' = int32(0x8000401D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_RUNAS_CREATEPROCESS_FAILURE' = int32(0x80004019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_RUNAS_LOGON_FAILURE' = int32(0x8000401A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_RUNAS_SYNTAX' = int32(0x80004017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SCM_ERROR' = int32(0x80080002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SCM_RPC_FAILURE' = int32(0x80080003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SERVER_EXEC_FAILURE' = int32(0x80080005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SERVER_INIT_TIMEOUT' = int32(0x8000402A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SERVER_NOT_PAUSED' = int32(0x80004026)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SERVER_PAUSED' = int32(0x80004025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SERVER_START_TIMEOUT' = int32(0x8000401E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SERVER_STOPPING' = int32(0x80080008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SETSERLHNDLFAILED' = int32(0x80010133)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_START_SERVICE_FAILURE' = int32(0x8000401C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_SXS_CONFIG' = int32(0x80004032)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_THREADINGMODEL_CHANGED' = int32(0x8004E028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_THREADPOOL_CONFIG' = int32(0x80004031)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_TRACKER_CONFIG' = int32(0x80004030)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_TRUSTEEDOESNTMATCHCLIENT' = int32(0x80010127)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_WRONGOSFORAPP' = int32(0x800401FA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_WRONGTRUSTEENAMESYNTAX' = int32(0x8001012C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_E_WRONG_SERVER_IDENTITY' = int32(0x80004015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_S_FIRST' = int32(0x000401F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_S_LAST' = int32(0x000401FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_S_MACHINENAMENOTFOUND' = int32(0x00080013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CO_S_NOTALLINTERFACES' = int32(0x00080012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ALREADY_DECRYPTED' = int32(0x80091009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_BADARGS' = int32(0x80093109)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_BADPDU' = int32(0x80093108)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_BADREAL' = int32(0x8009310A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_BADTAG' = int32(0x8009310B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_CHOICE' = int32(0x8009310C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_CONSTRAINT' = int32(0x80093105)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_CORRUPT' = int32(0x80093103)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_EOD' = int32(0x80093102)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_ERROR' = int32(0x80093100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_EXTENDED' = int32(0x80093201)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_INTERNAL' = int32(0x80093101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_LARGE' = int32(0x80093104)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_MEMORY' = int32(0x80093106)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_NOEOD' = int32(0x80093202)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_NYI' = int32(0x80093134)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_OVERFLOW' = int32(0x80093107)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_PDU_TYPE' = int32(0x80093133)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_RULE' = int32(0x8009310D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ASN1_UTF8' = int32(0x8009310E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ATTRIBUTES_MISSING' = int32(0x8009100F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_AUTH_ATTR_MISSING' = int32(0x80091006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_BAD_ENCODE' = int32(0x80092002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_BAD_LEN' = int32(0x80092001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_BAD_MSG' = int32(0x8009200D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_CONTROL_TYPE' = int32(0x8009100C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_DELETED_PREV' = int32(0x80092008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_EXISTS' = int32(0x80092005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_FILERESIZED' = int32(0x80092025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_FILE_ERROR' = int32(0x80092003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_HASH_VALUE' = int32(0x80091007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_INVALID_IA5_STRING' = int32(0x80092022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_INVALID_INDEX' = int32(0x80091008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_INVALID_MSG_TYPE' = int32(0x80091004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_INVALID_NUMERIC_STRING' = int32(0x80092020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_INVALID_PRINTABLE_STRING' = int32(0x80092021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_INVALID_X500_STRING' = int32(0x80092023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_ISSUER_SERIALNUMBER' = int32(0x8009100D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_MISSING_PUBKEY_PARA' = int32(0x8009202C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_MSG_ERROR' = int32(0x80091001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NOT_CHAR_STRING' = int32(0x80092024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NOT_DECRYPTED' = int32(0x8009100A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NOT_FOUND' = int32(0x80092004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NOT_IN_CTL' = int32(0x8009202A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NOT_IN_REVOCATION_DATABASE' = int32(0x80092014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_DECRYPT_CERT' = int32(0x8009200C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_KEY_PROPERTY' = int32(0x8009200B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_MATCH' = int32(0x80092009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_PROVIDER' = int32(0x80092006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_REVOCATION_CHECK' = int32(0x80092012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_REVOCATION_DLL' = int32(0x80092011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_SIGNER' = int32(0x8009200E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_TRUSTED_SIGNER' = int32(0x8009202B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_VERIFY_USAGE_CHECK' = int32(0x80092028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_NO_VERIFY_USAGE_DLL' = int32(0x80092027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_OID_FORMAT' = int32(0x80091003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_OSS_ERROR' = int32(0x80093000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_PENDING_CLOSE' = int32(0x8009200F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_RECIPIENT_NOT_FOUND' = int32(0x8009100B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_REVOCATION_OFFLINE' = int32(0x80092013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_REVOKED' = int32(0x80092010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_SECURITY_SETTINGS' = int32(0x80092026)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_SELF_SIGNED' = int32(0x80092007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_SIGNER_NOT_FOUND' = int32(0x8009100E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_STREAM_INSUFFICIENT_DATA' = int32(0x80091011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_STREAM_MSG_NOT_READY' = int32(0x80091010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_UNEXPECTED_ENCODING' = int32(0x80091005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_UNEXPECTED_MSG_TYPE' = int32(0x8009200A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_UNKNOWN_ALGO' = int32(0x80091002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_E_VERIFY_USAGE_OFFLINE' = int32(0x80092029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CRYPT_I_NEW_PROTECTION_REQUIRED' = int32(0x00091012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_ADMIN_LIMIT_EXCEEDED' = int32(0x8004016D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_CLASS_NOTFOUND' = int32(0x80040166)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_FIRST' = int32(0x80040164)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_INTERNAL_ERROR' = int32(0x8004016F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_INVALID_PATH' = int32(0x8004016B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_INVALID_VERSION' = int32(0x80040167)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_LAST' = int32(0x8004016F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_NETWORK_ERROR' = int32(0x8004016C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_NOT_DELETABLE' = int32(0x80040165)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_NO_CLASSSTORE' = int32(0x80040168)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_OBJECT_ALREADY_EXISTS' = int32(0x8004016A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_OBJECT_NOTFOUND' = int32(0x80040169)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_PACKAGE_NOTFOUND' = int32(0x80040164)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'CS_E_SCHEMA_MISMATCH' = int32(0x8004016E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DATA_E_FIRST' = int32(0x80040130)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DATA_E_LAST' = int32(0x8004013F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DATA_S_FIRST' = int32(0x00040130)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DATA_S_LAST' = int32(0x0004013F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DATA_S_SAMEFORMATETC' = int32(0x00040130)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DIGSIG_E_CRYPTO' = int32(0x800B0008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DIGSIG_E_DECODE' = int32(0x800B0006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DIGSIG_E_ENCODE' = int32(0x800B0005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DIGSIG_E_EXTENSIBILITY' = int32(0x800B0007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_ARRAYISLOCKED' = int32(0x8002000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_BADCALLEE' = int32(0x80020010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_BADINDEX' = int32(0x8002000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_BADPARAMCOUNT' = int32(0x8002000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_BADVARTYPE' = int32(0x80020008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_BUFFERTOOSMALL' = int32(0x80020013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_DIVBYZERO' = int32(0x80020012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_EXCEPTION' = int32(0x80020009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_MEMBERNOTFOUND' = int32(0x80020003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_NONAMEDARGS' = int32(0x80020007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_NOTACOLLECTION' = int32(0x80020011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_OVERFLOW' = int32(0x8002000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_PARAMNOTFOUND' = int32(0x80020004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_PARAMNOTOPTIONAL' = int32(0x8002000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_TYPEMISMATCH' = int32(0x80020005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_UNKNOWNINTERFACE' = int32(0x80020001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_UNKNOWNLCID' = int32(0x8002000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DISP_E_UNKNOWNNAME' = int32(0x80020006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_E_ALREADYREGISTERED' = int32(0x80040101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_E_FIRST' = int32(0x80040100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_E_INVALIDHWND' = int32(0x80040102)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_E_LAST' = int32(0x8004010F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_E_NOTREGISTERED' = int32(0x80040100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_S_CANCEL' = int32(0x00040101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_S_DROP' = int32(0x00040100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_S_FIRST' = int32(0x00040100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_S_LAST' = int32(0x0004010F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DRAGDROP_S_USEDEFAULTCURSORS' = int32(0x00040102)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_CLIPFORMAT' = int32(0x8004006A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_DVASPECT' = int32(0x8004006B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_DVTARGETDEVICE' = int32(0x80040065)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_DVTARGETDEVICE_SIZE' = int32(0x8004006C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_FORMATETC' = int32(0x80040064)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_LINDEX' = int32(0x80040068)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_NOIVIEWOBJECT' = int32(0x8004006D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_STATDATA' = int32(0x80040067)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_STGMEDIUM' = int32(0x80040066)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'DV_E_TYMED' = int32(0x80040069)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ENUM_E_FIRST' = int32(0x800401B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ENUM_E_LAST' = int32(0x800401BF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ENUM_S_FIRST' = int32(0x000401B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ENUM_S_LAST' = int32(0x000401BF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ERROR_ALL_SIDS_FILTERED' = int32(0xC0090002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ERROR_AUDITING_DISABLED' = int32(0xC0090001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_ALL_SUBSCRIBERS_FAILED' = int32(0x80040201)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT' = int32(0x8004020E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT' = int32(0x8004020D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_COMPLUS_NOT_INSTALLED' = int32(0x8004020C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_FIRST' = int32(0x80040200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_INTERNALERROR' = int32(0x80040206)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_INTERNALEXCEPTION' = int32(0x80040205)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_INVALID_EVENT_CLASS_PARTITION' = int32(0x8004020F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_INVALID_PER_USER_SID' = int32(0x80040207)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_LAST' = int32(0x8004021F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_MISSING_EVENTCLASS' = int32(0x8004020A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_NOT_ALL_REMOVED' = int32(0x8004020B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_PER_USER_SID_NOT_LOGGED_ON' = int32(0x80040210)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_QUERYFIELD' = int32(0x80040204)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_QUERYSYNTAX' = int32(0x80040203)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_TOO_MANY_METHODS' = int32(0x80040209)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_E_USER_EXCEPTION' = int32(0x80040208)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_S_FIRST' = int32(0x00040200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_S_LAST' = int32(0x0004021F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_S_NOSUBSCRIBERS' = int32(0x00040202)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'EVENT_S_SOME_SUBSCRIBERS_FAILED' = int32(0x00040200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_ABORT' = int32(0x80004004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_ACCESSDENIED' = int32(0x80070005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_BAD_LENGTH' = int32(0x80070018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_FAIL' = int32(0x80004005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_HANDLE' = int32(0x80070006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_INVALIDARG' = int32(0x80070057)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_NOINTERFACE' = int32(0x80004002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_NOTIMPL' = int32(0x80004001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_OUTOFMEMORY' = int32(0x8007000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_PARTIAL_COPY' = int32(0x8007012B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_PDB_CORRUPT' = int32(0x806D0014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_PENDING' = int32(0x8000000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_POINTER' = int32(0x80004003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'E_UNEXPECTED' = int32(0x8000FFFF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_ASM_MODULE_MISSING' = int32(0x80131042)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_CODE_DOWNLOAD_DISABLED' = int32(0x80131048)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_DATABASE_ERROR' = int32(0x80131046)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_HOST_GAC_ASM_MISMATCH' = int32(0x80131050)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_INVALID_NAME' = int32(0x80131047)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_INVALID_PRIVATE_ASM_LOCATION' = int32(0x80131041)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_PRIVATE_ASM_DISALLOWED' = int32(0x80131044)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_REF_DEF_MISMATCH' = int32(0x80131040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_SIGNATURE_CHECK_FAILED' = int32(0x80131045)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_UNEXPECTED_MODULE_FOUND' = int32(0x80131043)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'FUSION_E_UNINSTALL_DISALLOWED' = int32(0x80131049)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_ABANDONED' = int32(0x80131026)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_CLRNOTAVAILABLE' = int32(0x80131023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_DEADLOCK' = int32(0x80131020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_EXITPROCESS_ADUNLOAD' = int32(0x80131028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_EXITPROCESS_OUTOFMEMORY' = int32(0x8013102A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_EXITPROCESS_STACKOVERFLOW' = int32(0x8013102B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_EXITPROCESS_THREADABORT' = int32(0x80131027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_EXITPROCESS_TIMEOUT' = int32(0x80131029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_INTERRUPTED' = int32(0x80131021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_INVALIDOPERATION' = int32(0x80131022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_NOT_OWNER' = int32(0x80131025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HOST_E_TIMEOUT' = int32(0x80131024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'HR_FOR_ERROR_PARTIAL_COPY' = int32(0x8007012B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'INPLACE_E_FIRST' = int32(0x800401A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'INPLACE_E_LAST' = int32(0x800401AF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'INPLACE_E_NOTOOLSPACE' = int32(0x800401A1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'INPLACE_E_NOTUNDOABLE' = int32(0x800401A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'INPLACE_S_FIRST' = int32(0x000401A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'INPLACE_S_LAST' = int32(0x000401AF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'INPLACE_S_TRUNCATED' = int32(0x000401A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_ALLOC_TOO_LARGE' = int32(0x80131484)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_BLOCK_SIZE_TOO_SMALL' = int32(0x80131483)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_CALLER' = int32(0x801314A1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_CORRUPTED_STORE_FILE' = int32(0x80131480)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_CREATE_DIR' = int32(0x80131468)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_CREATE_MUTEX' = int32(0x80131464)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_DEPRECATE' = int32(0x801314A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_FILE_NOT_MAPPED' = int32(0x80131482)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_FILE_WRITE' = int32(0x80131466)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_GET_FILE_SIZE' = int32(0x80131463)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_ISOSTORE' = int32(0x80131450)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_ISOSTORE_END' = int32(0x801314FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_ISOSTORE_START' = int32(0x80131450)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_LOCK_FAILED' = int32(0x80131465)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_MACHINE' = int32(0x801314A3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_MACHINE_DACL' = int32(0x801314A4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_MAP_VIEW_OF_FILE' = int32(0x80131462)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_OPEN_FILE_MAPPING' = int32(0x80131461)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_OPEN_STORE_FILE' = int32(0x80131460)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_PATH_LENGTH' = int32(0x801314A2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_SET_FILE_POINTER' = int32(0x80131467)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_STORE_NOT_OPEN' = int32(0x80131469)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_STORE_VERSION' = int32(0x80131481)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_TABLE_ROW_NOT_FOUND' = int32(0x80131486)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'ISS_E_USAGE_WILL_EXCEED_QUOTA' = int32(0x80131485)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MARSHAL_E_FIRST' = int32(0x80040120)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MARSHAL_E_LAST' = int32(0x8004012F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MARSHAL_S_FIRST' = int32(0x00040120)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MARSHAL_S_LAST' = int32(0x0004012F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MEM_E_INVALID_LINK' = int32(0x80080010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MEM_E_INVALID_ROOT' = int32(0x80080009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MEM_E_INVALID_SIZE' = int32(0x80080011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_BADMETADATA' = int32(0x8013118A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_BAD_INPUT_PARAMETER' = int32(0x80131193)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_BAD_SIGNATURE' = int32(0x80131192)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CANNOTRESOLVETYPEREF' = int32(0x80131196)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_ARRAY_NYI' = int32(0x801311C6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_CUSTMARSH_TYPE_REQUIRED' = int32(0x801311D1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_FILENAME_REQUIRED' = int32(0x801311D2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_FIXEDSTR_SIZE_REQUIRED' = int32(0x801311D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_INVALID_ARGTYPE' = int32(0x801311C8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_INVALID_ARG_FOR_TYPE' = int32(0x801311C9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_INVALID_BLOB' = int32(0x801311C2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_INVALID_MARSHALAS_FIELDS' = int32(0x801311CB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_INVALID_TARGET' = int32(0x801311C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_INVALID_UUID' = int32(0x801311CA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_INVALID_VALUE' = int32(0x801311C1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_NEGATIVE_CONSTSIZE' = int32(0x801311CF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_NEGATIVE_MULTIPLIER' = int32(0x801311CE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_NEGATIVE_PARAMINDEX' = int32(0x801311CD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_NT_FIELDONLY' = int32(0x801311CC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_REPEATED_ARG' = int32(0x801311C3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_UNEXPECTED_TYPE' = int32(0x801311C7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_UNKNOWN_ARGUMENT' = int32(0x801311C4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CA_VARIANT_NYI' = int32(0x801311C5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_CLASS_LAYOUT_INCONSISTENT' = int32(0x8013118D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_DUPLICATE' = int32(0x80131180)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_EVENT_COUNTS' = int32(0x8013119D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_EVENT_NOT_FOUND' = int32(0x80131190)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_FIELD_COUNTS' = int32(0x801311D7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_FIELD_MARSHAL_NOT_FOUND' = int32(0x8013118E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_FIELD_NOT_FOUND' = int32(0x80131188)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_GENERICPARAM_INCONSISTENT' = int32(0x8013119C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_GUID_REQUIRED' = int32(0x80131181)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_HAS_UNMARKALL' = int32(0x8013119A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_INTFCEIMPL_NOT_FOUND' = int32(0x8013118B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_INVALID_TOKEN_TYPE' = int32(0x8013115F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_MD_INCONSISTENCY' = int32(0x80131195)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_MERGE_COLLISION' = int32(0x80131183)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_METHDIMPL_INCONSISTENT' = int32(0x80131194)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_METHD_NOT_FOUND' = int32(0x80131187)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_METHODSEM_NOT_FOUND' = int32(0x8013118F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_METHOD_COUNTS' = int32(0x801311D6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_MUST_CALL_UNMARKALL' = int32(0x8013119B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_NOT_IN_ENC_MODE' = int32(0x801311D4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_PARAM_COUNTS' = int32(0x801311D8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_PARAM_MISMATCH' = int32(0x80131189)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_PROPERTY_COUNTS' = int32(0x8013119E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_PROP_NOT_FOUND' = int32(0x80131191)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_STRINGSPACE_FULL' = int32(0x80131198)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_TYPEDEF_MISMATCH' = int32(0x80131182)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_TYPEDEF_MISSING' = int32(0x8013119F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_E_UNEXPECTED_REMAP' = int32(0x80131199)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_S_DUPLICATE' = int32(0x00131197)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'META_S_PARAM_MISMATCH' = int32(0x00131189)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_CANTOPENFILE' = int32(0x800401EA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_CONNECTMANUALLY' = int32(0x800401E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_ENUMERATION_FAILED' = int32(0x800401EF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_EXCEEDEDDEADLINE' = int32(0x800401E1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_FIRST' = int32(0x800401E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_INTERMEDIATEINTERFACENOTSUPPORTED' = int32(0x800401E7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_INVALIDEXTENSION' = int32(0x800401E6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_LAST' = int32(0x800401EF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_MUSTBOTHERUSER' = int32(0x800401EB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NEEDGENERIC' = int32(0x800401E2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NOINVERSE' = int32(0x800401EC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NOOBJECT' = int32(0x800401E5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NOPREFIX' = int32(0x800401EE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NOSTORAGE' = int32(0x800401ED)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NOTBINDABLE' = int32(0x800401E8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NOTBOUND' = int32(0x800401E9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_NO_NORMALIZED' = int32(0x80080007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_SYNTAX' = int32(0x800401E4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_E_UNAVAILABLE' = int32(0x800401E3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_S_FIRST' = int32(0x000401E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_S_HIM' = int32(0x000401E5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_S_LAST' = int32(0x000401EF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_S_ME' = int32(0x000401E4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_S_MONIKERALREADYREGISTERED' = int32(0x000401E7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_S_REDUCED_TO_SELF' = int32(0x000401E2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MK_S_US' = int32(0x000401E6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSDTC_E_DUPLICATE_RESOURCE' = int32(0x80110701)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSEE_E_ASSEMBLYLOADINPROGRESS' = int32(0x80131016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSEE_E_CANNOTCREATEAPPDOMAIN' = int32(0x80131017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSEE_E_GETPROCFAILED' = int32(0x80131011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSEE_E_LOADLIBFAILED' = int32(0x80131010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSEE_E_MULTCOPIESLOADED' = int32(0x80131012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_BADVERSION' = int32(0x80097015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT' = int32(0x80097008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_BAD_MAGICNUMBER' = int32(0x80097004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_BAD_OFFSET_TABLE' = int32(0x80097005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_CANTGETOBJECT' = int32(0x80097002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_CRYPT' = int32(0x80097014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_DSIG_STRUCTURE' = int32(0x80097016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_FAILED_HINTS_CHECK' = int32(0x80097011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_FAILED_POLICY' = int32(0x80097010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_FILE' = int32(0x80097013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_FILETOOSMALL' = int32(0x8009700B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_FILE_CHECKSUM' = int32(0x8009700D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_NOHEADTABLE' = int32(0x80097003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_NOT_OPENTYPE' = int32(0x80097012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_OUTOFMEMRANGE' = int32(0x80097001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_PCONST_CHECK' = int32(0x80097017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_STRUCTURE' = int32(0x80097018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_TABLES_OVERLAP' = int32(0x80097009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_TABLE_CHECKSUM' = int32(0x8009700C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_TABLE_LONGWORD' = int32(0x80097007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_TABLE_PADBYTES' = int32(0x8009700A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'MSSIPOTF_E_TABLE_TAGORDER' = int32(0x80097006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_ALGID' = int32(0x80090008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_DATA' = int32(0x80090005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_FLAGS' = int32(0x80090009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_HASH' = int32(0x80090002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_HASH_STATE' = int32(0x8009000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_KEY' = int32(0x80090003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_KEYSET' = int32(0x80090016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_KEYSET_PARAM' = int32(0x8009001F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_KEY_STATE' = int32(0x8009000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_LEN' = int32(0x80090004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_PROVIDER' = int32(0x80090013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_PROV_TYPE' = int32(0x80090014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_PUBLIC_KEY' = int32(0x80090015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_SIGNATURE' = int32(0x80090006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_TYPE' = int32(0x8009000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_UID' = int32(0x80090001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_BAD_VER' = int32(0x80090007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_DOUBLE_ENCRYPT' = int32(0x80090012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_EXISTS' = int32(0x8009000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_FAIL' = int32(0x80090020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_FIXEDPARAMETER' = int32(0x80090025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_KEYSET_ENTRY_BAD' = int32(0x8009001A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_KEYSET_NOT_DEF' = int32(0x80090019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_NOT_FOUND' = int32(0x80090011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_NO_KEY' = int32(0x8009000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_NO_MEMORY' = int32(0x8009000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_PERM' = int32(0x80090010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_PROVIDER_DLL_FAIL' = int32(0x8009001D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_PROV_DLL_NOT_FOUND' = int32(0x8009001E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_PROV_TYPE_ENTRY_BAD' = int32(0x80090018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_PROV_TYPE_NOT_DEF' = int32(0x80090017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_PROV_TYPE_NO_MATCH' = int32(0x8009001B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_SIGNATURE_FILE_BAD' = int32(0x8009001C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_SILENT_CONTEXT' = int32(0x80090022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_SYS_ERR' = int32(0x80090021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_TEMPORARY_PROFILE' = int32(0x80090024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'NTE_TOKEN_KEYSET_STORAGE_FULL' = int32(0x80090023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_E_FIRST' = int32(0x80040180)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_E_INVALIDVERB' = int32(0x80040181)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_E_LAST' = int32(0x8004018F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_E_NOVERBS' = int32(0x80040180)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_S_CANNOT_DOVERB_NOW' = int32(0x00040181)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_S_FIRST' = int32(0x00040180)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_S_INVALIDHWND' = int32(0x00040182)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_S_INVALIDVERB' = int32(0x00040180)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLEOBJ_S_LAST' = int32(0x0004018F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_ADVF' = int32(0x80040001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_ADVISENOTSUPPORTED' = int32(0x80040003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_BLANK' = int32(0x80040007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_CANTCONVERT' = int32(0x80040011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_CANT_BINDTOSOURCE' = int32(0x8004000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_CANT_GETMONIKER' = int32(0x80040009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_CLASSDIFF' = int32(0x80040008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_ENUM_NOMORE' = int32(0x80040002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_FIRST' = int32(0x80040000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_INVALIDHWND' = int32(0x8004000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_INVALIDRECT' = int32(0x8004000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_LAST' = int32(0x800400FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_NOCACHE' = int32(0x80040006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_NOCONNECTION' = int32(0x80040004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_NOSTORAGE' = int32(0x80040012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_NOTRUNNING' = int32(0x80040005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_NOT_INPLACEACTIVE' = int32(0x80040010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_OLEVERB' = int32(0x80040000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_PROMPTSAVECANCELLED' = int32(0x8004000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_STATIC' = int32(0x8004000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_E_WRONGCOMPOBJ' = int32(0x8004000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_S_FIRST' = int32(0x00040000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_S_LAST' = int32(0x000400FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_S_MAC_CLIPFORMAT' = int32(0x00040002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_S_STATIC' = int32(0x00040001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OLE_S_USEREG' = int32(0x00040000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_ACCESS_SERIALIZATION_ERROR' = int32(0x80093013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_API_DLL_NOT_LINKED' = int32(0x80093029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_BAD_ARG' = int32(0x80093006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_BAD_ENCRULES' = int32(0x80093016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_BAD_PTR' = int32(0x8009300B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_BAD_TABLE' = int32(0x8009300F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_BAD_TIME' = int32(0x8009300C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_BAD_VERSION' = int32(0x80093007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_BERDER_DLL_NOT_LINKED' = int32(0x8009302A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_CANT_CLOSE_TRACE_FILE' = int32(0x8009302E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_CANT_OPEN_TRACE_FILE' = int32(0x8009301B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_CANT_OPEN_TRACE_WINDOW' = int32(0x80093018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_COMPARATOR_CODE_NOT_LINKED' = int32(0x80093025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_COMPARATOR_DLL_NOT_LINKED' = int32(0x80093024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_CONSTRAINT_DLL_NOT_LINKED' = int32(0x80093023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_CONSTRAINT_VIOLATED' = int32(0x80093011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_COPIER_DLL_NOT_LINKED' = int32(0x80093022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_DATA_ERROR' = int32(0x80093005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_FATAL_ERROR' = int32(0x80093012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_INDEFINITE_NOT_SUPPORTED' = int32(0x8009300D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_LIMITED' = int32(0x8009300A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_MEM_ERROR' = int32(0x8009300E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_MEM_MGR_DLL_NOT_LINKED' = int32(0x80093026)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_MORE_BUF' = int32(0x80093001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_MORE_INPUT' = int32(0x80093004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_MUTEX_NOT_CREATED' = int32(0x8009302D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_NEGATIVE_UINTEGER' = int32(0x80093002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_NULL_FCN' = int32(0x80093015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_NULL_TBL' = int32(0x80093014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_OID_DLL_NOT_LINKED' = int32(0x8009301A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_OPEN_TYPE_ERROR' = int32(0x8009302C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_OUT_MEMORY' = int32(0x80093008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_OUT_OF_RANGE' = int32(0x80093021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_PDU_MISMATCH' = int32(0x80093009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_PDU_RANGE' = int32(0x80093003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_PDV_CODE_NOT_LINKED' = int32(0x80093028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_PDV_DLL_NOT_LINKED' = int32(0x80093027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_PER_DLL_NOT_LINKED' = int32(0x8009302B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_REAL_CODE_NOT_LINKED' = int32(0x80093020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_REAL_DLL_NOT_LINKED' = int32(0x8009301F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_TABLE_MISMATCH' = int32(0x8009301D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_TOO_LONG' = int32(0x80093010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_TRACE_FILE_ALREADY_OPEN' = int32(0x8009301C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_TYPE_NOT_SUPPORTED' = int32(0x8009301E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_UNAVAIL_ENCRULES' = int32(0x80093017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'OSS_UNIMPLEMENTED' = int32(0x80093019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_64BIT' = int32(0x80131D02)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_BAD_CORHEADER' = int32(0x80131D0A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_BASE_RELOCS' = int32(0x80131D07)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_ENTRYPOINT' = int32(0x80131D08)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_EXE_NOENTRYPOINT' = int32(0x80131D06)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_IMPORT_DLLS' = int32(0x80131D05)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_NOT_ILONLY' = int32(0x80131D04)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_NO_CONTENTS' = int32(0x80131D00)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_NO_CORHEADER' = int32(0x80131D03)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_NO_NTHEADERS' = int32(0x80131D01)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PEFMT_E_ZERO_SIZEOFCODE' = int32(0x80131D09)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PERSIST_E_NOTSELFSIZING' = int32(0x800B000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PERSIST_E_SIZEDEFINITE' = int32(0x800B0009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'PERSIST_E_SIZEINDEFINITE' = int32(0x800B000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_BADTHREADINGMODEL' = int32(0x80040156)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_CLASSNOTREG' = int32(0x80040154)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_FIRST' = int32(0x80040150)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_IIDNOTREG' = int32(0x80040155)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_INVALIDVALUE' = int32(0x80040153)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_KEYMISSING' = int32(0x80040152)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_LAST' = int32(0x8004015F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_READREGDB' = int32(0x80040150)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_E_WRITEREGDB' = int32(0x80040151)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_S_FIRST' = int32(0x00040150)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'REGDB_S_LAST' = int32(0x0004015F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_ACCESS_DENIED' = int32(0x8001011B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_ATTEMPTED_MULTITHREAD' = int32(0x80010102)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CALL_CANCELED' = int32(0x80010002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CALL_COMPLETE' = int32(0x80010117)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CALL_REJECTED' = int32(0x80010001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CANTCALLOUT_AGAIN' = int32(0x80010011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CANTCALLOUT_INASYNCCALL' = int32(0x80010004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CANTCALLOUT_INEXTERNALCALL' = int32(0x80010005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CANTCALLOUT_ININPUTSYNCCALL' = int32(0x8001010D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CANTPOST_INSENDCALL' = int32(0x80010003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CANTTRANSMIT_CALL' = int32(0x8001000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CHANGED_MODE' = int32(0x80010106)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CLIENT_CANTMARSHAL_DATA' = int32(0x8001000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CLIENT_CANTUNMARSHAL_DATA' = int32(0x8001000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CLIENT_DIED' = int32(0x80010008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_CONNECTION_TERMINATED' = int32(0x80010006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_DISCONNECTED' = int32(0x80010108)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_FAULT' = int32(0x80010104)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_FULLSIC_REQUIRED' = int32(0x80010121)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALIDMETHOD' = int32(0x80010107)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_CALLDATA' = int32(0x8001010C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_DATA' = int32(0x8001000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_DATAPACKET' = int32(0x80010009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_EXTENSION' = int32(0x80010112)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_HEADER' = int32(0x80010111)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_IPID' = int32(0x80010113)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_OBJECT' = int32(0x80010114)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_OBJREF' = int32(0x8001011D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_PARAMETER' = int32(0x80010010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_INVALID_STD_NAME' = int32(0x80010122)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_NOT_REGISTERED' = int32(0x80010103)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_NO_CONTEXT' = int32(0x8001011E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_NO_GOOD_SECURITY_PACKAGES' = int32(0x8001011A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_NO_SYNC' = int32(0x80010120)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_OUT_OF_RESOURCES' = int32(0x80010101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_REMOTE_DISABLED' = int32(0x8001011C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_RETRY' = int32(0x80010109)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SERVERCALL_REJECTED' = int32(0x8001010B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SERVERCALL_RETRYLATER' = int32(0x8001010A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SERVERFAULT' = int32(0x80010105)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SERVER_CANTMARSHAL_DATA' = int32(0x8001000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SERVER_CANTUNMARSHAL_DATA' = int32(0x8001000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SERVER_DIED' = int32(0x80010007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SERVER_DIED_DNE' = int32(0x80010012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_SYS_CALL_FAILED' = int32(0x80010100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_THREAD_NOT_INIT' = int32(0x8001010F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_TIMEOUT' = int32(0x8001011F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_TOO_LATE' = int32(0x80010119)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_UNEXPECTED' = int32(0x8001FFFF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_UNSECURE_CALL' = int32(0x80010118)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_VERSION_MISMATCH' = int32(0x80010110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_E_WRONG_THREAD' = int32(0x8001010E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_S_CALLPENDING' = int32(0x80010115)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'RPC_S_WAITONTIMER' = int32(0x80010116)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_BAD_SEEK' = int32(0x80100029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_CANCELLED' = int32(0x80100002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_CANT_DISPOSE' = int32(0x8010000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_CARD_UNSUPPORTED' = int32(0x8010001C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_CERTIFICATE_UNAVAILABLE' = int32(0x8010002D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_COMM_DATA_LOST' = int32(0x8010002F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_DIR_NOT_FOUND' = int32(0x80100023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_DUPLICATE_READER' = int32(0x8010001B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_FILE_NOT_FOUND' = int32(0x80100024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_ICC_CREATEORDER' = int32(0x80100021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_ICC_INSTALLATION' = int32(0x80100020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_INSUFFICIENT_BUFFER' = int32(0x80100008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_INVALID_ATR' = int32(0x80100015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_INVALID_CHV' = int32(0x8010002A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_INVALID_HANDLE' = int32(0x80100003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_INVALID_PARAMETER' = int32(0x80100004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_INVALID_TARGET' = int32(0x80100005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_INVALID_VALUE' = int32(0x80100011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NOT_READY' = int32(0x80100010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NOT_TRANSACTED' = int32(0x80100016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_ACCESS' = int32(0x80100027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_DIR' = int32(0x80100025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_FILE' = int32(0x80100026)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_KEY_CONTAINER' = int32(0x80100030)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_MEMORY' = int32(0x80100006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_READERS_AVAILABLE' = int32(0x8010002E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_SERVICE' = int32(0x8010001D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_SMARTCARD' = int32(0x8010000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_NO_SUCH_CERTIFICATE' = int32(0x8010002C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_PCI_TOO_SMALL' = int32(0x80100019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_PROTO_MISMATCH' = int32(0x8010000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_READER_UNAVAILABLE' = int32(0x80100017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_READER_UNSUPPORTED' = int32(0x8010001A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_SERVER_TOO_BUSY' = int32(0x80100031)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_SERVICE_STOPPED' = int32(0x8010001E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_SHARING_VIOLATION' = int32(0x8010000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_SYSTEM_CANCELLED' = int32(0x80100012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_TIMEOUT' = int32(0x8010000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_UNEXPECTED' = int32(0x8010001F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_UNKNOWN_CARD' = int32(0x8010000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_UNKNOWN_READER' = int32(0x80100009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_UNKNOWN_RES_MNG' = int32(0x8010002B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_UNSUPPORTED_FEATURE' = int32(0x80100022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_E_WRITE_TOO_MANY' = int32(0x80100028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_F_COMM_ERROR' = int32(0x80100013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_F_INTERNAL_ERROR' = int32(0x80100001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_F_UNKNOWN_ERROR' = int32(0x80100014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_F_WAITED_TOO_LONG' = int32(0x80100007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_P_SHUTDOWN' = int32(0x80100018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_CANCELLED_BY_USER' = int32(0x8010006E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_CARD_NOT_AUTHENTICATED' = int32(0x8010006F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_CHV_BLOCKED' = int32(0x8010006C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_EOF' = int32(0x8010006D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_REMOVED_CARD' = int32(0x80100069)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_RESET_CARD' = int32(0x80100068)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_SECURITY_VIOLATION' = int32(0x8010006A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_UNPOWERED_CARD' = int32(0x80100067)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_UNRESPONSIVE_CARD' = int32(0x80100066)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_UNSUPPORTED_CARD' = int32(0x80100065)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCARD_W_WRONG_CHV' = int32(0x8010006B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_ACCOUNT_DBASE_CORRUPT' = int32(0x80041311)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_ACCOUNT_INFORMATION_NOT_SET' = int32(0x8004130F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_ACCOUNT_NAME_NOT_FOUND' = int32(0x80041310)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_CANNOT_OPEN_TASK' = int32(0x8004130D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_INVALID_TASK' = int32(0x8004130E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_NO_SECURITY_SERVICES' = int32(0x80041312)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_SERVICE_NOT_INSTALLED' = int32(0x8004130C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_SERVICE_NOT_RUNNING' = int32(0x80041315)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_TASK_NOT_READY' = int32(0x8004130A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_TASK_NOT_RUNNING' = int32(0x8004130B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_TRIGGER_NOT_FOUND' = int32(0x80041309)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_UNKNOWN_OBJECT_VERSION' = int32(0x80041313)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_E_UNSUPPORTED_ACCOUNT_OPTION' = int32(0x80041314)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_EVENT_TRIGGER' = int32(0x00041308)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_DISABLED' = int32(0x00041302)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_HAS_NOT_RUN' = int32(0x00041303)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_NOT_SCHEDULED' = int32(0x00041305)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_NO_MORE_RUNS' = int32(0x00041304)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_NO_VALID_TRIGGERS' = int32(0x00041307)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_READY' = int32(0x00041300)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_RUNNING' = int32(0x00041301)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SCHED_S_TASK_TERMINATED' = int32(0x00041306)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SECURITY_E_INCOMPATIBLE_EVIDENCE' = int32(0x80131403)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SECURITY_E_INCOMPATIBLE_SHARE' = int32(0x80131401)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SECURITY_E_UNVERIFIABLE' = int32(0x80131402)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SECURITY_E_XML_TO_ASN_ENCODING' = int32(0x80131400)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_ALGORITHM_MISMATCH' = int32(0x80090331)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_BAD_BINDINGS' = int32(0x80090346)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_BAD_PKGID' = int32(0x80090316)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_BUFFER_TOO_SMALL' = int32(0x80090321)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CANNOT_INSTALL' = int32(0x80090307)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CANNOT_PACK' = int32(0x80090309)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CERT_EXPIRED' = int32(0x80090328)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CERT_UNKNOWN' = int32(0x80090327)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CERT_WRONG_USAGE' = int32(0x80090349)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CONTEXT_EXPIRED' = int32(0x80090317)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CROSSREALM_DELEGATION_FAILURE' = int32(0x80090357)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_CRYPTO_SYSTEM_INVALID' = int32(0x80090337)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_DECRYPT_FAILURE' = int32(0x80090330)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_DELEGATION_REQUIRED' = int32(0x80090345)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_DOWNGRADE_DETECTED' = int32(0x80090350)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_ENCRYPT_FAILURE' = int32(0x80090329)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_ILLEGAL_MESSAGE' = int32(0x80090326)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_INCOMPLETE_CREDENTIALS' = int32(0x80090320)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_INCOMPLETE_MESSAGE' = int32(0x80090318)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_INSUFFICIENT_MEMORY' = int32(0x80090300)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_INTERNAL_ERROR' = int32(0x80090304)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_INVALID_HANDLE' = int32(0x80090301)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_INVALID_TOKEN' = int32(0x80090308)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_ISSUING_CA_UNTRUSTED' = int32(0x80090352)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_ISSUING_CA_UNTRUSTED_KDC' = int32(0x80090359)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_KDC_CERT_EXPIRED' = int32(0x8009035A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_KDC_CERT_REVOKED' = int32(0x8009035B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_KDC_INVALID_REQUEST' = int32(0x80090340)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_KDC_UNABLE_TO_REFER' = int32(0x80090341)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_KDC_UNKNOWN_ETYPE' = int32(0x80090342)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_LOGON_DENIED' = int32(0x8009030C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_MAX_REFERRALS_EXCEEDED' = int32(0x80090338)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_MESSAGE_ALTERED' = int32(0x8009030F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_MULTIPLE_ACCOUNTS' = int32(0x80090347)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_MUST_BE_KDC' = int32(0x80090339)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NOT_OWNER' = int32(0x80090306)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_AUTHENTICATING_AUTHORITY' = int32(0x80090311)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_CREDENTIALS' = int32(0x8009030E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_IMPERSONATION' = int32(0x8009030B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_IP_ADDRESSES' = int32(0x80090335)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_KERB_KEY' = int32(0x80090348)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_PA_DATA' = int32(0x8009033C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_S4U_PROT_SUPPORT' = int32(0x80090356)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_NO_TGT_REPLY' = int32(0x80090334)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_OUT_OF_SEQUENCE' = int32(0x80090310)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_PKINIT_CLIENT_FAILURE' = int32(0x80090354)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_PKINIT_NAME_MISMATCH' = int32(0x8009033D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_QOP_NOT_SUPPORTED' = int32(0x8009030A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_REVOCATION_OFFLINE_C' = int32(0x80090353)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_REVOCATION_OFFLINE_KDC' = int32(0x80090358)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_SECPKG_NOT_FOUND' = int32(0x80090305)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_SECURITY_QOS_FAILED' = int32(0x80090332)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_SHUTDOWN_IN_PROGRESS' = int32(0x8009033F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_SMARTCARD_CERT_EXPIRED' = int32(0x80090355)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_SMARTCARD_CERT_REVOKED' = int32(0x80090351)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_SMARTCARD_LOGON_REQUIRED' = int32(0x8009033E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_STRONG_CRYPTO_NOT_SUPPORTED' = int32(0x8009033A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_TARGET_UNKNOWN' = int32(0x80090303)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_TIME_SKEW' = int32(0x80090324)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_TOO_MANY_PRINCIPALS' = int32(0x8009033B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_UNFINISHED_CONTEXT_DELETED' = int32(0x80090333)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_UNKNOWN_CREDENTIALS' = int32(0x8009030D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_UNSUPPORTED_FUNCTION' = int32(0x80090302)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_UNSUPPORTED_PREAUTH' = int32(0x80090343)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_UNTRUSTED_ROOT' = int32(0x80090325)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_WRONG_CREDENTIAL_HANDLE' = int32(0x80090336)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_E_WRONG_PRINCIPAL' = int32(0x80090322)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_COMPLETE_AND_CONTINUE' = int32(0x00090314)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_COMPLETE_NEEDED' = int32(0x00090313)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_CONTEXT_EXPIRED' = int32(0x00090317)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_CONTINUE_NEEDED' = int32(0x00090312)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_INCOMPLETE_CREDENTIALS' = int32(0x00090320)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_LOCAL_LOGON' = int32(0x00090315)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_NO_LSA_CONTEXT' = int32(0x00090323)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SEC_I_RENEGOTIATE' = int32(0x00090321)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SN_CRYPTOAPI_CALL_FAILED' = int32(0x80131413)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SN_NO_SUITABLE_CSP' = int32(0x80131414)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_AUTHENTICODE_DISALLOWED' = int32(0x800F0240)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED' = int32(0x800F0243)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER' = int32(0x800F0241)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED' = int32(0x800F0242)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_BAD_INTERFACE_INSTALLSECT' = int32(0x800F021D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_BAD_SECTION_NAME_LINE' = int32(0x800F0001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_BAD_SERVICE_INSTALLSECT' = int32(0x800F0217)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_CANT_LOAD_CLASS_ICON' = int32(0x800F020C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_CANT_REMOVE_DEVINST' = int32(0x800F0232)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_CLASS_MISMATCH' = int32(0x800F0201)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DEVICE_INTERFACE_ACTIVE' = int32(0x800F021B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DEVICE_INTERFACE_REMOVED' = int32(0x800F021C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DEVINFO_DATA_LOCKED' = int32(0x800F0213)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DEVINFO_LIST_LOCKED' = int32(0x800F0212)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DEVINFO_NOT_REGISTERED' = int32(0x800F0208)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE' = int32(0x800F0230)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DEVINST_ALREADY_EXISTS' = int32(0x800F0207)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DI_BAD_PATH' = int32(0x800F0214)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DI_DONT_INSTALL' = int32(0x800F022B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DI_DO_DEFAULT' = int32(0x800F020E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DI_FUNCTION_OBSOLETE' = int32(0x800F023E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DI_NOFILECOPY' = int32(0x800F020F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DI_POSTPROCESSING_REQUIRED' = int32(0x800F0226)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DRIVER_NONNATIVE' = int32(0x800F0234)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_DUPLICATE_FOUND' = int32(0x800F0202)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_ERROR_NOT_INSTALLED' = int32(0x800F1000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_EXPECTED_SECTION_NAME' = int32(0x800F0000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_FILEQUEUE_LOCKED' = int32(0x800F0216)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_GENERAL_SYNTAX' = int32(0x800F0003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INCORRECTLY_COPIED_INF' = int32(0x800F0237)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INF_IN_USE_BY_DEVICES' = int32(0x800F023D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_CLASS' = int32(0x800F0206)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_CLASS_INSTALLER' = int32(0x800F020D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_COINSTALLER' = int32(0x800F0227)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_DEVINST_NAME' = int32(0x800F0205)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_FILTER_DRIVER' = int32(0x800F022C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_HWPROFILE' = int32(0x800F0210)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_INF_LOGCONFIG' = int32(0x800F022A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_MACHINENAME' = int32(0x800F0220)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_PROPPAGE_PROVIDER' = int32(0x800F0224)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_REFERENCE_STRING' = int32(0x800F021F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_REG_PROPERTY' = int32(0x800F0209)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_INVALID_TARGET' = int32(0x800F0233)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_IN_WOW64' = int32(0x800F0235)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_KEY_DOES_NOT_EXIST' = int32(0x800F0204)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_LINE_NOT_FOUND' = int32(0x800F0102)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_MACHINE_UNAVAILABLE' = int32(0x800F0222)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NON_WINDOWS_DRIVER' = int32(0x800F022E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NON_WINDOWS_NT_DRIVER' = int32(0x800F022D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NOT_AN_INSTALLED_OEM_INF' = int32(0x800F023C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NOT_DISABLEABLE' = int32(0x800F0231)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_ASSOCIATED_CLASS' = int32(0x800F0200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_ASSOCIATED_SERVICE' = int32(0x800F0219)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_AUTHENTICODE_CATALOG' = int32(0x800F023F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_BACKUP' = int32(0x800F0103)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_CATALOG_FOR_OEM_INF' = int32(0x800F022F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_CLASSINSTALL_PARAMS' = int32(0x800F0215)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_CLASS_DRIVER_LIST' = int32(0x800F0218)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_COMPAT_DRIVERS' = int32(0x800F0228)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_CONFIGMGR_SERVICES' = int32(0x800F0223)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE' = int32(0x800F021A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_DEVICE_ICON' = int32(0x800F0229)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_DEVICE_SELECTED' = int32(0x800F0211)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_DRIVER_SELECTED' = int32(0x800F0203)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_INF' = int32(0x800F020A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_SUCH_DEVICE_INTERFACE' = int32(0x800F0225)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_SUCH_DEVINST' = int32(0x800F020B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_NO_SUCH_INTERFACE_CLASS' = int32(0x800F021E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE' = int32(0x800F0245)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_PNP_REGISTRY_ERROR' = int32(0x800F023A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_REMOTE_COMM_FAILURE' = int32(0x800F0221)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_REMOTE_REQUEST_UNSUPPORTED' = int32(0x800F023B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_SCE_DISABLED' = int32(0x800F0238)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_SECTION_NAME_TOO_LONG' = int32(0x800F0002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_SECTION_NOT_FOUND' = int32(0x800F0101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_SET_SYSTEM_RESTORE_POINT' = int32(0x800F0236)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH' = int32(0x800F0244)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_UNKNOWN_EXCEPTION' = int32(0x800F0239)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW' = int32(0x800F0300)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'SPAPI_E_WRONG_INF_STYLE' = int32(0x800F0100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_ABNORMALAPIEXIT' = int32(0x800300FA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_ACCESSDENIED' = int32(0x80030005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_BADBASEADDRESS' = int32(0x80030110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_CANTSAVE' = int32(0x80030103)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_CSS_AUTHENTICATION_FAILURE' = int32(0x80030306)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_CSS_KEY_NOT_ESTABLISHED' = int32(0x80030308)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_CSS_KEY_NOT_PRESENT' = int32(0x80030307)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_CSS_REGION_MISMATCH' = int32(0x8003030A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_CSS_SCRAMBLED_SECTOR' = int32(0x80030309)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_DISKISWRITEPROTECTED' = int32(0x80030013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_DOCFILECORRUPT' = int32(0x80030109)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_DOCFILETOOLARGE' = int32(0x80030111)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_EXTANTMARSHALLINGS' = int32(0x80030108)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_FILEALREADYEXISTS' = int32(0x80030050)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_FILENOTFOUND' = int32(0x80030002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INCOMPLETE' = int32(0x80030201)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INSUFFICIENTMEMORY' = int32(0x80030008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INUSE' = int32(0x80030100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INVALIDFLAG' = int32(0x800300FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INVALIDFUNCTION' = int32(0x80030001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INVALIDHANDLE' = int32(0x80030006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INVALIDHEADER' = int32(0x800300FB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INVALIDNAME' = int32(0x800300FC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INVALIDPARAMETER' = int32(0x80030057)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_INVALIDPOINTER' = int32(0x80030009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_LOCKVIOLATION' = int32(0x80030021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_MEDIUMFULL' = int32(0x80030070)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_NOMOREFILES' = int32(0x80030012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_NOTCURRENT' = int32(0x80030101)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_NOTFILEBASEDSTORAGE' = int32(0x80030107)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_NOTSIMPLEFORMAT' = int32(0x80030112)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_OLDDLL' = int32(0x80030105)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_OLDFORMAT' = int32(0x80030104)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_PATHNOTFOUND' = int32(0x80030003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_PROPSETMISMATCHED' = int32(0x800300F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_READFAULT' = int32(0x8003001E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_RESETS_EXHAUSTED' = int32(0x8003030B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_REVERTED' = int32(0x80030102)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_SEEKERROR' = int32(0x80030019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_SHAREREQUIRED' = int32(0x80030106)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_SHAREVIOLATION' = int32(0x80030020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_STATUS_COPY_PROTECTION_FAILURE' = int32(0x80030305)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_TERMINATED' = int32(0x80030202)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_TOOMANYOPENFILES' = int32(0x80030004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_UNIMPLEMENTEDFUNCTION' = int32(0x800300FE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_UNKNOWN' = int32(0x800300FD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_E_WRITEFAULT' = int32(0x8003001D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_S_BLOCK' = int32(0x00030201)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_S_CANNOTCONSOLIDATE' = int32(0x00030206)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_S_CONSOLIDATIONFAILED' = int32(0x00030205)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_S_CONVERTED' = int32(0x00030200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_S_MONITORING' = int32(0x00030203)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_S_MULTIPLEOPENS' = int32(0x00030204)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'STG_S_RETRYNOW' = int32(0x00030202)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'S_FALSE' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'S_OK' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_AGNOST_SIGNATURE' = int32(0x801311BA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_AMBIGUOUS_RETURN' = int32(0x8013116D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_ARRAY_NEEDS_NT_FIXED' = int32(0x801311BE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_ASANY' = int32(0x80131175)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_AUTO_CS_NOT_ALLOWED' = int32(0x801311B2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_BAD_MSCOREE_TLB' = int32(0x80131169)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_BAD_NAMES' = int32(0x8013117B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_BAD_NATIVETYPE' = int32(0x801311A6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_BAD_SIGNATURE' = int32(0x801311BD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_BAD_VTABLE' = int32(0x801311A7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_BAD_VT_TYPE' = int32(0x80131167)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_BITNESS_MISMATCH' = int32(0x801311E1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CANTLOADLIBRARY' = int32(0x80131166)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CANT_LOAD_CLASS' = int32(0x801311A1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CANT_LOAD_MODULE' = int32(0x801311A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CANT_SAVE' = int32(0x80131164)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CIRCULAR_EXPORT' = int32(0x801311A4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CIRCULAR_IMPORT' = int32(0x801311A5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CLASS_LOAD_EXCEPTION' = int32(0x801311AA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CLASS_NEEDS_NT_INTF' = int32(0x801311BF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CONVERT_FAIL' = int32(0x801311BB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CRM_INVALID_SIG' = int32(0x801311A9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CRM_NON_STATIC' = int32(0x801311A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_CTX_NESTED' = int32(0x80131162)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_DUPLICATE_IID' = int32(0x801311B6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_DUPLICATE_TYPE_NAME' = int32(0x8013116E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_ENUM_VALUE_INVALID' = int32(0x801311B5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_ERROR_MESSAGE' = int32(0x80131163)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_GENERICINST_SIGNATURE' = int32(0x8013117D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_GENERICPAR_SIGNATURE' = int32(0x8013117E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_INVALIDLCIDPARAM' = int32(0x80131176)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_INVALID_NAMESPACE' = int32(0x801311AD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_INVALID_TYPEINFO' = int32(0x80131160)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_INVALID_TYPEINFO_UNNAMED' = int32(0x80131161)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_LAYOUT_ERROR' = int32(0x801311AE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_LCIDONDISPONLYITF' = int32(0x80131177)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_LPTSTR_NOT_ALLOWED' = int32(0x801311B1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_MULTIPLE_LCIDS' = int32(0x8013116B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NONPUBLIC_FIELD' = int32(0x80131178)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NONVISIBLEVALUECLASS' = int32(0x801311B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NOTIUNKNOWN' = int32(0x801311AF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NO_CLSID_KEY' = int32(0x801311A3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NO_CRITICALHANDLE_ARRAYS' = int32(0x8013118C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NO_MSCOREE_TLB' = int32(0x80131168)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NO_NESTED_ARRAYS' = int32(0x801311B7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NO_SAFEHANDLE_ARRAYS' = int32(0x80131186)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_NULL_MODULE' = int32(0x801311A2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_PARAM_ERROR_NAMED' = int32(0x801311B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_PARAM_ERROR_UNNAMED' = int32(0x801311B9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_REFERENCED_TYPELIB' = int32(0x801311AC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_TLB_EXCEPTION' = int32(0x8013116A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_TYPED_REF' = int32(0x801311DA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_E_UNKNOWN_SIGNATURE' = int32(0x801311AB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_DUPLICATE_DISPID' = int32(0x0013117A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_GENERIC_BASE_TYPE' = int32(0x001311E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_GENERIC_TYPE' = int32(0x0013117F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_NONSEQUENTIALSTRUCT' = int32(0x80131172)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_REF_TYPE_AS_STRUCT' = int32(0x0013117C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_RESOLVEREFFAILED' = int32(0x80131174)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_TYPEINFO_IMPORTED' = int32(0x0013116C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_TYPE_EXPORTED' = int32(0x00131179)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_UNCONVERTABLE_ARGS' = int32(0x00131170)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_UNCONVERTABLE_FIELD' = int32(0x00131171)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_I_USEIUNKNOWN' = int32(0x0013116F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_S_DUPLICATE_DISPID' = int32(0x001311B4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_S_NOSTDINTERFACE' = int32(0x001311B3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_S_REFERENCED_TYPELIB' = int32(0x001311AC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_BAD_SAFEARRAYFIELD_NO_ELEMENTVT' = int32(0x001311DE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_DEFAULT_INTF_NOT_VISIBLE' = int32(0x001311DB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_DUAL_NOT_DISPATCH' = int32(0x801311BC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_ENUM_VALUE_TOOBIG' = int32(0x001311D5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_EXPORTING_AUTO_LAYOUT' = int32(0x001311D9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_IENUM_CA_ON_IUNK' = int32(0x00131185)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_LAYOUTCLASS_AS_INTERFACE' = int32(0x001311DF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_LIBNOTREGISTERED' = int32(0x80131165)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_NON_INTEGRAL_CA_TYPE' = int32(0x00131184)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_NO_PROPS_IN_EVENTS' = int32(0x801311D3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TLBX_W_WARNING_MESSAGE' = int32(0x00131173)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_ACTION_UNKNOWN' = int32(0x800B0002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_BAD_DIGEST' = int32(0x80096010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_BASIC_CONSTRAINTS' = int32(0x80096019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_CERT_SIGNATURE' = int32(0x80096004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_COUNTER_SIGNER' = int32(0x80096003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_EXPLICIT_DISTRUST' = int32(0x800B0111)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_FAIL' = int32(0x800B010B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_FINANCIAL_CRITERIA' = int32(0x8009601E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_NOSIGNATURE' = int32(0x800B0100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_NO_SIGNER_CERT' = int32(0x80096002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_PROVIDER_UNKNOWN' = int32(0x800B0001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_SUBJECT_FORM_UNKNOWN' = int32(0x800B0003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_SUBJECT_NOT_TRUSTED' = int32(0x800B0004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_SYSTEM_ERROR' = int32(0x80096001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TRUST_E_TIME_STAMP' = int32(0x80096005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_AMBIGUOUSNAME' = int32(0x8002802C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_BADMODULEKIND' = int32(0x800288BD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_BUFFERTOOSMALL' = int32(0x80028016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_CANTCREATETMPFILE' = int32(0x80028CA3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_CANTLOADLIBRARY' = int32(0x80029C4A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_CIRCULARTYPE' = int32(0x80029C84)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_DLLFUNCTIONNOTFOUND' = int32(0x8002802F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_DUPLICATEID' = int32(0x800288C6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_ELEMENTNOTFOUND' = int32(0x8002802B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_FIELDNOTFOUND' = int32(0x80028017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_INCONSISTENTPROPFUNCS' = int32(0x80029C83)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_INVALIDID' = int32(0x800288CF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_INVALIDSTATE' = int32(0x80028029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_INVDATAREAD' = int32(0x80028018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_IOERROR' = int32(0x80028CA2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_LIBNOTREGISTERED' = int32(0x8002801D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_NAMECONFLICT' = int32(0x8002802D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_OUTOFBOUNDS' = int32(0x80028CA1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_QUALIFIEDNAMEDISALLOWED' = int32(0x80028028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_REGISTRYACCESS' = int32(0x8002801C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_SIZETOOBIG' = int32(0x800288C5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_TYPEMISMATCH' = int32(0x80028CA0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_UNDEFINEDTYPE' = int32(0x80028027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_UNKNOWNLCID' = int32(0x8002802E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_UNSUPFORMAT' = int32(0x80028019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'TYPE_E_WRONGTYPEKIND' = int32(0x8002802A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ADDR' = int32(0x80131881)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ADDR_BYREF' = int32(0x80131882)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ADDR_LITERAL' = int32(0x80131883)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARG' = int32(0x80131809)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARGLIST' = int32(0x8013187A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARG_NUM' = int32(0x80131868)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARRAY_ACCESS' = int32(0x80131875)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARRAY_FIELD' = int32(0x80131879)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARRAY_NAME_LONG' = int32(0x8013181A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARRAY_SD' = int32(0x80131877)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARRAY_SD_PTR' = int32(0x80131878)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ARRAY_V_STORE' = int32(0x80131876)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BACKWARD_BRANCH' = int32(0x801318DB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_APPDOMAIN' = int32(0x801318F2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_BRANCH' = int32(0x8013189F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_CONSTRAINED_PREFIX' = int32(0x801318CD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_JMP_TARGET' = int32(0x80131847)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_MD' = int32(0x801318F1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_PE' = int32(0x801318F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_READONLY_PREFIX' = int32(0x801318CC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BAD_VARARG' = int32(0x80131897)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BOX_PTR_TO_STACK' = int32(0x801318B1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_INTO_FIL' = int32(0x8013183F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_INTO_HND' = int32(0x8013183E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_INTO_TRY' = int32(0x8013183D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_OUTOF_FIL' = int32(0x80131842)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_OUTOF_FIN' = int32(0x80131843)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_OUTOF_HND' = int32(0x80131841)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_OUTOF_TRY' = int32(0x80131840)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_BR_TO_EXCEPTION' = int32(0x801318BE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALLCONV_NOT_GENERICINST' = int32(0x801318CA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALLI_VIRTUAL' = int32(0x801318A5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALLVIRT_STATIC' = int32(0x801318BC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALLVIRT_VALCLASS' = int32(0x80131886)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALL_ABSTRACT' = int32(0x801318A6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALL_CTOR' = int32(0x801318BF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALL_SIG' = int32(0x80131887)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALL_STATIC' = int32(0x80131888)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CALL_TO_VTYPE_BASE' = int32(0x801318DC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CATCH_BYREF' = int32(0x801318B9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CATCH_VALUE_TYPE' = int32(0x801318B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CIRCULAR_MVAR_CONSTRAINTS' = int32(0x801318CF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CIRCULAR_VAR_CONSTRAINTS' = int32(0x801318CE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CODE_SIZE_ZERO' = int32(0x80131896)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CONSTRAINED_CALL_WITH_NON_BYREF_THIS' = int32(0x801318D4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CONSTRAINED_OF_NON_VARIABLE_TYPE' = int32(0x801318D5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CTOR' = int32(0x80131889)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CTOR_MUL_INIT' = int32(0x8013188C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CTOR_OR_SUPER' = int32(0x8013188B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_CTOR_VIRT' = int32(0x8013188A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_DEAD' = int32(0x8013187E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_DLGT_BB' = int32(0x801318AB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_DLGT_CTOR' = int32(0x801318AA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_DLGT_LDFTN' = int32(0x801318AD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_DLGT_PATTERN' = int32(0x801318AC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_DLGT_SIG_I' = int32(0x801318B5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_DLGT_SIG_O' = int32(0x801318B6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ENDFILTER' = int32(0x8013183B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ENDFILTER_MISSING' = int32(0x8013183C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ENDFILTER_STACK' = int32(0x801318B4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_ENDFINALLY' = int32(0x8013183A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_EXCEPT' = int32(0x80131806)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_EXPECTED' = int32(0x8013180B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FALLTHRU' = int32(0x80131820)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FALLTHRU_EXCEP' = int32(0x80131835)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FALLTHRU_INTO_FIL' = int32(0x80131837)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FALLTHRU_INTO_HND' = int32(0x80131836)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIELD_ACCESS' = int32(0x8013187D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIELD_NO_STATIC' = int32(0x80131880)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIELD_OVERLAP' = int32(0x801318E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIELD_SIG' = int32(0x80131815)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIELD_STATIC' = int32(0x8013187F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_CONT_FIL' = int32(0x80131832)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_CONT_HND' = int32(0x80131831)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_CONT_TRY' = int32(0x80131830)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_EQ' = int32(0x8013182F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_GTEQ_CS' = int32(0x80131833)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_OVERLAP' = int32(0x8013182E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_PRECEED_HND' = int32(0x801318BA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIL_START' = int32(0x80131834)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FIN_OVERLAP' = int32(0x801318A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FLT_GTEQ_CS' = int32(0x80131825)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FLT_START' = int32(0x80131828)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FOUND' = int32(0x8013180A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_FTN_ABSTRACT' = int32(0x801318AE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_HNDEND_GT_CS' = int32(0x80131824)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_HND_EQ' = int32(0x8013182D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_HND_GTEQ_END' = int32(0x80131823)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_HND_OVERLAP' = int32(0x8013182C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_HND_START' = int32(0x80131827)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_HRESULT' = int32(0x80131801)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_INITLOCALS' = int32(0x801318BD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_INITONLY' = int32(0x80131884)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_INNERMOST_FIRST' = int32(0x801318A4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_INTERNAL' = int32(0x80131818)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LDFTN_CTOR' = int32(0x80131852)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LDSTR_OPERAND' = int32(0x8013186F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LDVIRTFTN_STATIC' = int32(0x801318BB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LEAVE' = int32(0x80131838)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LEXICAL_NESTING' = int32(0x801318A1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LOC' = int32(0x80131808)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LOC_BYNAME' = int32(0x8013180C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LOC_DEAD' = int32(0x80131866)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_LOC_NUM' = int32(0x80131867)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_METHOD_ACCESS' = int32(0x8013187C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_METHOD_END' = int32(0x8013189E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_NEWOBJ_OF_ABSTRACT_CLASS' = int32(0x801318DD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_NOT_IN_GC_HEAP' = int32(0x801318A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_OFFSET' = int32(0x80131802)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_OPCODE' = int32(0x80131803)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_OPERAND' = int32(0x80131804)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_PATH_LOC' = int32(0x80131848)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_PATH_STACK' = int32(0x8013184A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_PATH_STACK_DEPTH' = int32(0x8013184B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_PATH_THIS' = int32(0x80131849)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_PE_LOAD' = int32(0x801318F4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RA_PTR_TO_STACK' = int32(0x801318B7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_READONLY_ILLEGAL_WRITE' = int32(0x801318D7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_READONLY_IN_MKREFANY' = int32(0x801318D8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_READONLY_UNEXPECTED_CALLEE' = int32(0x801318D6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RETHROW' = int32(0x80131839)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_EMPTY' = int32(0x80131873)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_FROM_FIL' = int32(0x80131846)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_FROM_HND' = int32(0x80131845)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_FROM_TRY' = int32(0x80131844)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_MISSING' = int32(0x80131872)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_PTR_TO_STACK' = int32(0x80131870)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_SIG' = int32(0x80131814)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_UNINIT' = int32(0x80131874)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_RET_VOID' = int32(0x80131871)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG' = int32(0x8013188D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_ARRAY' = int32(0x8013188E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_ARRAY_BYREF' = int32(0x80131890)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_ARRAY_PTR' = int32(0x8013188F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_ARRAY_TB_AH' = int32(0x801318B3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_BYREF_BYREF' = int32(0x80131894)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_BYREF_TB_AH' = int32(0x801318B2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_CALLCONV' = int32(0x80131811)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_C_VC' = int32(0x801318AF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_ELEMTYPE' = int32(0x80131812)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_ELEM_PTR' = int32(0x80131891)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_FIELD_PARENT_INST' = int32(0x801318C9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_GENERICINST' = int32(0x801318C6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_METHOD_INST' = int32(0x801318C7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_METHOD_PARENT_INST' = int32(0x801318C8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_MVAR_ARG' = int32(0x801318C5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_MVAR_PARAM' = int32(0x801318C3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_VARARG' = int32(0x80131892)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_VAR_ARG' = int32(0x801318C4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_VAR_PARAM' = int32(0x801318C2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_VC_C' = int32(0x801318B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_SIG_VOID' = int32(0x80131893)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_ARRAY_SD' = int32(0x80131862)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_BYREF' = int32(0x80131860)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_EMPTY' = int32(0x80131858)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_EXCEPTION' = int32(0x80131855)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_I_I4_I8' = int32(0x8013185A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_METHOD' = int32(0x80131861)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_NOT_EQ' = int32(0x80131853)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_NO_R_I8' = int32(0x8013185C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_NO_VALCLASS' = int32(0x80131865)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_NUMERIC' = int32(0x8013185D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_OBJREF' = int32(0x8013185E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_OVERFLOW' = int32(0x80131856)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_P_OBJREF' = int32(0x8013185F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_P_VALCLASS' = int32(0x80131864)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_P_VALCLASS_OBJREF_VAR' = int32(0x801318C1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_R_R4_R8' = int32(0x8013185B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_SLOT' = int32(0x80131807)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_TOO_LARGE' = int32(0x80131819)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_UNDERFLOW' = int32(0x80131857)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_UNEXPECTED' = int32(0x80131854)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_UNEXP_ARRAY' = int32(0x801318A7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_UNINIT' = int32(0x80131859)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_STACK_VALCLASS' = int32(0x80131863)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TAILCALL_INSIDE_EH' = int32(0x801318DA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TAIL_BYREF' = int32(0x80131899)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TAIL_CALL' = int32(0x80131898)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TAIL_RET' = int32(0x8013189A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TAIL_RET_TYPE' = int32(0x8013189C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TAIL_RET_VOID' = int32(0x8013189B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TAIL_STACK_EMPTY' = int32(0x8013189D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_THIS' = int32(0x8013184C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_THIS_UNINIT_BR' = int32(0x80131851)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_THIS_UNINIT_EXCEP' = int32(0x8013184D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_THIS_UNINIT_RET' = int32(0x8013184F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_THIS_UNINIT_STORE' = int32(0x8013184E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_THIS_UNINIT_V_RET' = int32(0x80131850)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_THROW' = int32(0x80131885)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TOKEN' = int32(0x80131805)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TOKEN_BAD_METHOD_SPEC' = int32(0x801318CB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TOKEN_RESOLVE' = int32(0x80131869)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TOKEN_TYPE' = int32(0x8013186A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TOKEN_TYPE_FIELD' = int32(0x8013186C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TOKEN_TYPE_MEMBER' = int32(0x8013186B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TOKEN_TYPE_SIG' = int32(0x8013186D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TRYEND_GT_CS' = int32(0x80131822)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TRY_EQ_HND_FIL' = int32(0x8013182A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TRY_GTEQ_END' = int32(0x80131821)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TRY_N_EMPTY_STACK' = int32(0x801318A9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TRY_OVERLAP' = int32(0x80131829)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TRY_SHARE_FIN_FAL' = int32(0x8013182B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TRY_START' = int32(0x80131826)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_TYPELOAD' = int32(0x801318F3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNALIGNED' = int32(0x801318A3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNALIGNED_ALIGNMENT' = int32(0x801318D9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNKNOWN_OPCODE' = int32(0x80131810)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNSATISFIED_BOX_OPERAND' = int32(0x801318D3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNSATISFIED_FIELD_PARENT_INST' = int32(0x801318D2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNSATISFIED_METHOD_INST' = int32(0x801318D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNSATISFIED_METHOD_PARENT_INST' = int32(0x801318D1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_UNVERIFIABLE' = int32(0x8013186E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_VALCLASS' = int32(0x8013187B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_VALCLASS_OBJREF_VAR' = int32(0x801318C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_VOLATILE' = int32(0x801318A2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VER_E_WRITE_RVA_STATIC' = int32(0x801318F5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VIEW_E_DRAW' = int32(0x80040140)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VIEW_E_FIRST' = int32(0x80040140)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VIEW_E_LAST' = int32(0x8004014F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VIEW_S_ALREADY_FROZEN' = int32(0x00040140)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VIEW_S_FIRST' = int32(0x00040140)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VIEW_S_LAST' = int32(0x0004014F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AROS_OSPLTFRMIDINVAL' = int32(0x80131257)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AR_NAMENULL' = int32(0x80131255)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AR_PROCID' = int32(0x801312A3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_ASOS_DUP' = int32(0x801312E8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_ASOS_OSPLTFRMIDINVAL' = int32(0x80131254)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_BADFLAGS' = int32(0x801312A5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_BADLOCALE' = int32(0x801312DD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_BADNAME' = int32(0x80131216)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_HASHALGID' = int32(0x801312A1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_MULTI' = int32(0x80131250)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_NAMENULL' = int32(0x80131251)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_PROCDUP' = int32(0x801312E7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_AS_PROCID' = int32(0x801312A2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_BLOB_INVALID' = int32(0x80131208)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CA_BADPARENT' = int32(0x80131B19)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CA_BADPROLOG' = int32(0x80131B1E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CA_BADSIG' = int32(0x80131B1C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CA_BADTYPE' = int32(0x80131B1A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CA_NOSIG' = int32(0x80131B1D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CA_NOTCTOR' = int32(0x80131B1B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CDRID_OUTOFRANGE' = int32(0x80131205)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CDTKN_OUTOFRANGE' = int32(0x80131204)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CL_BADPCKSZ' = int32(0x8013122A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CL_DUP' = int32(0x8013122B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CL_TDAUTO' = int32(0x80131229)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CL_TDINTF' = int32(0x80131253)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CN_BADTYPE' = int32(0x801312FB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CN_BLOBNOTNULL' = int32(0x801312C6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CN_BLOBNULL' = int32(0x801312C7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CN_PARENTRANGE' = int32(0x801312A4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CN_PARENTTYPE' = int32(0x801312DE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CT_BADIMPL' = int32(0x801312AC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CT_DUP' = int32(0x8013125E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CT_DUPTDNAME' = int32(0x801312D3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CT_NAMENULL' = int32(0x80131259)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_CT_NOTYPEDEFID' = int32(0x801312EA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_DS_BADFLAGS' = int32(0x801312D6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_DS_BADOWNER' = int32(0x801312D5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_DS_NOBLOB' = int32(0x801312D7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EP_BADARG' = int32(0x80131B23)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EP_BADRET' = int32(0x80131B22)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EP_BADTOKEN' = int32(0x80131B13)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EP_GENERIC_METHOD' = int32(0x80131B41)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EP_GENERIC_TYPE' = int32(0x80131B47)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EP_INSTANCE' = int32(0x80131B14)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EP_TOOMANYARGS' = int32(0x80131B21)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_ALIENMETHOD' = int32(0x801312D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_BADEVTYPE' = int32(0x801312CC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_BADMETHOD' = int32(0x801312CF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_BADSCOPE' = int32(0x801312C8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_BADSEMANTICS' = int32(0x801312CE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_DUP' = int32(0x801312CB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_EVTYPENOTCLASS' = int32(0x801312CD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_FIRENOTVOID' = int32(0x801312DC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_NOADDON' = int32(0x801312D1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_NONAME' = int32(0x801312CA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_EV_NOREMOVEON' = int32(0x801312D2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_BADCALLINGCONV' = int32(0x80131249)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_BADPARENT' = int32(0x801312B4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_DEFLTNOTMARKED' = int32(0x80131274)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_DUP' = int32(0x8013124F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_FLDINIFACE' = int32(0x801312A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_GLOBALNORVA' = int32(0x8013126F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_INITONLYANDLITERAL' = int32(0x80131280)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_INSTINIFACE' = int32(0x8013126B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_LITERALNODEFAULT' = int32(0x80131B17)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_LITERALNOTSTATIC' = int32(0x80131281)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_MARKEDNODEFLT' = int32(0x80131273)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_MARKEDNOMARSHAL' = int32(0x80131271)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_MARSHALNOTMARKED' = int32(0x80131272)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_NAMENULL' = int32(0x8013124D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_NOTPUBINIFACE' = int32(0x8013126C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_NOTVALUERTSN' = int32(0x80131269)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_PARNIL' = int32(0x8013124E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_RVAHASNORVA' = int32(0x80131B01)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_RVAHASZERORVA' = int32(0x80131B02)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FD_VALUEPARNOTENUM' = int32(0x8013126A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FILE_BADFLAGS' = int32(0x801312EB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FILE_DUP' = int32(0x8013125C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FILE_NAMEFULLQLFD' = int32(0x8013125D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FILE_NAMENULL' = int32(0x80131258)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FILE_NULLHASH' = int32(0x801312EC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FILE_SYSNAME' = int32(0x80131217)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FL_BADOFFSET' = int32(0x8013122C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FL_DUP' = int32(0x80131231)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FL_FLDSTATIC' = int32(0x80131230)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FL_NOCL' = int32(0x8013122E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FL_TDNIL' = int32(0x8013122D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FL_TDNOTEXPLCT' = int32(0x8013122F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_BADACCESSFLAG' = int32(0x8013127F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_BADIMPLMAP' = int32(0x8013127A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_GLOBALITEM' = int32(0x8013129D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_GLOBALNOTPUBPRIVSC' = int32(0x8013126D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_GLOBALNOTSTATIC' = int32(0x8013126E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_MARKEDNOPINVOKE' = int32(0x80131278)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_MARKEDNOSECUR' = int32(0x80131275)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_PINVOKENOTMARKED' = int32(0x80131279)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_PINVOKENOTSTATIC' = int32(0x80131277)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_RTSNNOTSN' = int32(0x80131282)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FMD_SECURNOTMARKED' = int32(0x80131276)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FRVA_BADFIELD' = int32(0x80131B10)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FRVA_DUPFIELD' = int32(0x80131B12)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FRVA_DUPRVA' = int32(0x80131B11)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_FRVA_ZERORVA' = int32(0x80131B0F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GPC_DUP' = int32(0x80131B31)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GPC_NONCONTIGUOUS' = int32(0x80131B32)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GPC_OWNERNIL' = int32(0x80131B30)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_DUPNAME' = int32(0x80131B28)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_DUPNUMBER' = int32(0x80131B29)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_ILLEGAL_VARIANCE_FLAGS' = int32(0x80131B2E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_ILLEGAL_VARIANT_MVAR' = int32(0x80131B2D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_NAMENULL' = int32(0x80131B26)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_NONSEQ_BY_NUMBER' = int32(0x80131B2B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_NONSEQ_BY_OWNER' = int32(0x80131B2A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_OWNERNIL' = int32(0x80131B27)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_REFANDVALUETYPE' = int32(0x80131B2F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GP_UNEXPECTED_OWNER_FOR_VARIANT_VAR' = int32(0x80131B2C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_GUID_INVALID' = int32(0x80131207)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IFACE_BADIFACE' = int32(0x801312A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IFACE_BADIMPL' = int32(0x801312A7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IFACE_DUP' = int32(0x8013121F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IFACE_METHMULTIMPL' = int32(0x80131B25)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IFACE_METHNOTIMPL' = int32(0x80131B18)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IFACE_METHNOTIMPLTHISMOD' = int32(0x80131B52)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IFACE_NOTIFACE' = int32(0x80131B00)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IMAP_BADCALLCONV' = int32(0x8013127E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IMAP_BADIMPORTNAME' = int32(0x8013127D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IMAP_BADMEMBER' = int32(0x8013127C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_IMAP_BADMODREF' = int32(0x8013127B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_INTERRUPTED' = int32(0x801312FE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MAR_BADFLAGS' = int32(0x801312E9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MAR_BADIMPL' = int32(0x801312D8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MAR_BADOFFSET' = int32(0x801312D4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MAR_DUP' = int32(0x8013125F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MAR_NAMENULL' = int32(0x8013125B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MAR_NOTPUBPRIV' = int32(0x80131260)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_ABSTANDFINAL' = int32(0x80131290)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_ABSTANDIMPL' = int32(0x80131291)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_ABSTANDPINVOKE' = int32(0x80131292)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_ABSTNOTVIRT' = int32(0x80131293)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_ABSTPARNOTABST' = int32(0x80131283)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_ARITYZERO' = int32(0x80131B43)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_BADCALLINGCONV' = int32(0x80131239)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_BADHEADER' = int32(0x80131B20)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_BADLOCALSIGTOK' = int32(0x80131B1F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_BADRVA' = int32(0x80131B16)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CCTORCALLCONV' = int32(0x801312AE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CCTORHASARGS' = int32(0x801312AB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CCTORNOTSTATIC' = int32(0x8013128C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORABST' = int32(0x8013128B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORININTF' = int32(0x80131286)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORNOTSNRTSN' = int32(0x80131289)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORNOTVOID' = int32(0x801312DB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORPINVOKE' = int32(0x801312F1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORSTATIC' = int32(0x80131288)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORVIRT' = int32(0x8013128A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_CTORZERORVA' = int32(0x80131270)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_DUP' = int32(0x8013124C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_FINNOTVIRT' = int32(0x8013128E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GENERIC_BADCALLCONV' = int32(0x80131B3F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GENERIC_CCTOR' = int32(0x80131B3C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GENERIC_CTOR' = int32(0x80131B3D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GENERIC_GLOBAL' = int32(0x80131B40)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GENERIC_IMPORT' = int32(0x80131B3E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GLOBALABSTORVIRT' = int32(0x80131297)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GLOBALCTORCCTOR' = int32(0x80131287)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_GPMISMATCH' = int32(0x80131B46)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_INVALIDSEMANTICS' = int32(0x8013129A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_MISSARITY' = int32(0x80131B42)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_MULTIPLESEMANTICS' = int32(0x80131299)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_MULTSEMANTICFLAGS' = int32(0x8013129E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NAMENULL' = int32(0x8013124A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NOARGCNT' = int32(0x8013123C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NOSEMANTICFLAGS' = int32(0x8013129F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NOTABSTBADFLAGSRVA' = int32(0x80131295)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NOTABSTNOTIMPL' = int32(0x80131294)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NOTPUBININTF' = int32(0x80131285)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NOTSTATABSTININTF' = int32(0x80131284)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_NOTTHISNOTSTATIC' = int32(0x8013123B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PARAMOUTOFSEQ' = int32(0x801312B5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PARASEQTOOBIG' = int32(0x801312B6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PARMDEFLTNOTMARKED' = int32(0x801312BB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PARMMARKEDNODEFLT' = int32(0x801312BA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PARMMARKEDNOMARSHAL' = int32(0x801312B7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PARMMARSHALNOTMARKED' = int32(0x801312B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PARNIL' = int32(0x8013124B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_PRIVSCOPENORVA' = int32(0x80131296)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_RVAANDIMPLMAP' = int32(0x80131B03)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_SEMANTICSNOTEXIST' = int32(0x8013129B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_STATANDFINORVIRT' = int32(0x8013128F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_SYNCMETHODINVTYPE' = int32(0x801312E5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_THISSTATIC' = int32(0x8013123A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MD_ZERORVA' = int32(0x8013128D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_ALIENBODY' = int32(0x801312AD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_ARITYMISMATCH' = int32(0x80131B4A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_BADBODY' = int32(0x801312B2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_BADCLASS' = int32(0x801312AF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_BADDECL' = int32(0x801312B1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_BODYSTATIC' = int32(0x80131218)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_CLASSISINTF' = int32(0x801312B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_DECLFINAL' = int32(0x8013121C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_DECLNOTGENERIC' = int32(0x80131B48)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_DECLNOTVIRT' = int32(0x8013129C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_DECLPRIV' = int32(0x80131215)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_DUP' = int32(0x801312B3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_IMPLNOTGENERIC' = int32(0x80131B49)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MI_SIGMISMATCH' = int32(0x801312F4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MODREF_DUP' = int32(0x80131233)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MODREF_NAMENULL' = int32(0x80131232)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MOD_MULTI' = int32(0x80131209)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MOD_NAMEFULLQLFD' = int32(0x801312EE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MOD_NONAME' = int32(0x801312ED)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MOD_NULLMVID' = int32(0x8013120A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_BADCALLINGCONV' = int32(0x80131224)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_DELNAME' = int32(0x80131222)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_DUP' = int32(0x80131228)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_NAMEDIFF' = int32(0x80131226)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_NAMENULL' = int32(0x80131220)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_NOTVARARG' = int32(0x80131225)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_PARNIL' = int32(0x80131223)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_SIGDIFF' = int32(0x80131227)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_VARARGCALLINGCONV' = int32(0x801312DA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MR_VTBLNAME' = int32(0x80131221)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_ARITYMISMATCH' = int32(0x80131B38)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_ARITYZERO' = int32(0x80131B45)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_BADCALLINGCONV' = int32(0x80131B35)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_BYREFINST' = int32(0x80131B4D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_DUP' = int32(0x80131B34)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_METHODNIL' = int32(0x80131B33)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_METHODNOTGENERIC' = int32(0x80131B39)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_MISSARG' = int32(0x80131B37)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_MS_MISSARITY' = int32(0x80131B36)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_NC_BADENCLOSER' = int32(0x80131B0C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_NC_BADNESTED' = int32(0x80131B0B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_NC_DUP' = int32(0x80131B0D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_NC_DUPENCLOSER' = int32(0x80131B0E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_NOTINIT' = int32(0x801312FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PD_BADFLAGS' = int32(0x8013121E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_ALIENMETHOD' = int32(0x801312C5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_BADCALLINGCONV' = int32(0x801312C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_BADMETHOD' = int32(0x801312C4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_BADSCOPE' = int32(0x801312BC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_BADSEMANTICS' = int32(0x801312C3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_DEFLTNOTMARKED' = int32(0x801312C2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_DUP' = int32(0x801312BF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_MARKEDNODEFLT' = int32(0x801312C1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_NONAME' = int32(0x801312BD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_PR_NOSIG' = int32(0x801312BE)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_RID_OUTOFRANGE' = int32(0x80131203)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIGNODATA' = int32(0x80131238)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIGNULL' = int32(0x80131237)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_ARITYMISMATCH' = int32(0x80131B3B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_ARITYZERO' = int32(0x80131B44)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_BADELTYPE' = int32(0x80131247)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_BADTOKTYPE' = int32(0x80131B51)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_BADVOID' = int32(0x80131B24)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_BYREFINFIELD' = int32(0x801312E4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_BYREFINST' = int32(0x80131B4C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_LASTSENTINEL' = int32(0x801312E2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_LONGFORM' = int32(0x80131298)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSARG' = int32(0x801312E3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSARITY' = int32(0x80131B3A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSELTYPE' = int32(0x8013123D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSFPTR' = int32(0x80131240)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSFPTRARGCNT' = int32(0x80131241)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSLBND' = int32(0x80131246)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSNLBND' = int32(0x80131245)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSNSIZE' = int32(0x80131243)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSRANK' = int32(0x80131242)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSSIZE' = int32(0x80131244)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSTKN' = int32(0x8013123E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MISSVASIZE' = int32(0x80131248)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_MULTSENTINELS' = int32(0x801312E1)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_SENTINMETHODDEF' = int32(0x801312DF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_SENTMUSTVARARG' = int32(0x801312E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_TKNBAD' = int32(0x8013123F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_SIG_TOKTYPEMISMATCH' = int32(0x80131252)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_STRING_INVALID' = int32(0x80131206)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_BADFIELDLST' = int32(0x801312FA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_BADMETHODLST' = int32(0x801312F9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_DLTNORTSPCL' = int32(0x80131213)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_DUPGUID' = int32(0x8013120F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_DUPNAME' = int32(0x8013120E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENCLNOTNESTED' = int32(0x80131256)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMFLDBADTYPE' = int32(0x80131B15)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMFLDNOTLIT' = int32(0x80131265)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMFLDNOTST' = int32(0x80131264)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMFLDSIGMISMATCH' = int32(0x80131267)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMHASEVENT' = int32(0x801312F8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMHASMETHODS' = int32(0x801312F5)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMHASPROP' = int32(0x801312F7)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMIMPLIFACE' = int32(0x801312F6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMMULINSTFLD' = int32(0x801312FD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMNOINSTFLD' = int32(0x801312FC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMNOLITFLDS' = int32(0x80131266)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMNOVALUE' = int32(0x80131261)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMVALNOT1ST' = int32(0x80131268)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMVALNOTSN' = int32(0x80131263)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_ENUMVALSTATIC' = int32(0x80131262)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTBADTYPESPEC' = int32(0x80131B4B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTENDSCHILD' = int32(0x8013125A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTENDSIFACE' = int32(0x801312F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTENDSITSELF' = int32(0x80131B05)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTENDSSEALED' = int32(0x80131212)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTRAFLAGS' = int32(0x80131B04)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTTRRES' = int32(0x80131236)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_EXTTYPESPEC' = int32(0x80131B07)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_GENERICHASEXPLAYOUT' = int32(0x80131B50)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_IFACEGUIDNULL' = int32(0x8013121B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_IFACENOTABS' = int32(0x80131219)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_IFACEPARNOTNIL' = int32(0x8013121A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_IFACESEALED' = int32(0x80131B0A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_MARKEDNOSECUR' = int32(0x801312AA)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_NAMENULL' = int32(0x8013120D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_NAMETOOLONG' = int32(0x801312E6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_NESTEDNOENCL' = int32(0x80131235)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_NOTIFACEOBJEXTNULL' = int32(0x80131210)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_OBJEXTENDSNONNULL' = int32(0x80131211)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_RTSPCLNOTDLT' = int32(0x80131214)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_RTSPCLNOTSPCL' = int32(0x801312EF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_SECURNOTMARKED' = int32(0x801312A9)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_SYSENUMNOTCLASS' = int32(0x801312F2)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_SYSENUMNOTEXTVTYPE' = int32(0x801312F3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_SYSVTNOTEXTOBJ' = int32(0x80131B06)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_VTNOSIZE' = int32(0x80131B09)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TD_VTNOTSEAL' = int32(0x8013121D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TR_BADSCOPE' = int32(0x80131234)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TR_DUP' = int32(0x8013120C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TR_HASTYPEDEF' = int32(0x801312A6)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TR_NAMENULL' = int32(0x8013120B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TS_EMPTY' = int32(0x80131B4E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_E_TS_HASSENTINALS' = int32(0x80131B4F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_S_ERR' = int32(0x00131201)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_S_WRN' = int32(0x00131200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'VLDTR_S_WRNERR' = int32(0x00131202)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_ABORTED' = int32(0x8004D019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_ABORTING' = int32(0x8004D029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_ALREADYINPROGRESS' = int32(0x8004D018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_ALREADYOTHERSINGLEPHASE' = int32(0x8004D000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_CANTRETAIN' = int32(0x8004D001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_CLERKEXISTS' = int32(0x8004D081)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_CLERKNOTFOUND' = int32(0x8004D080)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_COMMITFAILED' = int32(0x8004D002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_COMMITPREVENTED' = int32(0x8004D003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_CONNECTION_DENIED' = int32(0x8004D01D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_CONNECTION_DOWN' = int32(0x8004D01C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_DEST_TMNOTAVAILABLE' = int32(0x8004D022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_FIRST' = int32(0x8004D000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_HEURISTICABORT' = int32(0x8004D004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_HEURISTICCOMMIT' = int32(0x8004D005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_HEURISTICDAMAGE' = int32(0x8004D006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_HEURISTICDANGER' = int32(0x8004D007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_INDOUBT' = int32(0x8004D016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_INVALIDCOOKIE' = int32(0x8004D015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_INVALIDLSN' = int32(0x8004D084)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_ISOLATIONLEVEL' = int32(0x8004D008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_LAST' = int32(0x8004D029)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_LOGFULL' = int32(0x8004D01A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NETWORK_TX_DISABLED' = int32(0x8004D024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOASYNC' = int32(0x8004D009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOENLIST' = int32(0x8004D00A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOIMPORTOBJECT' = int32(0x8004D014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOISORETAIN' = int32(0x8004D00B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NORESOURCE' = int32(0x8004D00C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOTCURRENT' = int32(0x8004D00D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOTIMEOUT' = int32(0x8004D017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOTRANSACTION' = int32(0x8004D00E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_NOTSUPPORTED' = int32(0x8004D00F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_PARTNER_NETWORK_TX_DISABLED' = int32(0x8004D025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_RECOVERYINPROGRESS' = int32(0x8004D082)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_REENLISTTIMEOUT' = int32(0x8004D01E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_REPLAYREQUEST' = int32(0x8004D085)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_TIP_CONNECT_FAILED' = int32(0x8004D01F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_TIP_DISABLED' = int32(0x8004D023)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_TIP_PROTOCOL_ERROR' = int32(0x8004D020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_TIP_PULL_FAILED' = int32(0x8004D021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_TMNOTAVAILABLE' = int32(0x8004D01B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_TRANSACTIONCLOSED' = int32(0x8004D083)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_UNABLE_TO_LOAD_DTC_PROXY' = int32(0x8004D028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_UNABLE_TO_READ_DTC_CONFIG' = int32(0x8004D027)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_UNKNOWNRMGRID' = int32(0x8004D010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_WRONGSTATE' = int32(0x8004D011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_WRONGUOW' = int32(0x8004D012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_XA_TX_DISABLED' = int32(0x8004D026)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_E_XTIONEXISTS' = int32(0x8004D013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_ABORTING' = int32(0x0004D008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_ALLNORETAIN' = int32(0x0004D007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_ASYNC' = int32(0x0004D000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_DEFECT' = int32(0x0004D001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_FIRST' = int32(0x0004D000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_LAST' = int32(0x0004D010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_LASTRESOURCEMANAGER' = int32(0x0004D010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_LOCALLY_OK' = int32(0x0004D00A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_MADECHANGESCONTENT' = int32(0x0004D005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_MADECHANGESINFORM' = int32(0x0004D006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_OKINFORM' = int32(0x0004D004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_READONLY' = int32(0x0004D002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_SINGLEPHASE' = int32(0x0004D009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XACT_S_SOMENORETAIN' = int32(0x0004D003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XENROLL_E_CANNOT_ADD_ROOT_CERT' = int32(0x80095001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XENROLL_E_KEYSPEC_SMIME_MISMATCH' = int32(0x80095005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XENROLL_E_KEY_NOT_EXPORTABLE' = int32(0x80095000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XENROLL_E_RESPONSE_KA_HASH_MISMATCH' = int32(0x80095004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND' = int32(0x80095002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug'.'HResult' 'XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH' = int32(0x80095003)
	}
}
.namespace 'Microsoft.Samples.Debugging.CorDebug.NativeApi'
{
	.class public sequential sealed 'COR_ACTIVE_FUNCTION'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain'
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' 'pModule'
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction2' 'pFunction'
		.field public uint32 'ilOffset'
		.field public uint32 'Flags'
	}
	.class public sequential sealed 'COR_ARRAY_LAYOUT'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'componentID'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'componentType'
		.field public int32 'firstElementOffset'
		.field public int32 'elementSize'
		.field public int32 'countOffset'
		.field public int32 'rankSize'
		.field public int32 'numRanks'
		.field public int32 'rankOffset'
	}
	.class public sequential sealed 'COR_DEBUG_IL_TO_NATIVE_MAP'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'ilOffset'
		.field public uint32 'nativeStartOffset'
		.field public uint32 'nativeEndOffset'
	}
	.class public sequential sealed 'COR_DEBUG_STEP_RANGE'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'startOffset'
		.field public uint32 'endOffset'
	}
	.class public sequential sealed 'COR_FIELD'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public int32 'token'
		.field public int32 'offset'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'id'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'fieldType'
	}
	.class public sequential sealed 'COR_GC_REFERENCE'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'Domain'
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue' 'Location'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'Type'
		.field public uint64 'ExtraData'
	}
	.class public sequential sealed 'COR_HEAPINFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'areGCStructuresValid'
		.field public uint32 'pointerSize'
		.field public uint32 'numHeaps'
		.field public uint32 'concurrent'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGCType' 'gcType'
	}
	.class public sequential sealed 'COR_HEAPOBJECT'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint64 'address'
		.field public uint64 'size'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'type'
	}
	.class public sequential sealed 'COR_IL_MAP'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'oldOffset'
		.field public uint32 'newOffset'
		.field public int32 'fAccurate'
	}
	.class public sequential sealed 'COR_SEGMENT'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint64 'start'
		.field public uint64 'end'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGenerationTypes' 'type'
		.field public uint32 'heap'
	}
	.class public sequential sealed 'COR_TYPEID'
		extends ['mscorlib']'System'.'ValueType'
		implements class ['mscorlib']'System'.'IEquatable`1'<valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID'>
	{
		.method public virtual hidebysig 
			instance int32 'GetHashCode'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool 'Equals'(object 'obj')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool 'Equals'(valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'other')
		{
			ret
		}
		.field public uint64 'token1'
		.field public uint64 'token2'
	}
	.class public sequential sealed 'COR_TYPE_LAYOUT'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'parentID'
		.field public int32 'objectSize'
		.field public int32 'numFields'
		.field public int32 'boxOffset'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'type'
	}
	.class public sealed 'CorComponentType'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorComponentType' 'CorComponentGCRef' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorComponentType' 'CorComponentPrimitive' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorComponentType' 'CorComponentValueClass' = int32(0x00000001)
	}
	.class public interface abstract import 'CorDebug'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'CoClassAttribute'::.ctor(class ['mscorlib']'System'.'Type') = (01 00 3C 4D 69 63 72 6F 73 6F 66 74 2E 53 61 6D 70 6C 65 73 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 43 6F 72 44 65 62 75 67 43 6C 61 73 73 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 31 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
	}
	.class public sequential sealed 'CorDebugBlockingObject'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue' 'BlockingObject'
		.field public uint32 'Timeout'
		.field public valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugBlockingReason' 'BlockingReason'
	}
	.class public sealed 'CorDebugBlockingReason'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugBlockingReason' 'MonitorCriticalSection' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugBlockingReason' 'MonitorEvent' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugBlockingReason' 'None' = int32(0x00000000)
	}
	.class public sealed 'CorDebugChainReason'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_CLASS_INIT' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_CONTEXT_POLICY' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_CONTEXT_SWITCH' = int32(0x00000400)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_DEBUGGER_EVAL' = int32(0x00000200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_ENTER_MANAGED' = int32(0x00000080)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_ENTER_UNMANAGED' = int32(0x00000100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_EXCEPTION_FILTER' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_FUNC_EVAL' = int32(0x00000800)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_INTERCEPTION' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_NONE' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_PROCESS_START' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_SECURITY' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason' 'CHAIN_THREAD_START' = int32(0x00000040)
	}
	.class public import 'CorDebugClass'
		extends ['mscorlib']'System'.'Object'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebug'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ClassInterfaceAttribute'::.ctor(int16) = (01 00 00 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 36 66 65 66 34 34 64 30 2D 33 39 65 37 2D 34 63 37 37 2D 62 65 38 65 2D 63 39 66 38 63 66 39 38 38 36 33 30 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'TypeLibTypeAttribute'::.ctor(int16) = (01 00 02 00 00 00)
		.method public virtual hidebysig newslot 
			instance void 'CanLaunchOrAttach'([in] uint32 'dwProcessId', [in] int32 'win32DebuggingEnabled')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'CreateProcess'([in] string marshal(lpwstr) 'lpApplicationName', [in] string marshal(lpwstr) 'lpCommandLine', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpProcessAttributes', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpThreadAttributes', [in] int32 'bInheritHandles', [in] uint32 'dwCreationFlags', [in] native int 'lpEnvironment', [in] string marshal(lpwstr) 'lpCurrentDirectory', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'STARTUPINFO' 'lpStartupInfo', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'PROCESS_INFORMATION' 'lpProcessInformation', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugCreateProcessFlags' 'debuggingFlags', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'DebugActiveProcess'([in] uint32 'id', [in] int32 'win32Attach', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'EnumerateProcesses'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcessEnum'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'GetProcess'([in] uint32 'dwProcessId', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'Initialize'()
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'SetManagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback' marshal(interface) 'pCallback')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'SetUnmanagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugUnmanagedCallback' marshal(interface) 'pCallback')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'Terminate'()
			runtime internalcall 
		{
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
			runtime internalcall 
		{
		}
	}
	.class public sealed 'CorDebugCreateProcessFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugCreateProcessFlags' 'DEBUG_NO_SPECIAL_OPTIONS' = int32(0x00000000)
	}
	.class public sealed 'CorDebugExceptionCallbackType'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionCallbackType' 'DEBUG_EXCEPTION_CATCH_HANDLER_FOUND' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionCallbackType' 'DEBUG_EXCEPTION_FIRST_CHANCE' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionCallbackType' 'DEBUG_EXCEPTION_UNHANDLED' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionCallbackType' 'DEBUG_EXCEPTION_USER_FIRST_CHANCE' = int32(0x00000002)
	}
	.class public sequential sealed 'CorDebugExceptionObjectStackFrame'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' 'pModule'
		.field public uint64 'ip'
		.field public int32 'methodDef'
		.field public bool 'isLastForeignException'
	}
	.class public sealed 'CorDebugExceptionUnwindCallbackType'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionUnwindCallbackType' 'DEBUG_EXCEPTION_INTERCEPTED' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionUnwindCallbackType' 'DEBUG_EXCEPTION_UNWIND_BEGIN' = int32(0x00000001)
	}
	.class public sealed 'CorDebugFilterFlagsWindows'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugFilterFlagsWindows' 'IS_FIRST_CHANCE' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugFilterFlagsWindows' 'None' = int32(0x00000000)
	}
	.class public sealed 'CorDebugGCType'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGCType' 'CorDebugServerGC' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGCType' 'CorDebugWorkstationGC' = int32(0x00000000)
	}
	.class public sealed 'CorDebugGenerationTypes'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGenerationTypes' 'CorDebug_Gen0' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGenerationTypes' 'CorDebug_Gen1' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGenerationTypes' 'CorDebug_Gen2' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGenerationTypes' 'CorDebug_LOH' = int32(0x00000003)
	}
	.class public sequential sealed 'CorDebugGuidToTypeMapping'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public valuetype ['mscorlib']'System'.'Guid' 'iid'
		.field public class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType' 'icdType'
	}
	.class public sealed 'CorDebugHandleType'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugHandleType' 'HANDLE_STRONG' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugHandleType' 'HANDLE_WEAK_TRACK_RESURRECTION' = int32(0x00000002)
	}
	.class public sealed 'CorDebugIntercept'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'INTERCEPT_ALL' = int32(0x0000FFFF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'INTERCEPT_CLASS_INIT' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'INTERCEPT_CONTEXT_POLICY' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'INTERCEPT_EXCEPTION_FILTER' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'INTERCEPT_INTERCEPTION' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'INTERCEPT_NONE' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'INTERCEPT_SECURITY' = int32(0x00000004)
	}
	.class public sealed 'CorDebugInternalFrameType'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_APPDOMAIN_TRANSITION' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_CLASS_INIT' = int32(0x00000007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_EXCEPTION' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_FUNC_EVAL' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_INTERNALCALL' = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_JIT_COMPILATION' = int32(0x0000000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_LIGHTWEIGHT_FUNCTION' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_M2U' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_NONE' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_SECURITY' = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType' 'STUBFRAME_U2M' = int32(0x00000002)
	}
	.class public sealed 'CorDebugMDAFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMDAFlags' 'MDA_FLAG_SLIP' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMDAFlags' 'None' = int32(0x00000000)
	}
	.class public interface abstract import 'CorDebugManager'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'CoClassAttribute'::.ctor(class ['mscorlib']'System'.'Type') = (01 00 43 4D 69 63 72 6F 73 6F 66 74 2E 53 61 6D 70 6C 65 73 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 43 6F 72 44 65 62 75 67 4D 61 6E 61 67 65 72 43 6C 61 73 73 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 31 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
	}
	.class public import 'CorDebugManagerClass'
		extends ['mscorlib']'System'.'Object'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugManager'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ClassInterfaceAttribute'::.ctor(int16) = (01 00 00 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 42 37 36 42 31 37 45 46 2D 31 36 46 41 2D 34 33 41 33 2D 42 41 42 46 2D 44 42 36 45 35 39 34 33 39 45 42 30 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'TypeLibTypeAttribute'::.ctor(int16) = (01 00 02 00 00 00)
		.method public virtual hidebysig newslot 
			instance void 'CanLaunchOrAttach'([in] uint32 'dwProcessId', [in] int32 'win32DebuggingEnabled')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'CreateProcess'([in] string marshal(lpwstr) 'lpApplicationName', [in] string marshal(lpwstr) 'lpCommandLine', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpProcessAttributes', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpThreadAttributes', [in] int32 'bInheritHandles', [in] uint32 'dwCreationFlags', [in] native int 'lpEnvironment', [in] string marshal(lpwstr) 'lpCurrentDirectory', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'STARTUPINFO' 'lpStartupInfo', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'PROCESS_INFORMATION' 'lpProcessInformation', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugCreateProcessFlags' 'debuggingFlags', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
		}
		.method public virtual hidebysig newslot 
			instance void 'DebugActiveProcess'([in] uint32 'id', [in] int32 'win32Attach', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'EnumerateProcesses'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcessEnum'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'GetProcess'([in] uint32 'dwProcessId', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'Initialize'()
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'SetManagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback' marshal(interface) 'pCallback')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'SetUnmanagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugUnmanagedCallback' marshal(interface) 'pCallback')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'Terminate'()
			runtime internalcall 
		{
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
			runtime internalcall 
		{
		}
	}
	.class public sealed 'CorDebugMappingResult'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMappingResult' 'MAPPING_APPROXIMATE' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMappingResult' 'MAPPING_EPILOG' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMappingResult' 'MAPPING_EXACT' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMappingResult' 'MAPPING_NO_INFO' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMappingResult' 'MAPPING_PROLOG' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMappingResult' 'MAPPING_UNMAPPED_ADDRESS' = int32(0x00000008)
	}
	.class public sealed 'CorDebugNGENPolicyFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugNGENPolicyFlags' 'DISABLE_LOCAL_NIC' = int32(0x00000001)
	}
	.class public sealed 'CorDebugPlatform'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'CORDB_PLATFORM_MAC_PPC' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'CORDB_PLATFORM_MAC_X86' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'CORDB_PLATFORM_WINDOWS_AMD64' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'CORDB_PLATFORM_WINDOWS_ARM' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'CORDB_PLATFORM_WINDOWS_IA64' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'CORDB_PLATFORM_WINDOWS_X86' = int32(0x00000000)
	}
	.class public sealed 'CorDebugRecordFormat'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRecordFormat' 'FORMAT_WINDOWS_EXCEPTIONRECORD32' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRecordFormat' 'FORMAT_WINDOWS_EXCEPTIONRECORD64' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRecordFormat' 'None' = int32(0x00000000)
	}
	.class public sealed 'CorDebugRegister'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R10' = int32(0x0000000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R11' = int32(0x0000000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R12' = int32(0x0000000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R13' = int32(0x0000000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R14' = int32(0x0000000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R15' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R8' = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_R9' = int32(0x0000000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RAX' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RBP' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RBX' = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RCX' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RDI' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RDX' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RIP' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RSI' = int32(0x00000007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_RSP' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM0' = int32(0x00000011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM1' = int32(0x00000012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM10' = int32(0x0000001B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM11' = int32(0x0000001C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM12' = int32(0x0000001D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM13' = int32(0x0000001E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM14' = int32(0x0000001F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM15' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM2' = int32(0x00000013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM3' = int32(0x00000014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM4' = int32(0x00000015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM5' = int32(0x00000016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM6' = int32(0x00000017)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM7' = int32(0x00000018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM8' = int32(0x00000019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_AMD64_XMM9' = int32(0x0000001A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_LR' = int32(0x0000000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_PC' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R0' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R1' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R10' = int32(0x0000000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R11' = int32(0x0000000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R12' = int32(0x0000000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R2' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R3' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R4' = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R5' = int32(0x00000007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R6' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R7' = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R8' = int32(0x0000000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_R9' = int32(0x0000000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_ARM_SP' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_FRAME_POINTER' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_IA64_BSP' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_IA64_F0' = int32(0x00000083)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_IA64_R0' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_INSTRUCTION_POINTER' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_STACK_POINTER' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_EAX' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_EBP' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_EBX' = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_ECX' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_EDI' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_EDX' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_EIP' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_ESI' = int32(0x00000007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_ESP' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_0' = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_1' = int32(0x0000000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_2' = int32(0x0000000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_3' = int32(0x0000000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_4' = int32(0x0000000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_5' = int32(0x0000000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_6' = int32(0x0000000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'REGISTER_X86_FPSTACK_7' = int32(0x00000010)
	}
	.class public sealed 'CorDebugSetContextFlag'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugSetContextFlag' 'SET_CONTEXT_FLAG_ACTIVE_FRAME' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugSetContextFlag' 'SET_CONTEXT_FLAG_UNWIND_FRAME' = int32(0x00000002)
	}
	.class public sealed 'CorDebugStateChange'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStateChange' 'FLUSH_ALL' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStateChange' 'None' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStateChange' 'PROCESS_RUNNING' = int32(0x00000001)
	}
	.class public sealed 'CorDebugStepReason'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'STEP_CALL' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'STEP_EXCEPTION_FILTER' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'STEP_EXCEPTION_HANDLER' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'STEP_EXIT' = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'STEP_INTERCEPT' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'STEP_NORMAL' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'STEP_RETURN' = int32(0x00000001)
	}
	.class public sealed 'CorDebugThreadState'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugThreadState' 'THREAD_RUN' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugThreadState' 'THREAD_SUSPEND' = int32(0x00000001)
	}
	.class public sealed 'CorDebugUnmappedStop'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'STOP_ALL' = int32(0x0000FFFF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'STOP_EPILOG' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'STOP_NONE' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'STOP_NO_MAPPING_INFO' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'STOP_OTHER_UNMAPPED' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'STOP_PROLOG' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'STOP_UNMANAGED' = int32(0x00000010)
	}
	.class public sealed 'CorDebugUserState'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_BACKGROUND' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_NONE' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_STOPPED' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_STOP_REQUESTED' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_SUSPENDED' = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_SUSPEND_REQUESTED' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_UNSAFE_POINT' = int32(0x00000080)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_UNSTARTED' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState' 'USER_WAIT_SLEEP_JOIN' = int32(0x00000020)
	}
	.class public sealed 'CorElementType'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_ARRAY' = int32(0x00000014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_BOOLEAN' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_BYREF' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_CHAR' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_CLASS' = int32(0x00000012)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_CMOD_OPT' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_CMOD_REQD' = int32(0x0000001F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_END' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_FNPTR' = int32(0x0000001B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_GENERICINST' = int32(0x00000015)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_I' = int32(0x00000018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_I1' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_I2' = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_I4' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_I8' = int32(0x0000000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_INTERNAL' = int32(0x00000021)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_MAX' = int32(0x00000022)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_MODIFIER' = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_MVAR' = int32(0x0000001E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_OBJECT' = int32(0x0000001C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_PINNED' = int32(0x00000045)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_PTR' = int32(0x0000000F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_R4' = int32(0x0000000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_R8' = int32(0x0000000D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_SENTINEL' = int32(0x00000041)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_STRING' = int32(0x0000000E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_SZARRAY' = int32(0x0000001D)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_TYPEDBYREF' = int32(0x00000016)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_U' = int32(0x00000019)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_U1' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_U2' = int32(0x00000007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_U4' = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_U8' = int32(0x0000000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_VALUETYPE' = int32(0x00000011)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_VAR' = int32(0x00000013)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'ELEMENT_TYPE_VOID' = int32(0x00000001)
	}
	.class public sealed 'CorGCReferenceType'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleAll' = int32(0x7FFFFFFF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleStrong' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleStrongAsyncPinned' = int32(0x00000080)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleStrongDependent' = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleStrongOnly' = int32(0x000001E3)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleStrongPinning' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleStrongRefCount' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleStrongSizedByref' = int32(0x00000100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleWeakLong' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleWeakOnly' = int32(0x0000001C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleWeakRefCount' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorHandleWeakShort' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorReferenceFinalizer' = int32(0x80000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorGCReferenceType' 'CorReferenceStack' = int32(0x80000001)
	}
	.class public interface abstract import 'EmbeddedCLRCorDebug'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'CoClassAttribute'::.ctor(class ['mscorlib']'System'.'Type') = (01 00 47 4D 69 63 72 6F 73 6F 66 74 2E 53 61 6D 70 6C 65 73 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 45 6D 62 65 64 64 65 64 43 4C 52 43 6F 72 44 65 62 75 67 43 6C 61 73 73 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 31 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
	}
	.class public import 'EmbeddedCLRCorDebugClass'
		extends ['mscorlib']'System'.'Object'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'EmbeddedCLRCorDebug'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ClassInterfaceAttribute'::.ctor(int16) = (01 00 00 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 32 31 31 46 31 32 35 34 2D 42 43 37 45 2D 34 41 46 35 2D 42 39 41 41 2D 30 36 37 33 30 38 44 38 33 44 44 31 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'TypeLibTypeAttribute'::.ctor(int16) = (01 00 02 00 00 00)
		.method public virtual hidebysig newslot 
			instance void 'CanLaunchOrAttach'([in] uint32 'dwProcessId', [in] int32 'win32DebuggingEnabled')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'CreateProcess'([in] string marshal(lpwstr) 'lpApplicationName', [in] string marshal(lpwstr) 'lpCommandLine', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpProcessAttributes', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpThreadAttributes', [in] int32 'bInheritHandles', [in] uint32 'dwCreationFlags', [in] native int 'lpEnvironment', [in] string marshal(lpwstr) 'lpCurrentDirectory', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'STARTUPINFO' 'lpStartupInfo', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'PROCESS_INFORMATION' 'lpProcessInformation', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugCreateProcessFlags' 'debuggingFlags', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
		}
		.method public virtual hidebysig newslot 
			instance void 'DebugActiveProcess'([in] uint32 'id', [in] int32 'win32Attach', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'EnumerateProcesses'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcessEnum'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'GetProcess'([in] uint32 'dwProcessId', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'Initialize'()
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'SetManagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback' marshal(interface) 'pCallback')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'SetUnmanagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugUnmanagedCallback' marshal(interface) 'pCallback')
			runtime internalcall 
		{
		}
		.method public virtual hidebysig newslot 
			instance void 'Terminate'()
			runtime internalcall 
		{
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
			runtime internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebug'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 31 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Initialize'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Terminate'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetManagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback' marshal(interface) 'pCallback')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetUnmanagedHandler'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugUnmanagedCallback' marshal(interface) 'pCallback')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateProcess'([in] string marshal(lpwstr) 'lpApplicationName', [in] string marshal(lpwstr) 'lpCommandLine', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpProcessAttributes', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpThreadAttributes', [in] int32 'bInheritHandles', [in] uint32 'dwCreationFlags', [in] native int 'lpEnvironment', [in] string marshal(lpwstr) 'lpCurrentDirectory', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'STARTUPINFO' 'lpStartupInfo', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'PROCESS_INFORMATION' 'lpProcessInformation', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugCreateProcessFlags' 'debuggingFlags', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'DebugActiveProcess'([in] uint32 'id', [in] int32 'win32Attach', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateProcesses'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcessEnum'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetProcess'([in] uint32 'dwProcessId', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CanLaunchOrAttach'([in] uint32 'dwProcessId', [in] int32 'win32DebuggingEnabled')
		{
		}
	}
	.class public interface abstract import 'ICorDebugAppDomain'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugController'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 33 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Stop'([in] uint32 'dwTimeout')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Continue'([in] int32 'fIsOutOfBand')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsRunning'([out] int32& 'pbRunning')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'HasQueuedCallbacks'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [out] int32& 'pbQueued')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateThreads'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThreadEnum'& marshal(interface) 'ppThreads')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetAllThreadsDebugState'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugThreadState' 'state', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pExceptThisThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Detach'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Terminate'([in] uint32 'exitCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CanCommitChanges'([in] uint32 'cSnapshots', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEditAndContinueSnapshot'& marshal(interface) 'pSnapshots', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugErrorInfoEnum'& marshal(interface) 'pError')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CommitChanges'([in] uint32 'cSnapshots', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEditAndContinueSnapshot'& marshal(interface) 'pSnapshots', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugErrorInfoEnum'& marshal(interface) 'pError')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetProcess'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateAssemblies'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssemblyEnum'& marshal(interface) 'ppAssemblies')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModuleFromMetaDataInterface'([in] object marshal(iunknown) 'pIMetaData', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule'& marshal(interface) 'ppModule')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateBreakpoints'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpointEnum'& marshal(interface) 'ppBreakpoints')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateSteppers'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepperEnum'& marshal(interface) 'ppSteppers')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsAttached'([out] int32& 'pbAttached')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetName'([in] uint32 'cchName', [out] uint32& 'pcchName', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetObject'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppObject')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Attach'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetID'([out] uint32& 'pId')
		{
		}
	}
	.class public interface abstract import 'ICorDebugAppDomain2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 30 39 36 45 38 31 44 35 2D 45 43 44 41 2D 34 32 30 32 2D 38 33 46 35 2D 43 36 35 39 38 30 41 39 45 46 37 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetArrayOrPointerType'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'elementType', [in] uint32 'nRank', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType' marshal(interface) 'pTypeArg', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& marshal(interface) 'ppType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunctionPointerType'([in] uint32 'nTypeArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'[] marshal([ + 0]) 'ppTypeArgs', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& marshal(interface) 'ppType')
		{
		}
	}
	.class public interface abstract import 'ICorDebugAppDomain3'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 38 43 42 39 36 41 31 36 2D 42 35 38 38 2D 34 32 45 32 2D 42 37 31 43 2D 44 44 38 34 39 46 43 32 45 43 43 43 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCachedWinRTTypesForIIDs'([in] uint32 'cReqTypes', [in] valuetype ['mscorlib']'System'.'Guid'[] marshal([ + 0]) 'iidsToResolve', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugTypeEnum'& 'ppTypesEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCachedWinRTTypes'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugGuidToTypeEnum'& 'ppGuidToTypeEnum')
		{
		}
	}
	.class public interface abstract import 'ICorDebugAppDomainEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 36 33 43 41 31 42 32 34 2D 34 33 35 39 2D 34 38 38 33 2D 42 44 35 37 2D 31 33 46 38 31 35 46 35 38 37 34 34 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain'[] marshal([]) 'values', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugArrayValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugHeapValue', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 30 34 30 35 42 30 44 46 2D 41 36 36 30 2D 31 31 44 32 2D 42 44 30 32 2D 30 30 30 30 46 38 30 38 34 39 42 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsValid'([out] int32& 'pbValid')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateRelocBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetElementType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRank'([out] uint32& 'pnRank')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pnCount')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetDimensions'([in] uint32 'cdim', [out] uint32[] marshal([ + 0]) 'dims')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'HasBaseIndicies'([out] int32& 'pbHasBaseIndicies')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetBaseIndicies'([in] uint32 'cdim', [out] uint32[] marshal([ + 0]) 'indicies')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetElement'([in] uint32 'cdim', [in] int32[] marshal([ + 0]) 'indices', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetElementAtPosition'([in] uint32 'nPosition', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
	}
	.class public interface abstract import 'ICorDebugAssembly'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 44 46 35 39 35 30 37 43 2D 44 34 37 41 2D 34 35 39 45 2D 42 43 45 32 2D 36 34 32 37 45 41 43 38 46 44 30 36 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetProcess'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAppDomain'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain'& marshal(interface) 'ppAppDomain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateModules'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModuleEnum'& marshal(interface) 'ppModules')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCodeBase'([in] uint32 'cchName', [out] uint32& 'pcchName', char[] marshal([]) 'szName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetName'([in] uint32 'cchName', [out] uint32& 'pcchName', char[] marshal([]) 'szName')
		{
		}
	}
	.class public interface abstract import 'ICorDebugAssembly2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 34 32 36 44 31 46 39 45 2D 36 44 44 34 2D 34 34 43 38 2D 41 45 43 37 2D 32 36 43 44 42 41 46 34 45 33 39 38 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'IsFullyTrusted'([out] int32& 'pbFullyTrusted')
		{
		}
	}
	.class public interface abstract import 'ICorDebugAssemblyEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 34 41 32 41 31 45 43 39 2D 38 35 45 43 2D 34 42 46 42 2D 39 46 31 35 2D 41 38 39 46 44 46 45 30 46 45 38 33 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssembly'[] marshal([]) 'values', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugBoxValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugHeapValue', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 43 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsValid'([out] int32& 'pbValid')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateRelocBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetObject'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugObjectValue'& marshal(interface) 'ppObject')
		{
		}
	}
	.class public interface abstract import 'ICorDebugBreakpoint'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 45 38 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Activate'([in] int32 'bActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsActive'([out] int32& 'pbActive')
		{
		}
	}
	.class public interface abstract import 'ICorDebugBreakpointEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 33 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint'[] marshal([]) 'breakpoints', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugChain'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 45 45 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThread'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread'& marshal(interface) 'ppThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStackRange'([out] uint64& 'pStart', [out] uint64& 'pEnd')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetContext'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugContext'& marshal(interface) 'ppContext')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCaller'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCallee'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPrevious'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNext'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsManaged'([out] int32& 'pManaged')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateFrames'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrameEnum'& marshal(interface) 'ppFrames')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetActiveFrame'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRegisterSet'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugRegisterSet'& marshal(interface) 'ppRegisters')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetReason'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugChainReason'& 'pReason')
		{
		}
	}
	.class public interface abstract import 'ICorDebugChainEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 38 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'[] marshal([]) 'chains', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugClass'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 35 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModule'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule'& marshal(interface) 'pModule')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetToken'([out] uint32& 'pTypeDef')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStaticFieldValue'([in] uint32 'fieldDef', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame' marshal(interface) 'pFrame', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
	}
	.class public interface abstract import 'ICorDebugClass2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 42 30 30 38 45 41 38 44 2D 37 41 42 31 2D 34 33 46 37 2D 42 42 32 30 2D 46 42 42 35 41 30 34 30 33 38 41 45 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetParameterizedType'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'elementType', [in] uint32 'nTypeArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'[] marshal([ + 1]) 'ppTypeArgs', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& marshal(interface) 'ppType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetJMCStatus'([in] int32 'bIsJustMyCode')
		{
		}
	}
	.class public interface abstract import 'ICorDebugCode'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 34 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'IsIL'([out] int32& 'pbIL')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunction'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pStart')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pcBytes')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([in] uint32 'offset', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunctionBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCode'([in] uint32 'startOffset', [in] uint32 'endOffset', [in] uint32 'cBufferAlloc', [out] uint8[] marshal([ + 4]) 'buffer', [out] uint32& 'pcBufferSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVersionNumber'([out] uint32& 'nVersion')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetILToNativeMapping'([in] uint32 'cMap', [out] uint32& 'pcMap', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_DEBUG_IL_TO_NATIVE_MAP'[] marshal([ + 1]) 'map')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetEnCRemapSequencePoints'([in] uint32 'cMap', [out] uint32& 'pcMap', [out] uint32[] marshal([]) 'offsets')
		{
		}
	}
	.class public interface abstract import 'ICorDebugCode2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 35 46 36 39 36 35 30 39 2D 34 35 32 46 2D 34 34 33 36 2D 41 33 46 45 2D 34 44 31 31 46 45 37 45 32 33 34 37 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCodeChunks'([in] uint32 'cbufSize', [out] uint32& 'pcnumChunks', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'_CodeChunkInfo'[] marshal([ + 1]) 'chunks')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCompilerFlags'([out] uint32& 'pdwFlags')
		{
		}
	}
	.class public interface abstract import 'ICorDebugCodeEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 35 35 45 39 36 34 36 31 2D 39 36 34 35 2D 34 35 45 34 2D 41 32 46 46 2D 30 33 36 37 38 37 37 41 42 43 44 45 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCode'[] marshal([]) 'values', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugComObjectValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 35 46 36 39 43 35 45 35 2D 33 45 31 32 2D 34 32 44 46 2D 42 33 37 31 2D 46 39 44 37 36 31 44 36 45 45 32 34 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCachedInterfaceTypes'([in] bool 'bIInspectableOnly', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugTypeEnum'& 'ppInterfacesEnum')
		{
		}
	}
	.class public interface abstract import 'ICorDebugContext'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugObjectValue', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 30 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetClass'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass'& marshal(interface) 'ppClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFieldValue'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'pClass', [in] uint32 'fieldDef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVirtualMethod'([in] uint32 'memberRef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetContext'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugContext'& marshal(interface) 'ppContext')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsValueClass'([out] int32& 'pbIsValueClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetManagedCopy'([out] object& marshal(iunknown) 'ppObject')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetFromManagedCopy'([in] object marshal(iunknown) 'pObject')
		{
		}
	}
	.class public interface abstract import 'ICorDebugController'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 32 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Stop'([in] uint32 'dwTimeout')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Continue'([in] int32 'fIsOutOfBand')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsRunning'([out] int32& 'pbRunning')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'HasQueuedCallbacks'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [out] int32& 'pbQueued')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateThreads'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThreadEnum'& marshal(interface) 'ppThreads')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetAllThreadsDebugState'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugThreadState' 'state', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pExceptThisThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Detach'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Terminate'([in] uint32 'exitCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CanCommitChanges'([in] uint32 'cSnapshots', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEditAndContinueSnapshot'& marshal(interface) 'pSnapshots', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugErrorInfoEnum'& marshal(interface) 'pError')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CommitChanges'([in] uint32 'cSnapshots', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEditAndContinueSnapshot'& marshal(interface) 'pSnapshots', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugErrorInfoEnum'& marshal(interface) 'pError')
		{
		}
	}
	.class public interface abstract import 'ICorDebugDataTarget'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 46 45 30 36 44 43 32 38 2D 34 39 46 42 2D 34 36 33 36 2D 41 34 41 33 2D 45 38 30 44 42 34 41 45 31 31 36 43 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'GetPlatform'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 'ReadVirtual'(uint64 'address', native int 'buffer', uint32 'bytesRequested')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThreadContext'(uint32 'threadId', uint32 'contextFlags', uint32 'contextSize', native int 'context')
		{
		}
	}
	.class public interface abstract import 'ICorDebugEditAndContinueSnapshot'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 36 44 43 33 46 41 30 31 2D 44 37 43 42 2D 31 31 44 32 2D 38 41 39 35 2D 30 30 38 30 43 37 39 32 45 35 44 38 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CopyMetaData'([in] class ['mscorlib']'System.Runtime.InteropServices.ComTypes'.'IStream' marshal(interface) 'pIStream', [out] valuetype ['mscorlib']'System'.'Guid'& 'pMvid')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMvid'([out] valuetype ['mscorlib']'System'.'Guid'& 'pMvid')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRoDataRVA'([out] uint32& 'pRoDataRVA')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRwDataRVA'([out] uint32& 'pRwDataRVA')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetPEBytes'([in] class ['mscorlib']'System.Runtime.InteropServices.ComTypes'.'IStream' marshal(interface) 'pIStream')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetILMap'([in] uint32 'mdFunction', [in] uint32 'cMapSize', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_IL_MAP'& 'map')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetPESymbolBytes'([in] class ['mscorlib']'System.Runtime.InteropServices.ComTypes'.'IStream' marshal(interface) 'pIStream')
		{
		}
	}
	.class public interface abstract import 'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 31 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
	}
	.class public interface abstract import 'ICorDebugEnumBlockingObject'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 39 37 36 41 36 32 37 38 2D 31 33 34 41 2D 34 61 38 31 2D 38 31 41 33 2D 38 46 32 37 37 39 34 33 46 34 43 33 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'countElements')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'enumerator')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'countElements')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'countElements', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugBlockingObject'[] marshal([]) 'blockingObjects', [out] uint32& 'countElementsFetched')
			preservesig 
		{
		}
	}
	.class public interface abstract import 'ICorDebugErrorInfoEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 46 30 45 31 38 38 30 39 2D 37 32 42 35 2D 31 31 44 32 2D 39 37 36 46 2D 30 30 41 30 43 39 42 34 44 35 30 43 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] native int 'errors', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 23 49 43 6F 72 44 65 62 75 67 45 64 69 74 41 6E 64 43 6F 6E 74 69 6E 75 65 45 72 72 6F 72 49 6E 66 6F 2A 2A 00 00)
		}
	}
	.class public interface abstract import 'ICorDebugEval'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 36 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CallFunction'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pFunction', [in] uint32 'nArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'[] marshal([ + 1]) 'ppArgs')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewObject'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pConstructor', [in] uint32 'nArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'[] marshal([ + 1]) 'ppArgs')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewObjectNoConstructor'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'pClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewString'([in] string marshal(lpwstr) 'string')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewArray'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'elementType', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'pElementClass', [in] uint32 'rank', [in] uint32& 'dims', [in] uint32& 'lowBounds')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsActive'([out] int32& 'pbActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Abort'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetResult'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppResult')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThread'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread'& marshal(interface) 'ppThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateValue'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType' 'elementType', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'pElementClass', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
	}
	.class public interface abstract import 'ICorDebugEval2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 46 42 30 44 39 43 45 37 2D 42 45 36 36 2D 34 36 38 33 2D 39 44 33 32 2D 41 34 32 41 30 34 45 32 46 44 39 31 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CallParameterizedFunction'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pFunction', [in] uint32 'nTypeArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'[] marshal([ + 1]) 'ppTypeArgs', [in] uint32 'nArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'[] marshal([ + 3]) 'ppArgs')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateValueForType'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType' marshal(interface) 'pType', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewParameterizedObject'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pConstructor', [in] uint32 'nTypeArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'[] marshal([ + 1]) 'ppTypeArgs', [in] uint32 'nArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'[] marshal([ + 3]) 'ppArgs')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewParameterizedObjectNoConstructor'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'pClass', [in] uint32 'nTypeArgs', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'[] marshal([ + 1]) 'ppTypeArgs')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewParameterizedArray'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType' marshal(interface) 'pElementType', [in] uint32 'rank', [in] uint32& 'dims', [in] uint32& 'lowBounds')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NewStringWithLength'([in] string marshal(lpwstr) 'string', [in] uint32 'uiLength')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'RudeAbort'()
		{
		}
	}
	.class public interface abstract import 'ICorDebugExceptionObjectCallStackEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 45 44 37 37 35 35 33 30 2D 34 44 43 34 2D 34 31 46 37 2D 38 36 44 30 2D 39 45 32 44 45 46 37 44 46 43 36 36 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionObjectStackFrame'[] marshal([]) 'values', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugExceptionObjectValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 41 45 34 43 41 36 35 44 2D 35 39 44 44 2D 34 32 41 32 2D 38 33 41 35 2D 35 37 45 38 41 30 38 44 38 37 31 39 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateExceptionCallStack'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugExceptionObjectCallStackEnum'& 'ppCallStackEnum')
		{
		}
	}
	.class public interface abstract import 'ICorDebugFrame'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 45 46 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetChain'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCode'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCode'& marshal(interface) 'ppCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunction'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunctionToken'([out] uint32& 'pToken')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStackRange'([out] uint64& 'pStart', [out] uint64& 'pEnd')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCaller'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCallee'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateStepper'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper'& marshal(interface) 'ppStepper')
		{
		}
	}
	.class public interface abstract import 'ICorDebugFrameEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 37 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'[] marshal([]) 'frames', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugFunction'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 33 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModule'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule'& marshal(interface) 'ppModule')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetClass'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass'& marshal(interface) 'ppClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetToken'([out] uint32& 'pMethodDef')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetILCode'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCode'& marshal(interface) 'ppCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNativeCode'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCode'& marshal(interface) 'ppCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunctionBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLocalVarSigToken'([out] uint32& 'pmdSig')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCurrentVersionNumber'([out] uint32& 'pnCurrentVersion')
		{
		}
	}
	.class public interface abstract import 'ICorDebugFunction2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 45 46 30 43 34 39 30 42 2D 39 34 43 33 2D 34 45 34 44 2D 42 36 32 39 2D 44 44 43 31 33 34 43 35 33 32 44 38 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'SetJMCStatus'([in] int32 'bIsJustMyCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetJMCStatus'([out] int32& 'pbIsJustMyCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateNativeCode'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCodeEnum'& marshal(interface) 'ppCodeEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVersionNumber'([out] uint32& 'pnVersion')
		{
		}
	}
	.class public interface abstract import 'ICorDebugFunctionBreakpoint'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 45 39 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Activate'([in] int32 'bActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsActive'([out] int32& 'pbActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunction'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetOffset'([out] uint32& 'pnOffset')
		{
		}
	}
	.class public interface abstract import 'ICorDebugGCReferenceEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 37 46 33 43 32 34 44 33 2D 37 45 31 44 2D 34 32 34 35 2D 41 43 33 41 2D 46 37 32 46 38 38 35 39 43 38 30 43 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_GC_REFERENCE'[] marshal([]) 'segs', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugGenericValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 38 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetValue'([out] native int 'pTo')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetValue'([in] native int 'pFrom')
		{
		}
	}
	.class public interface abstract import 'ICorDebugGuidToTypeEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 36 31 36 34 44 32 34 32 2D 31 30 31 35 2D 34 42 44 36 2D 38 43 42 45 2D 44 30 44 42 44 34 42 38 32 37 35 41 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugGuidToTypeMapping'[] marshal([]) 'values', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugHandleValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugReferenceValue', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 30 32 39 35 39 36 45 38 2D 32 37 36 42 2D 34 36 41 31 2D 39 38 32 31 2D 37 33 32 45 39 36 42 42 42 30 30 42 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsNull'([out] int32& 'pbNull')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetValue'([out] uint64& 'pValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetValue'([in] uint64 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Dereference'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'DereferenceStrong'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetHandleType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugHandleType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Dispose'()
		{
		}
	}
	.class public interface abstract import 'ICorDebugHeapEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 37 36 44 37 44 41 42 38 2D 44 30 34 34 2D 31 31 44 46 2D 39 41 31 35 2D 37 45 32 39 44 46 44 37 32 30 38 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_HEAPOBJECT'[] marshal([]) 'objs', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugHeapSegmentEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 41 32 46 41 30 46 38 45 2D 44 30 34 35 2D 31 31 44 46 2D 41 43 38 45 2D 43 45 32 41 44 46 44 37 32 30 38 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_SEGMENT'[] marshal([]) 'segs', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugHeapValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 41 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsValid'([out] int32& 'pbValid')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateRelocBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
	}
	.class public interface abstract import 'ICorDebugHeapValue2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 45 33 41 43 34 44 36 43 2D 39 43 42 37 2D 34 33 45 36 2D 39 36 43 43 2D 42 32 31 35 34 30 45 35 30 38 33 43 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateHandle'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugHandleType' 'type', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugHandleValue'& marshal(interface) 'ppHandle')
		{
		}
	}
	.class public interface abstract import 'ICorDebugHeapValue3'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 41 36 39 41 43 41 44 38 2D 32 33 37 34 2D 34 36 65 39 2D 39 46 46 38 2D 42 31 46 31 34 31 32 30 44 32 39 36 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThreadOwningMonitorLock'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread'& marshal(interface) 'thread', [out] int32& 'acquisitionCount')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMonitorEventWaitList'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThreadEnum'& marshal(interface) 'threadEnum')
		{
		}
	}
	.class public interface abstract import 'ICorDebugILFrame'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 30 33 45 32 36 33 31 31 2D 34 46 37 36 2D 31 31 44 33 2D 38 38 43 36 2D 30 30 36 30 39 37 39 34 35 34 31 38 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetChain'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCode'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCode'& marshal(interface) 'ppCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunction'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunctionToken'([out] uint32& 'pToken')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStackRange'([out] uint64& 'pStart', [out] uint64& 'pEnd')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCaller'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCallee'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateStepper'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper'& marshal(interface) 'ppStepper')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetIP'([out] uint32& 'pnOffset', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMappingResult'& 'pMappingResult')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetIP'([in] uint32 'nOffset')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateLocalVariables'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueEnum'& marshal(interface) 'ppValueEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLocalVariable'([in] uint32 'dwIndex', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateArguments'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueEnum'& marshal(interface) 'ppValueEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetArgument'([in] uint32 'dwIndex', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStackDepth'([out] uint32& 'pDepth')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStackValue'([in] uint32 'dwIndex', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'CanSetIP'([in] uint32 'nOffset')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugILFrame2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 35 44 38 38 41 39 39 34 2D 36 43 33 30 2D 34 37 39 42 2D 38 39 30 46 2D 42 43 45 46 38 38 42 31 32 39 41 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'RemapFunction'([in] uint32 'newILOffset')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateTypeParameters'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugTypeEnum'& marshal(interface) 'ppTyParEnum')
		{
		}
	}
	.class public interface abstract import 'ICorDebugInternalFrame'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 42 39 32 43 43 37 46 37 2D 39 44 32 44 2D 34 35 43 34 2D 42 43 32 42 2D 36 32 31 46 43 43 39 44 46 42 46 34 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetChain'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCode'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCode'& marshal(interface) 'ppCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunction'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunctionToken'([out] uint32& 'pToken')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStackRange'([out] uint64& 'pStart', [out] uint64& 'pEnd')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCaller'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCallee'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateStepper'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper'& marshal(interface) 'ppStepper')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFrameType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugInternalFrameType'& 'pType')
		{
		}
	}
	.class public interface abstract import 'ICorDebugInternalFrame2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 30 38 31 35 42 44 43 2D 43 46 41 42 2D 34 34 37 65 2D 41 37 37 39 2D 43 31 31 36 42 34 35 34 45 42 35 42 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsCloserToLeaf'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame' marshal(interface) 'pFrameToCompare', [out] int32& 'pIsCloser')
		{
		}
	}
	.class public interface abstract import 'ICorDebugMDA'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 32 36 46 32 46 2D 31 44 42 37 2D 34 35 39 42 2D 42 30 45 43 2D 30 35 46 30 31 44 38 34 31 42 34 32 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetName'([in] uint32 'cchName', [out] uint32& 'pcchName', char[] marshal([]) 'szName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetDescription'([in] uint32 'cchName', [out] uint32& 'pcchName', char[] marshal([]) 'szName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetXML'([in] uint32 'cchName', [out] uint32& 'pcchName', char[] marshal([]) 'szName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFlags'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugMDAFlags'& 'pFlags')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetOSThreadId'([out] uint32& 'pOsTid')
		{
		}
	}
	.class public interface abstract import 'ICorDebugManagedCallback'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 30 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Breakpoint'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint' marshal(interface) 'pBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'StepComplete'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper' marshal(interface) 'pStepper', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'reason')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Break'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'thread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Exception'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] int32 'unhandled')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EvalComplete'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEval' marshal(interface) 'pEval')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EvalException'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEval' marshal(interface) 'pEval')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateProcess'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ExitProcess'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateThread'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'thread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ExitThread'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'thread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'LoadModule'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' marshal(interface) 'pModule')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'UnloadModule'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' marshal(interface) 'pModule')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'LoadClass'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'c')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'UnloadClass'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'c')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'DebuggerError'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess', [in] int32 marshal(error) 'errorHR', [in] uint32 'errorCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'LogMessage'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] int32 'lLevel', [in] string marshal(lpwstr) 'pLogSwitchName', [in] string marshal(lpwstr) 'pMessage')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'LogSwitch'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] int32 'lLevel', [in] uint32 'ulReason', [in] string marshal(lpwstr) 'pLogSwitchName', [in] string marshal(lpwstr) 'pParentName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateAppDomain'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ExitAppDomain'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'LoadAssembly'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssembly' marshal(interface) 'pAssembly')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'UnloadAssembly'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssembly' marshal(interface) 'pAssembly')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ControlCTrap'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'NameChange'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'UpdateModuleSymbols'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' marshal(interface) 'pModule', [in] class ['mscorlib']'System.Runtime.InteropServices.ComTypes'.'IStream' marshal(interface) 'pSymbolStream')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EditAndContinueRemap'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pFunction', [in] int32 'fAccurate')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'BreakpointSetError'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint' marshal(interface) 'pBreakpoint', [in] uint32 'dwError')
		{
		}
	}
	.class public interface abstract import 'ICorDebugManagedCallback2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 32 35 30 45 35 45 45 41 2D 44 42 35 43 2D 34 43 37 36 2D 42 36 46 33 2D 38 43 34 36 46 31 32 45 33 32 30 33 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'FunctionRemapOpportunity'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pOldFunction', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pNewFunction', [in] uint32 'oldILOffset')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateConnection'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess', [in] uint32 'dwConnectionId', [in] uint16& 'pConnName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ChangeConnection'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess', [in] uint32 'dwConnectionId')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'DestroyConnection'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' marshal(interface) 'pProcess', [in] uint32 'dwConnectionId')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Exception'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame' marshal(interface) 'pFrame', [in] uint32 'nOffset', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionCallbackType' 'dwEventType', [in] uint32 'dwFlags')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ExceptionUnwind'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionUnwindCallbackType' 'dwEventType', [in] uint32 'dwFlags')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FunctionRemapComplete'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' marshal(interface) 'pFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'MDANotification'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugController' marshal(interface) 'pController', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugMDA' marshal(interface) 'pMDA')
		{
		}
	}
	.class public interface abstract import 'ICorDebugManagedCallback3'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 32 36 34 45 41 30 46 43 2D 32 35 39 31 2D 34 39 41 41 2D 38 36 38 45 2D 38 33 35 45 36 35 31 35 33 32 33 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CustomNotification'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' marshal(interface) 'pAppDomain')
		{
		}
	}
	.class public interface abstract import 'ICorDebugModule'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 44 42 41 32 44 38 43 31 2D 45 35 43 35 2D 34 30 36 39 2D 38 43 31 33 2D 31 30 41 37 43 36 41 42 46 34 33 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetProcess'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetBaseAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAssembly'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssembly'& marshal(interface) 'ppAssembly')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetName'([in] uint32 'cchName', [out] uint32& 'pcchName', char[] marshal([]) 'szName')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnableJITDebugging'([in] int32 'bTrackJITInfo', [in] int32 'bAllowJitOpts')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnableClassLoadCallbacks'([in] int32 'bClassLoadCallbacks')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunctionFromToken'([in] uint32 'methodDef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunctionFromRVA'([in] uint64 'rva', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetClassFromToken'([in] uint32 'typeDef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass'& marshal(interface) 'ppClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModuleBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetEditAndContinueSnapshot'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEditAndContinueSnapshot'& marshal(interface) 'ppEditAndContinueSnapshot')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMetaDataInterface'([in] valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] class 'Microsoft.Samples.Debugging.CorMetadata.NativeApi'.'IMetadataImport'& marshal(interface) 'ppObj')
		{
			.param [1]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 52 45 46 49 49 44 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetToken'([out] uint32& 'pToken')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsDynamic'([out] int32& 'pDynamic')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetGlobalVariableValue'([in] uint32 'fieldDef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pcBytes')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsInMemory'([out] int32& 'pInMemory')
		{
		}
	}
	.class public interface abstract import 'ICorDebugModule2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 37 46 43 43 35 46 42 35 2D 34 39 43 30 2D 34 31 44 45 2D 39 39 33 38 2D 33 42 38 38 42 35 42 39 41 44 44 37 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'SetJMCStatus'([in] int32 'bIsJustMyCode', [in] uint32 'cTokens', [in] uint32& 'pTokens')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ApplyChanges'([in] uint32 'cbMetadata', [in] uint8[] marshal([]) 'pbMetadata', [in] uint32 'cbIL', [in] uint8[] marshal([]) 'pbIL')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'SetJITCompilerFlags'([in] uint32 'dwFlags')
			runtime preservesig internalcall 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetJITCompilerFlags'([out] uint32& 'pdwFlags')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ResolveAssembly'([in] uint32 'tkAssemblyRef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssembly'& marshal(interface) 'ppAssembly')
		{
		}
	}
	.class public interface abstract import 'ICorDebugModule3'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 38 36 46 30 31 32 42 46 2D 46 46 31 35 2D 34 33 37 32 2D 42 44 33 30 2D 42 36 46 31 31 43 41 41 45 31 44 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateReaderForInMemorySymbols'([in] valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] object& marshal(interface) 'ppObj')
		{
			.param [1]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 52 45 46 49 49 44 00 00)
		}
	}
	.class public interface abstract import 'ICorDebugModuleBreakpoint'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 45 41 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Activate'([in] int32 'bActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsActive'([out] int32& 'pbActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModule'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule'& marshal(interface) 'ppModule')
		{
		}
	}
	.class public interface abstract import 'ICorDebugModuleEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 39 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule'[] marshal([]) 'modules', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugNativeFrame'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 30 33 45 32 36 33 31 34 2D 34 46 37 36 2D 31 31 44 33 2D 38 38 43 36 2D 30 30 36 30 39 37 39 34 35 34 31 38 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetChain'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCode'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugCode'& marshal(interface) 'ppCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunction'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFunctionToken'([out] uint32& 'pToken')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStackRange'([out] uint64& 'pStart', [out] uint64& 'pEnd')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCaller'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCallee'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateStepper'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper'& marshal(interface) 'ppStepper')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetIP'([out] uint32& 'pnOffset')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetIP'([in] uint32 'nOffset')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRegisterSet'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugRegisterSet'& marshal(interface) 'ppRegisters')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLocalRegisterValue'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'reg', [in] uint32 'cbSigBlob', [in] uint32 'pvSigBlob', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLocalDoubleRegisterValue'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'highWordReg', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'lowWordReg', [in] uint32 'cbSigBlob', [in] uint32 'pvSigBlob', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLocalMemoryValue'([in] uint64 'address', [in] uint32 'cbSigBlob', [in] uint32 'pvSigBlob', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLocalRegisterMemoryValue'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'highWordReg', [in] uint64 'lowWordAddress', [in] uint32 'cbSigBlob', [in] uint32 'pvSigBlob', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLocalMemoryRegisterValue'([in] uint64 'highWordAddress', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRegister' 'lowWordRegister', [in] uint32 'cbSigBlob', [in] uint32 'pvSigBlob', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 30 4D 69 63 72 6F 73 6F 66 74 2E 44 65 62 75 67 67 69 6E 67 2E 43 6F 72 44 65 62 75 67 2E 4E 61 74 69 76 65 41 70 69 2E 55 4C 4F 4E 47 5F 50 54 52 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'CanSetIP'([in] uint32 'nOffset')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugNativeFrame2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 35 33 38 39 46 46 31 2D 33 36 38 34 2D 34 63 35 35 2D 41 32 45 45 2D 32 31 30 46 32 36 43 36 30 45 35 45 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'IsChild'([out] int32& 'pChild')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsMatchingParentFrame'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugNativeFrame2' marshal(interface) 'pFrame', [out] int32& 'pParent')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCalleeStackParameterSize'([out] uint32& 'pSize')
		{
		}
	}
	.class public interface abstract import 'ICorDebugObjectEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 32 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] uint64[] marshal([]) 'objects', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugObjectValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 31 38 41 44 33 44 36 45 2D 42 37 44 32 2D 31 31 44 32 2D 42 44 30 34 2D 30 30 30 30 46 38 30 38 34 39 42 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetClass'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass'& marshal(interface) 'ppClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFieldValue'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'pClass', [in] uint32 'fieldDef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVirtualMethod'([in] uint32 'memberRef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetContext'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugContext'& marshal(interface) 'ppContext')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsValueClass'([out] int32& 'pbIsValueClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetManagedCopy'([out] object& marshal(iunknown) 'ppObject')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetFromManagedCopy'([in] object marshal(iunknown) 'pObject')
		{
		}
	}
	.class public interface abstract import 'ICorDebugObjectValue2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 34 39 45 34 41 33 32 30 2D 34 41 39 42 2D 34 45 43 41 2D 42 31 30 35 2D 32 32 39 46 42 37 44 35 30 30 39 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVirtualMethodAndType'([in] uint32 'memberRef', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction'& marshal(interface) 'ppFunction', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& marshal(interface) 'ppType')
		{
		}
	}
	.class public interface abstract import 'ICorDebugProcess'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugController'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 44 36 46 35 46 36 34 2D 37 35 33 38 2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34 42 33 35 45 37 45 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Stop'([in] uint32 'dwTimeout')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Continue'([in] int32 'fIsOutOfBand')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsRunning'([out] int32& 'pbRunning')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'HasQueuedCallbacks'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pThread', [out] int32& 'pbQueued')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateThreads'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThreadEnum'& marshal(interface) 'ppThreads')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetAllThreadsDebugState'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugThreadState' 'state', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' marshal(interface) 'pExceptThisThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Detach'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Terminate'([in] uint32 'exitCode')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CanCommitChanges'([in] uint32 'cSnapshots', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEditAndContinueSnapshot'& marshal(interface) 'pSnapshots', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugErrorInfoEnum'& marshal(interface) 'pError')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CommitChanges'([in] uint32 'cSnapshots', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEditAndContinueSnapshot'& marshal(interface) 'pSnapshots', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugErrorInfoEnum'& marshal(interface) 'pError')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetID'([out] uint32& 'pdwProcessId')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetHandle'([out] native int& 'phProcessHandle')
		{
			.param [1]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 09 48 50 52 4F 43 45 53 53 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThread'([in] uint32 'dwThreadId', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread'& marshal(interface) 'ppThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateObjects'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugObjectEnum'& marshal(interface) 'ppObjects')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsTransitionStub'([in] uint64 'address', [out] int32& 'pbTransitionStub')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsOSSuspended'([in] uint32 'threadID', [out] int32& 'pbSuspended')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThreadContext'([in] uint32 'threadID', [in] uint32 'contextSize', [in] native int 'context')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 05 42 59 54 45 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetThreadContext'([in] uint32 'threadID', [in] uint32 'contextSize', [in] native int 'context')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 05 42 59 54 45 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ReadMemory'([in] uint64 'address', [in] uint32 'size', [out] uint8[] marshal([]) 'buffer', [out] native int& 'read')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 07 53 49 5A 45 5F 54 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'WriteMemory'([in] uint64 'address', [in] uint32 'size', [in] uint8[] marshal([]) 'buffer', [out] native int& 'written')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 07 53 49 5A 45 5F 54 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ClearCurrentException'([in] uint32 'threadID')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnableLogMessages'([in] int32 'fOnOff')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ModifyLogSwitch'([in] string marshal(lpwstr) 'pLogSwitchName', [in] int32 'lLevel')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateAppDomains'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomainEnum'& marshal(interface) 'ppAppDomains')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetObject'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppObject')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ThreadForFiberCookie'([in] uint32 'fiberCookie', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread'& marshal(interface) 'ppThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetHelperThreadID'([out] uint32& 'pThreadID')
		{
		}
	}
	.class public interface abstract import 'ICorDebugProcess2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 41 44 31 42 33 35 38 38 2D 30 45 46 30 2D 34 37 34 34 2D 41 34 39 36 2D 41 41 30 39 41 39 46 38 30 33 37 31 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThreadForTaskID'([in] uint64 'taskid', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread2'& marshal(interface) 'ppThread')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVersion'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'_COR_VERSION'& 'version')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetUnmanagedBreakpoint'([in] uint64 'address', [in] uint32 'bufsize', [out] uint8[] marshal([]) 'buffer', [out] uint32& 'bufLen')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ClearUnmanagedBreakpoint'([in] uint64 'address')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetDesiredNGENCompilerFlags'([in] uint32 'pdwFlags')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetDesiredNGENCompilerFlags'([out] uint32& 'pdwFlags')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetReferenceValueFromGCHandle'([in] native int 'handle', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugReferenceValue'& marshal(interface) 'pOutValue')
		{
		}
	}
	.class public interface abstract import 'ICorDebugProcess3'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 32 45 45 30 36 34 38 38 2D 43 30 44 34 2D 34 32 42 31 2D 42 32 36 44 2D 46 33 37 39 35 45 46 36 30 36 46 42 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'SetEnableCustomNotification'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' marshal(interface) 'pClass', [in] int32 'fOnOff')
		{
		}
	}
	.class public interface abstract import 'ICorDebugProcess4'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 45 39 33 30 43 36 37 39 2D 37 38 41 46 2D 34 39 35 33 2D 38 41 42 37 2D 42 30 41 41 42 46 30 46 39 46 38 30 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Filter'([in] native int 'pRecord', [in] uint32 'countBytes', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugRecordFormat' 'format', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugFilterFlagsWindows' 'dwFlags', [in] uint32 'dwThreadId', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback' 'pCallback', [in][out] uint32& 'dwContinueStatus')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ProcessStateChanged'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStateChange' 'eChange')
		{
		}
	}
	.class public interface abstract import 'ICorDebugProcess5'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 32 31 65 39 64 39 63 30 2D 66 63 62 38 2D 31 31 64 66 2D 38 63 66 66 2D 30 38 30 30 32 30 30 63 39 61 36 36 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetGCHeapInformation'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_HEAPINFO'& 'pHeapInfo')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateHeap'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugHeapEnum'& marshal(interface) 'ppObjects')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateHeapRegions'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugHeapSegmentEnum'& marshal(interface) 'ppRegions')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetObject'([in] uint64 'addr', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugObjectValue'& marshal(interface) 'ppObject')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateGCReferences'([in] int32 'bEnumerateWeakReferences', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugGCReferenceEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateHandles'([in] uint32 'types', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugGCReferenceEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeID'([in] uint64 'objAddr', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID'& 'pId')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeForTypeID'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'id', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& 'type')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetArrayLayout'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'id', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_ARRAY_LAYOUT'& 'layout')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeLayout'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'id', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPE_LAYOUT'& 'layout')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeFields'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_TYPEID' 'id', int32 'celt', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_FIELD'[] marshal([]) 'fields', [out] int32& 'pceltNeeded')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnableNGENPolicy'(valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugNGENPolicyFlags' 'ePolicy')
		{
		}
	}
	.class public interface abstract import 'ICorDebugProcessEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 35 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'[] marshal([]) 'processes', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugReferenceValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 39 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsNull'([out] int32& 'pbNull')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetValue'([out] uint64& 'pValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetValue'([in] uint64 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Dereference'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'DereferenceStrong'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
	}
	.class public interface abstract import 'ICorDebugRegisterSet'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 42 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRegistersAvailable'([out] uint64& 'pAvailable')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRegisters'([in] uint64 'mask', [in] uint32 'regCount', [out] uint64[] marshal([ + 1]) 'regBuffer')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetRegisters'([in] uint64 'mask', [in] uint32 'regCount', [in] uint64[] marshal([ + 1]) 'regBuffer')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetThreadContext'([in] uint32 'contextSize', [in] native int 'context')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 05 42 59 54 45 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetThreadContext'([in] uint32 'contextSize', [in] native int 'context')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 05 42 59 54 45 2A 00 00)
		}
	}
	.class public interface abstract import 'ICorDebugRemote'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 44 35 45 42 42 38 45 32 2D 37 42 42 45 2D 34 63 31 64 2D 39 38 41 36 2D 41 33 43 30 34 43 42 44 45 46 36 34 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateProcessEx'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugRemoteTarget' marshal(interface) 'pRemoteTarget', [in] string marshal(lpwstr) 'lpApplicationName', [in] string marshal(lpwstr) 'lpCommandLine', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpProcessAttributes', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'SECURITY_ATTRIBUTES' 'lpThreadAttributes', [in] int32 'bInheritHandles', [in] uint32 'dwCreationFlags', [in] native int 'lpEnvironment', [in] string marshal(lpwstr) 'lpCurrentDirectory', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'STARTUPINFO' 'lpStartupInfo', [in] class 'Microsoft.Samples.Debugging.NativeApi'.'PROCESS_INFORMATION' 'lpProcessInformation', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugCreateProcessFlags' 'debuggingFlags', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'DebugActiveProcessEx'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugRemoteTarget' marshal(interface) 'pRemoteTarget', [in] uint32 'id', [in] int32 'win32Attach', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
	}
	.class public interface abstract import 'ICorDebugRemoteTarget'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 33 45 44 38 33 38 33 2D 35 41 34 39 2D 34 63 66 35 2D 42 34 42 37 2D 30 31 38 36 34 44 39 45 35 38 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetHostName'([in] uint32 'cchHostName', [out] uint32& 'pcchHostName', [in][out] char[] marshal([ + 0]) 'szHostName')
		{
		}
	}
	.class public interface abstract import 'ICorDebugRuntimeUnwindableFrame'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 38 37 39 43 41 43 30 41 2D 34 41 35 33 2D 34 36 36 38 2D 42 38 45 33 2D 43 42 38 34 37 33 43 42 31 38 37 46 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
	}
	.class public interface abstract import 'ICorDebugStackWalk'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 41 30 36 34 37 44 45 39 2D 35 35 44 45 2D 34 38 31 36 2D 39 32 39 43 2D 33 38 35 32 37 31 43 36 34 43 46 37 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetContext'([in] uint32 'contextFlags', [in] uint32 'contextBufferSize', [out] uint32& 'contextSize', [in] native int 'contextBuffer')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetContext'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugSetContextFlag' 'flag', [in] uint32 'contextSize', [in] native int 'contextBuffer')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'()
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFrame'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
	}
	.class public interface abstract import 'ICorDebugStepper'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 45 43 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'IsActive'([out] int32& 'pbActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Deactivate'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetInterceptMask'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugIntercept' 'mask')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetUnmappedStopMask'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUnmappedStop' 'mask')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Step'([in] int32 'bStepIn')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'StepRange'([in] int32 'bStepIn', [in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_DEBUG_STEP_RANGE'[] marshal([]) 'ranges', [in] uint32 'cRangeCount')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'StepOut'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetRangeIL'([in] int32 'bIL')
		{
		}
	}
	.class public interface abstract import 'ICorDebugStepper2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 35 42 36 45 39 43 33 2D 45 37 44 31 2D 34 41 38 45 2D 38 37 33 42 2D 37 46 30 34 37 46 30 37 30 36 46 37 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'SetJMC'([in] int32 'fIsJMCStepper')
		{
		}
	}
	.class public interface abstract import 'ICorDebugStepperEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 34 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper'[] marshal([]) 'steppers', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugStringValue'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugHeapValue', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 44 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsValid'([out] int32& 'pbValid')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateRelocBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetLength'([out] uint32& 'pcchString')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetString'([in] uint32 'cchString', [out] uint32& 'pcchString', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szString')
		{
		}
	}
	.class public interface abstract import 'ICorDebugThread'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 39 33 38 43 36 44 36 36 2D 37 46 42 36 2D 34 46 36 39 2D 42 33 38 39 2D 34 32 35 42 38 39 38 37 33 32 39 42 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetProcess'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& marshal(interface) 'ppProcess')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetID'([out] uint32& 'pdwThreadId')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetHandle'([out] native int& 'phThreadHandle')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAppDomain'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain'& marshal(interface) 'ppAppDomain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'SetDebugState'([in] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugThreadState' 'state')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetDebugState'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugThreadState'& 'pState')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetUserState'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugUserState'& 'pState')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCurrentException'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppExceptionObject')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ClearCurrentException'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateStepper'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper'& marshal(interface) 'ppStepper')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateChains'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChainEnum'& marshal(interface) 'ppChains')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetActiveChain'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugChain'& marshal(interface) 'ppChain')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetActiveFrame'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame'& marshal(interface) 'ppFrame')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRegisterSet'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugRegisterSet'& marshal(interface) 'ppRegisters')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateEval'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEval'& marshal(interface) 'ppEval')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetObject'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppObject')
		{
		}
	}
	.class public interface abstract import 'ICorDebugThread2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 32 42 44 39 35 36 44 39 2D 37 42 30 37 2D 34 42 45 46 2D 38 41 39 38 2D 31 32 41 41 38 36 32 34 31 37 43 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetActiveFunctions'([in] uint32 'cFunctions', [out] uint32& 'pcFunctions', [out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'COR_ACTIVE_FUNCTION'[] marshal([ + 1]) 'pFunctions')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetConnectionID'([out] uint32& 'pdwConnectionId')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTaskID'([out] uint64& 'pTaskId')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVolatileOSThreadID'([out] uint32& 'pdwTid')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'InterceptCurrentException'([in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame' marshal(interface) 'pFrame')
		{
		}
	}
	.class public interface abstract import 'ICorDebugThread3'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 46 38 35 34 34 45 43 33 2D 35 45 34 45 2D 34 36 63 37 2D 38 44 33 45 2D 41 35 32 42 38 34 30 35 42 31 46 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateStackWalk'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStackWalk'& marshal(interface) 'ppStackWalk')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetActiveInternalFrames'([in] uint32 'cInternalFrames', [out] uint32& 'pcInternalFrames', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugInternalFrame2'[] marshal([ + 1]) 'ppFunctions')
		{
		}
	}
	.class public interface abstract import 'ICorDebugThread4'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 31 41 31 46 32 30 34 42 2D 31 43 36 36 2D 34 36 33 37 2D 38 32 33 46 2D 33 45 45 36 43 37 34 34 41 36 39 43 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance int32 'HasUnhandledException'()
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetBlockingObjects'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnumBlockingObject'& marshal(interface) 'blockingObjectEnumerator')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCurrentCustomDebuggerNotification'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppNotificationObject')
		{
		}
	}
	.class public interface abstract import 'ICorDebugThreadEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 36 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread'[] marshal([]) 'threads', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugType'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 44 36 31 33 46 30 42 42 2D 41 43 45 31 2D 34 43 31 39 2D 42 44 37 32 2D 45 34 43 30 38 44 35 44 41 37 46 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'ty')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetClass'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass'& marshal(interface) 'ppClass')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumerateTypeParameters'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugTypeEnum'& marshal(interface) 'ppTyParEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFirstTypeParameter'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& marshal(interface) 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetBase'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& marshal(interface) 'pBase')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStaticFieldValue'([in] uint32 'fieldDef', [in] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame' marshal(interface) 'pFrame', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRank'([out] uint32& 'pnRank')
		{
		}
	}
	.class public interface abstract import 'ICorDebugTypeEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 31 30 46 32 37 34 39 39 2D 39 44 46 32 2D 34 33 43 45 2D 38 33 33 33 2D 41 33 32 31 44 37 43 39 39 43 42 34 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'[] marshal([]) 'values', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public interface abstract import 'ICorDebugUnmanagedCallback'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 35 32 36 33 45 39 30 39 2D 38 43 42 35 2D 31 31 44 33 2D 42 44 32 46 2D 30 30 30 30 46 38 30 38 34 39 42 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'DebugEvent'([in] native int 'pDebugEvent', [in] int32 'fOutOfBand')
		{
		}
	}
	.class public interface abstract import 'ICorDebugValue'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 46 37 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetType'([out] valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorElementType'& 'pType')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize'([out] uint32& 'pSize')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetAddress'([out] uint64& 'pAddress')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CreateBreakpoint'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValueBreakpoint'& marshal(interface) 'ppBreakpoint')
		{
		}
	}
	.class public interface abstract import 'ICorDebugValue2'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 35 45 30 42 35 34 45 37 2D 44 38 38 41 2D 34 36 32 36 2D 39 34 32 30 2D 41 36 39 31 45 30 41 37 38 42 34 39 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetExactType'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugType'& marshal(interface) 'ppType')
		{
		}
	}
	.class public interface abstract import 'ICorDebugValue3'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 35 36 35 30 30 35 46 43 2D 30 46 38 41 2D 34 46 33 45 2D 39 45 44 42 2D 38 33 31 30 32 42 31 35 36 35 39 35 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSize64'([out] uint64& 'pSize')
		{
		}
	}
	.class public interface abstract import 'ICorDebugValueBreakpoint'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 41 45 42 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Activate'([in] int32 'bActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsActive'([out] int32& 'pbActive')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetValue'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'& marshal(interface) 'ppValue')
		{
		}
	}
	.class public interface abstract import 'ICorDebugValueEnum'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComConversionLossAttribute'::.ctor() = (01 00 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 43 43 37 42 43 42 30 41 2D 38 41 36 38 2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46 38 30 38 33 34 32 44 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(int16) = (01 00 01 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'Skip'([in] uint32 'celt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Reset'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Clone'([out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEnum'& marshal(interface) 'ppEnum')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCount'([out] uint32& 'pcelt')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'Next'([in] uint32 'celt', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugValue'[] marshal([]) 'values', [out] uint32& 'pceltFetched')
			runtime preservesig internalcall 
		{
		}
	}
	.class public sequential sealed '_COR_VERSION'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'dwMajor'
		.field public uint32 'dwMinor'
		.field public uint32 'dwBuild'
		.field public uint32 'dwSubBuild'
	}
	.class public sequential sealed '_CodeChunkInfo'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint64 'startAddr'
		.field public uint32 'length'
	}
	.class public sequential sealed '_LARGE_INTEGER'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public int64 'QuadPart'
	}
	.class public sequential sealed '_SECURITY_ATTRIBUTES'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'nLength'
		.field public native int 'lpSecurityDescriptor'
		.field public int32 'bInheritHandle'
	}
	.class public sequential sealed '_ULARGE_INTEGER'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint64 'QuadPart'
	}
}
.namespace 'Microsoft.Samples.Debugging.CorDebug.Utility'
{
	.class public sealed 'DumpDataTarget'
		extends ['mscorlib']'System'.'Object'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugDataTarget', 'Microsoft.Samples.Debugging.MetaDataLocator'.'ICorDebugMetaDataLocator', ['mscorlib']'System'.'IDisposable'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(class 'Microsoft.Samples.Debugging.Native'.'DumpReader' 'reader')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'fileName')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Dispose'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugPlatform' 'GetPlatform'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance uint32 'ReadVirtual'(uint64 'address', native int 'buffer', uint32 'bytesRequested')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'GetThreadContext'(uint32 'threadId', uint32 'contextFlags', uint32 'contextSize', native int 'context')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'GetMetaData'(string 'imagePath', uint32 'dwImageTimeStamp', uint32 'dwImageSize', uint32 'cchPathBuffer', [out] uint32& 'pcchPathBuffer', char[] 'wszPathBuffer')
		{
			ret
		}
	}
	.class public sealed 'UnmanagedLibraryLeak'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'fileName')
		{
			ret
		}
		.method public hidebysig 
			instance !!0 'GetUnmanagedFunction'<class 'TDelegate'>(string 'functionName')
		{
			ret
		}
	}
}
.namespace 'Microsoft.Samples.Debugging.CorMetadata.NativeApi'
{
	.class public interface abstract 'IMetadataAssemblyImport'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 45 45 36 32 34 37 30 42 2D 45 39 34 42 2D 34 32 34 65 2D 39 42 37 43 2D 32 46 30 30 43 39 32 34 39 46 39 33 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
	}
	.class public interface abstract 'IMetadataImport'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 37 44 41 43 38 32 30 37 2D 44 33 41 45 2D 34 63 37 35 2D 39 42 36 37 2D 39 32 38 30 31 41 34 39 37 44 34 34 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CloseEnum'(native int 'hEnum')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CountEnum'(native int 'hEnum', [out] int32& 'pulCount')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ResetEnum'(native int 'hEnum', int32 'ulPos')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumTypeDefs'(native int& 'phEnum', [out] int32& 'rTypeDefs', uint32 'cMax', [out] uint32& 'pcTypeDefs')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumInterfaceImpls_'(native int 'phEnum', int32 'td')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumTypeRefs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindTypeDefByName'([in] string marshal(lpwstr) 'szTypeDef', [in] int32 'tkEnclosingClass', [out] int32& 'token')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetScopeProps'([out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szName', [in] int32 'cchName', [out] int32& 'pchName', [out] valuetype ['mscorlib']'System'.'Guid'& 'mvid')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModuleFromScope_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeDefProps'([in] int32 'td', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szTypeDef', [in] int32 'cchTypeDef', [out] int32& 'pchTypeDef', [out] valuetype ['mscorlib']'System.Reflection'.'TypeAttributes'& marshal(unsigned int32) 'pdwTypeDefFlags', [out] int32& 'ptkExtends')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 08 6D 64 54 6F 6B 65 6E 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetInterfaceImplProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeRefProps'(int32 'tr', [out] int32& 'ptkResolutionScope', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szName', [in] int32 'cchName', [out] int32& 'pchName')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 08 6D 64 54 6F 6B 65 6E 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ResolveTypeRef'(int32 'tr', valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] object& marshal(iunknown) 'scope', [out] int32& 'typeDef')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMembers_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMembersWithName_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethods'(native int& 'phEnum', int32 'cl', [out] int32& 'mdMethodDef', int32 'cMax', [out] int32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethodsWithName_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumFields'(native int& 'phEnum', int32 'cl', [out] int32& 'mdFieldDef', int32 'cMax', [out] uint32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0B 6D 64 46 69 65 6C 64 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumFieldsWithName_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumParams'(native int& 'phEnum', int32 'mdMethodDef', [out] int32& 'mdParamDef', int32 'cMax', [out] uint32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0B 6D 64 50 61 72 61 6D 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMemberRefs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethodImpls_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumPermissionSets_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindMember_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindMethod_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindField_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindMemberRef_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMethodProps'([in] uint32 'md', [out] int32& 'pClass', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szMethod', [in] int32 'cchMethod', [out] int32& 'pchMethod', [out] uint32& 'pdwAttr', [out] native int& 'ppvSigBlob', [out] uint32& 'pcbSigBlob', [out] uint32& 'pulCodeRVA', [out] uint32& 'pdwImplFlags')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMemberRefProps'([in] uint32 'mr', [out] int32& 'ptk', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szMember', [in] int32 'cchMember', [out] uint32& 'pchMember', [out] native int& 'ppvSigBlob', [out] int32& 'pbSig')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 6D 62 65 72 52 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumProperties'(native int& 'phEnum', int32 'mdTypeDef', [out] int32& 'mdPropertyDef', int32 'countMax', [out] uint32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 6D 64 50 72 6F 70 65 72 74 79 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumEvents_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetEventProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethodSemantics_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMethodSemantics_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetClassLayout_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFieldMarshal_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRVA_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPermissionSetProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSigFromToken_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModuleRefProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumModuleRefs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeSpecFromToken_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNameFromToken_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumUnresolvedMethods_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetUserString'([in] int32 'stk', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szString', [in] int32 'cchString', [out] int32& 'pchString')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPinvokeMap_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumSignatures_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumTypeSpecs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumUserStrings_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetParamForMethodIndex_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumCustomAttributes'(native int& 'phEnum', int32 'tk', int32 'tkType', [out] int32& 'mdCustomAttribute', uint32 'cMax', [out] uint32& 'pcTokens')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 12 6D 64 43 75 73 74 6F 6D 41 74 74 72 69 62 75 74 65 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCustomAttributeProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindTypeRef_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMemberProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFieldProps'(int32 'mb', [out] int32& 'mdTypeDef', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szField', int32 'cchField', [out] int32& 'pchField', [out] int32& 'pdwAttr', [out] native int& 'ppvSigBlob', [out] int32& 'pcbSigBlob', [out] int32& 'pdwCPlusTypeFlab', [out] native int& 'ppValue', [out] int32& 'pcchValue')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 55 56 43 50 5F 43 4F 4E 53 54 41 4E 54 2A 00 00)
			.param [11]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPropertyProps'(int32 'mb', [out] int32& 'mdTypeDef', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szProperty', int32 'cchProperty', [out] int32& 'pchProperty', [out] int32& 'pdwPropFlags', [out] native int& 'ppvSigBlob', [out] int32& 'pcbSigBlob', [out] int32& 'pdwCPlusTypeFlag', [out] native int& 'ppDefaultValue', [out] int32& 'pcchDefaultValue', [out] int32& 'mdSetter', [out] int32& 'mdGetter', [out] int32& 'rmdOtherMethod', int32 'cMax', [out] int32& 'pcOtherMethod')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 55 56 43 50 5F 43 4F 4E 53 54 41 4E 54 2A 00 00)
			.param [11]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [12]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [13]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [14]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [15]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 05 55 4C 4F 4E 47 00 00)
			.param [16]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetParamProps'(int32 'tk', [out] int32& 'pmd', [out] uint32& 'pulSequence', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szName', uint32 'cchName', [out] uint32& 'pchName', [out] uint32& 'pdwAttr', [out] uint32& 'pdwCPlusTypeFlag', [out] native int& 'ppValue', [out] uint32& 'pcchValue')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 55 56 43 50 5F 43 4F 4E 53 54 41 4E 54 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'GetCustomAttributeByName'(int32 'tkObj', string marshal(lpwstr) 'szName', [out] native int& 'ppData', [out] uint32& 'pcbData')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool 'IsValidToken'([in] uint32 marshal(unsigned int32) 'tk')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNestedClassProps'(int32 'tdNestedClass', [out] int32& 'tdEnclosingClass')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNativeCallConvFromSig_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsGlobal_'()
		{
		}
	}
	.class public interface abstract 'IMetadataImport2'
		implements 'Microsoft.Samples.Debugging.CorMetadata.NativeApi'.'IMetadataImport'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 46 43 45 35 45 46 41 30 2D 38 42 42 41 2D 34 66 38 65 2D 41 30 33 36 2D 38 46 32 30 32 32 42 30 38 34 36 36 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'CloseEnum'(native int 'hEnum')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'CountEnum'(native int 'hEnum', [out] int32& 'pulCount')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ResetEnum'(native int 'hEnum', int32 'ulPos')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumTypeDefs'(native int& 'phEnum', [out] int32& 'rTypeDefs', uint32 'cMax', [out] uint32& 'pcTypeDefs')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumInterfaceImpls_'(native int 'phEnum', int32 'td')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumTypeRefs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindTypeDefByName'([in] string marshal(lpwstr) 'szTypeDef', [in] int32 'tkEnclosingClass', [out] int32& 'token')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetScopeProps'([out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szName', [in] int32 'cchName', [out] int32& 'pchName', [out] valuetype ['mscorlib']'System'.'Guid'& 'mvid')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModuleFromScope_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeDefProps'([in] int32 'td', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szTypeDef', [in] int32 'cchTypeDef', [out] int32& 'pchTypeDef', [out] valuetype ['mscorlib']'System.Reflection'.'TypeAttributes'& marshal(unsigned int32) 'pdwTypeDefFlags', [out] int32& 'ptkExtends')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 08 6D 64 54 6F 6B 65 6E 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetInterfaceImplProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeRefProps'(int32 'tr', [out] int32& 'ptkResolutionScope', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szName', [in] int32 'cchName', [out] int32& 'pchName')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 08 6D 64 54 6F 6B 65 6E 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'ResolveTypeRef'(int32 'tr', valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] object& marshal(iunknown) 'scope', [out] int32& 'typeDef')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMembers_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMembersWithName_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethods'(native int& 'phEnum', int32 'cl', [out] int32& 'mdMethodDef', int32 'cMax', [out] int32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethodsWithName_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumFields'(native int& 'phEnum', int32 'cl', [out] int32& 'mdFieldDef', int32 'cMax', [out] uint32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0B 6D 64 46 69 65 6C 64 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumFieldsWithName_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumParams'(native int& 'phEnum', int32 'mdMethodDef', [out] int32& 'mdParamDef', int32 'cMax', [out] uint32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0B 6D 64 50 61 72 61 6D 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMemberRefs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethodImpls_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumPermissionSets_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindMember_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindMethod_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindField_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindMemberRef_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMethodProps'([in] uint32 'md', [out] int32& 'pClass', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szMethod', [in] int32 'cchMethod', [out] int32& 'pchMethod', [out] uint32& 'pdwAttr', [out] native int& 'ppvSigBlob', [out] uint32& 'pcbSigBlob', [out] uint32& 'pulCodeRVA', [out] uint32& 'pdwImplFlags')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMemberRefProps'([in] uint32 'mr', [out] int32& 'ptk', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szMember', [in] int32 'cchMember', [out] uint32& 'pchMember', [out] native int& 'ppvSigBlob', [out] int32& 'pbSig')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 6D 62 65 72 52 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumProperties'(native int& 'phEnum', int32 'mdTypeDef', [out] int32& 'mdPropertyDef', int32 'countMax', [out] uint32& 'pcTokens')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 6D 64 50 72 6F 70 65 72 74 79 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumEvents_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetEventProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethodSemantics_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMethodSemantics_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetClassLayout_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFieldMarshal_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetRVA_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPermissionSetProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetSigFromToken_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetModuleRefProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumModuleRefs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTypeSpecFromToken_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNameFromToken_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumUnresolvedMethods_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetUserString'([in] int32 'stk', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szString', [in] int32 'cchString', [out] int32& 'pchString')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPinvokeMap_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumSignatures_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumTypeSpecs_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumUserStrings_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetParamForMethodIndex_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumCustomAttributes'(native int& 'phEnum', int32 'tk', int32 'tkType', [out] int32& 'mdCustomAttribute', uint32 'cMax', [out] uint32& 'pcTokens')
		{
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 12 6D 64 43 75 73 74 6F 6D 41 74 74 72 69 62 75 74 65 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetCustomAttributeProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FindTypeRef_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMemberProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetFieldProps'(int32 'mb', [out] int32& 'mdTypeDef', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szField', int32 'cchField', [out] int32& 'pchField', [out] int32& 'pdwAttr', [out] native int& 'ppvSigBlob', [out] int32& 'pcbSigBlob', [out] int32& 'pdwCPlusTypeFlab', [out] native int& 'ppValue', [out] int32& 'pcchValue')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 55 56 43 50 5F 43 4F 4E 53 54 41 4E 54 2A 00 00)
			.param [11]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPropertyProps'(int32 'mb', [out] int32& 'mdTypeDef', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szProperty', int32 'cchProperty', [out] int32& 'pchProperty', [out] int32& 'pdwPropFlags', [out] native int& 'ppvSigBlob', [out] int32& 'pcbSigBlob', [out] int32& 'pdwCPlusTypeFlag', [out] native int& 'ppDefaultValue', [out] int32& 'pcchDefaultValue', [out] int32& 'mdSetter', [out] int32& 'mdGetter', [out] int32& 'rmdOtherMethod', int32 'cMax', [out] int32& 'pcOtherMethod')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 55 56 43 50 5F 43 4F 4E 53 54 41 4E 54 2A 00 00)
			.param [11]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [12]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [13]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [14]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [15]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 05 55 4C 4F 4E 47 00 00)
			.param [16]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetParamProps'(int32 'tk', [out] int32& 'pmd', [out] uint32& 'pulSequence', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'szName', uint32 'cchName', [out] uint32& 'pchName', [out] uint32& 'pdwAttr', [out] uint32& 'pdwCPlusTypeFlag', [out] native int& 'ppValue', [out] uint32& 'pcchValue')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 44 65 66 2A 00 00)
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [6]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [7]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [9]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0E 55 56 43 50 5F 43 4F 4E 53 54 41 4E 54 2A 00 00)
			.param [10]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'GetCustomAttributeByName'(int32 'tkObj', string marshal(lpwstr) 'szName', [out] native int& 'ppData', [out] uint32& 'pcbData')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool 'IsValidToken'([in] uint32 marshal(unsigned int32) 'tk')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNestedClassProps'(int32 'tdNestedClass', [out] int32& 'tdEnclosingClass')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0A 6D 64 54 79 70 65 44 65 66 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNativeCallConvFromSig_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'IsGlobal_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumGenericParams'(native int& 'hEnum', int32 'tk', [out] int32& 'rGenericParams', uint32 'cMax', [out] uint32& 'pcGenericParams')
		{
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0F 6D 64 47 65 6E 65 72 69 63 50 61 72 61 6D 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetGenericParamProps'(int32 'gp', [out] uint32& 'pulParamSeq', [out] int32& 'pdwParamFlags', [out] int32& 'ptOwner', [out] int32& 'ptkKind', [out] class ['mscorlib']'System.Text'.'StringBuilder' marshal(lpwstr) 'wzName', uint64 'cchName', [out] uint64& 'pchName')
		{
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 44 57 4F 52 44 2A 00 00)
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 08 6D 64 54 6F 6B 65 6E 2A 00 00)
			.param [5]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 08 6D 64 54 6F 6B 65 6E 2A 00 00)
			.param [8]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMethodSpecProps'(int32 'mi', [out] int32& 'tkParent', [out] native int& 'ppvSigBlob', [out] int32& 'pcbSigBlob')
		{
			.param [1]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 0C 6D 64 4D 65 74 68 6F 64 53 70 65 63 00 00)
			.param [2]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 08 6D 64 54 6F 6B 65 6E 2A 00 00)
			.param [3]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 10 50 43 43 4F 52 5F 53 49 47 4E 41 54 55 52 45 2A 00 00)
			.param [4]
			.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComAliasNameAttribute'::.ctor(string) = (01 00 06 55 4C 4F 4E 47 2A 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumGenericParamConstraints_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetGenericParamConstraintProps_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetPEKind_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetVersionString_'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'EnumMethodSpecs_'()
		{
		}
	}
	.class public interface abstract 'IMetadataTables'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 44 38 46 35 37 39 41 42 2D 34 30 32 44 2D 34 62 38 65 2D 38 32 44 39 2D 35 44 36 33 42 31 30 36 35 43 36 38 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetStringHeapSize'([out] uint32& 'countBytesStrings')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetBlobHeapSize'([out] uint32& 'countBytesBlobs')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetGuidHeapSize'([out] uint32& 'countBytesGuids')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetUserStringHeapSize'([out] uint32& 'countByteBlobs')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetNumTables'([out] uint32& 'countTables')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTableIndex'(uint32 'token', [out] uint32& 'tableIndex')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GetTableInfo'(uint32 'tableIndex', [out] uint32& 'countByteRows', [out] uint32& 'countRows', [out] uint32& 'countColumns', [out] uint32& 'columnPrimaryKey', [out] string& marshal(lpstr) 'name')
		{
		}
	}
}
.namespace 'Microsoft.Samples.Debugging.MetaDataLocator'
{
	.class public sealed 'CorDebugMetaDataLocator'
		extends ['mscorlib']'System'.'Object'
		implements 'Microsoft.Samples.Debugging.MetaDataLocator'.'ICorDebugMetaDataLocator'
	{
		.method public final virtual hidebysig newslot 
			instance void 'GetMetaData'(string 'imagePath', uint32 'dwImageTimeStamp', uint32 'dwImageSize', uint32 'cchPathBuffer', [out] uint32& 'pcchPathBuffer', char[] 'wszPathBuffer')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'searchPath')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string 'get_SearchPath'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void 'set_SearchPath'(string 'value')
		{
			ret
		}
		.property instance string 'SearchPath'()
		{
			.get instance string 'Microsoft.Samples.Debugging.MetaDataLocator'.'CorDebugMetaDataLocator'::'get_SearchPath'()
			.set instance void 'Microsoft.Samples.Debugging.MetaDataLocator'.'CorDebugMetaDataLocator'::'set_SearchPath'(string)
		}
	}
	.class public interface abstract import 'ICorDebugMetaDataLocator'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 37 63 65 66 38 62 61 39 2D 32 65 66 37 2D 34 32 62 66 2D 39 37 33 66 2D 34 31 37 31 34 37 34 66 38 37 64 39 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'GetMetaData'([in] string marshal(lpwstr) 'imagePath', [in] uint32 'dwImageTimeStamp', [in] uint32 'dwImageSize', [in] uint32 'cchPathBuffer', [out] uint32& 'pcchPathBuffer', [in][out] char[] marshal([ + 3]) 'wszPathBuffer')
		{
		}
	}
}
.namespace 'Microsoft.Samples.Debugging.Native'
{
	.class public sealed 'AMD64Flags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Flags' 'SINGLE_STEP_FLAG' = int32(0x00000100)
	}
	.class public sealed 'AMD64Offsets'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'ContextFlags' = int32(0x00000030)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'DebugControl' = int32(0x000004A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Dr0' = int32(0x00000048)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Dr1' = int32(0x00000050)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Dr2' = int32(0x00000058)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Dr3' = int32(0x00000060)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Dr6' = int32(0x00000068)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Dr7' = int32(0x00000070)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'EFlags' = int32(0x00000044)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'FltSave' = int32(0x00000100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'LastBranchFromRip' = int32(0x000004B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'LastBranchToRip' = int32(0x000004B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'LastExceptionFromRip' = int32(0x000004C8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'LastExceptionToRip' = int32(0x000004C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Legacy' = int32(0x00000120)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'MxCsr' = int32(0x00000034)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'P1Home' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'P2Home' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'P3Home' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'P4Home' = int32(0x00000018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'P5Home' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'P6Home' = int32(0x00000028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R10' = int32(0x000000C8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R11' = int32(0x000000D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R12' = int32(0x000000D8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R13' = int32(0x000000E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R14' = int32(0x000000E8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R15' = int32(0x000000F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R8' = int32(0x000000B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'R9' = int32(0x000000C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rax' = int32(0x00000078)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rbp' = int32(0x000000A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rbx' = int32(0x00000090)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rcx' = int32(0x00000080)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rdi' = int32(0x000000B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rdx' = int32(0x00000088)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rip' = int32(0x000000F8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rsi' = int32(0x000000A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Rsp' = int32(0x00000098)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'SegCs' = int32(0x00000038)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'SegDs' = int32(0x0000003A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'SegEs' = int32(0x0000003C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'SegFs' = int32(0x0000003E)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'SegGs' = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'SegSs' = int32(0x00000042)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'VectorControl' = int32(0x000004A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'VectorRegister' = int32(0x00000300)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm0' = int32(0x000001A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm1' = int32(0x000001B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm10' = int32(0x00000240)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm11' = int32(0x00000250)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm12' = int32(0x00000260)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm13' = int32(0x00000270)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm14' = int32(0x00000280)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm15' = int32(0x00000290)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm2' = int32(0x000001C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm3' = int32(0x000001D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm4' = int32(0x000001E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm5' = int32(0x000001F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm6' = int32(0x00000200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm7' = int32(0x00000210)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm8' = int32(0x00000220)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AMD64Offsets' 'Xmm9' = int32(0x00000230)
	}
	.class public sealed 'ARMFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMFlags' 'SINGLE_STEP_FLAG' = int32(0x00000000)
	}
	.class public sealed 'ARMOffsets'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Bcr' = int32(0x00000170)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Bvr' = int32(0x00000150)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'ContextFlags' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Cpsr' = int32(0x00000044)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'D' = int32(0x00000050)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr0' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr1' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr10' = int32(0x0000002C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr11' = int32(0x00000030)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr12' = int32(0x00000034)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr2' = int32(0x0000000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr3' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr4' = int32(0x00000014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr5' = int32(0x00000018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr6' = int32(0x0000001C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr7' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr8' = int32(0x00000024)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Dr9' = int32(0x00000028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Fpscr' = int32(0x00000048)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Lr' = int32(0x0000003C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Pc' = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Q' = int32(0x00000050)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'S' = int32(0x00000050)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Sp' = int32(0x00000038)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Wcr' = int32(0x00000194)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ARMOffsets' 'Wvr' = int32(0x00000190)
	}
	.class public sealed 'AgnosticContextFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AgnosticContextFlags' 'ContextAll' = int32(0x0000003F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AgnosticContextFlags' 'ContextControl' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AgnosticContextFlags' 'ContextDebugRegisters' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AgnosticContextFlags' 'ContextFloatingPoint' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AgnosticContextFlags' 'ContextInteger' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'AgnosticContextFlags' 'None' = int32(0x00000000)
	}
	.class public sequential sealed 'CREATE_PROCESS_DEBUG_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public native int 'hFile'
		.field public native int 'hProcess'
		.field public native int 'hThread'
		.field public native int 'lpBaseOfImage'
		.field public uint32 'dwDebugInfoFileOffset'
		.field public uint32 'nDebugInfoSize'
		.field public native int 'lpThreadLocalBase'
		.field public native int 'lpStartAddress'
		.field public native int 'lpImageName'
		.field public uint16 'fUnicode'
	}
	.class public sequential sealed 'CREATE_THREAD_DEBUG_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public native int 'hThread'
		.field public native int 'lpThreadLocalBase'
		.field public native int 'lpStartAddress'
	}
	.class public sealed 'ContextFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64Context' = int32(0x00100000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64ContextAll' = int32(0x0010001F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64ContextControl' = int32(0x00100001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64ContextDebugRegisters' = int32(0x00100010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64ContextFloatingPoint' = int32(0x00100008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64ContextFull' = int32(0x0010000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64ContextInteger' = int32(0x00100002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'AMD64ContextSegments' = int32(0x00100004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'ARMContext' = int32(0x00200000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'ARMContextAll' = int32(0x0020000B)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'ARMContextControl' = int32(0x00200001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'ARMContextDebugRegisters' = int32(0x00200008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'ARMContextFloatingPoint' = int32(0x00200004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'ARMContextFull' = int32(0x00200003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'ARMContextInteger' = int32(0x00200002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64Context' = int32(0x00080000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextAll' = int32(0x0008003F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextControl' = int32(0x00080001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextDebug' = int32(0x00080010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextFloatingPoint' = int32(0x00080006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextFull' = int32(0x0008002F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextHigherFloatingPoint' = int32(0x00080004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextIA32Control' = int32(0x00080020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextInteger' = int32(0x00080008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'IA64ContextLowerFloatingPoint' = int32(0x00080002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'None' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86Context' = int32(0x00010000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextAll' = int32(0x0001003F)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextControl' = int32(0x00010001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextDebugRegisters' = int32(0x00010010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextExtendedRegisters' = int32(0x00010020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextFloatingPoint' = int32(0x00010008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextFull' = int32(0x00010007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextInteger' = int32(0x00010002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextFlags' 'X86ContextSegments' = int32(0x00010004)
	}
	.class public sealed 'ContextSize'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextSize' 'AMD64' = int32(0x000004D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextSize' 'ARM' = int32(0x000001A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextSize' 'IA64' = int32(0x00000A70)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextSize' 'None' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ContextSize' 'X86' = int32(0x000002CC)
	}
	.class public explicit sealed 'DebugEvent32'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'DebugEventHeader' 'header'
		.field [12] public valuetype 'Microsoft.Samples.Debugging.Native'.'DebugEventUnion' 'union'
	}
	.class public explicit sealed 'DebugEvent64'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'DebugEventHeader' 'header'
		.field [16] public valuetype 'Microsoft.Samples.Debugging.Native'.'DebugEventUnion' 'union'
	}
	.class public sequential sealed 'DebugEventHeader'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'dwDebugEventCode'
		.field public uint32 'dwProcessId'
		.field public uint32 'dwThreadId'
	}
	.class public explicit sealed 'DebugEventUnion'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'CREATE_PROCESS_DEBUG_INFO' 'CreateProcess'
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'EXCEPTION_DEBUG_INFO' 'Exception'
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'CREATE_THREAD_DEBUG_INFO' 'CreateThread'
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'EXIT_THREAD_DEBUG_INFO' 'ExitThread'
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'EXIT_PROCESS_DEBUG_INFO' 'ExitProcess'
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'LOAD_DLL_DEBUG_INFO' 'LoadDll'
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'UNLOAD_DLL_DEBUG_INFO' 'UnloadDll'
		.field [0] public valuetype 'Microsoft.Samples.Debugging.Native'.'OUTPUT_DEBUG_STRING_INFO' 'OutputDebugString'
	}
	.class public serializable 'DumpException'
		extends ['mscorlib']'System'.'Exception'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message', class ['mscorlib']'System'.'Exception' 'innerException')
		{
			ret
		}
		.method family hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.Runtime.Serialization'.'SerializationInfo' 'info', valuetype ['mscorlib']'System.Runtime.Serialization'.'StreamingContext' 'context')
		{
			ret
		}
	}
	.class public serializable 'DumpFormatException'
		extends 'Microsoft.Samples.Debugging.Native'.'DumpException'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message', class ['mscorlib']'System'.'Exception' 'innerException')
		{
			ret
		}
		.method family hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.Runtime.Serialization'.'SerializationInfo' 'info', valuetype ['mscorlib']'System.Runtime.Serialization'.'StreamingContext' 'context')
		{
			ret
		}
	}
	.class public serializable 'DumpMissingDataException'
		extends 'Microsoft.Samples.Debugging.Native'.'DumpException'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message', class ['mscorlib']'System'.'Exception' 'innerException')
		{
			ret
		}
		.method family hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.Runtime.Serialization'.'SerializationInfo' 'info', valuetype ['mscorlib']'System.Runtime.Serialization'.'StreamingContext' 'context')
		{
			ret
		}
	}
	.class public 'DumpModule'
		extends ['mscorlib']'System'.'Object'
	{
		.method public virtual hidebysig 
			instance bool 'Equals'(object 'obj')
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 'GetHashCode'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string 'get_FullName'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 'get_BaseAddress'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 'get_Size'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype ['mscorlib']'System'.'DateTime' 'get_Timestamp'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 'get_RawTimestamp'()
		{
			ret
		}
		.property instance uint64 'BaseAddress'()
		{
			.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpModule'::'get_BaseAddress'()
		}
		.property instance string 'FullName'()
		{
			.get instance string 'Microsoft.Samples.Debugging.Native'.'DumpModule'::'get_FullName'()
		}
		.property instance uint32 'RawTimestamp'()
		{
			.get instance uint32 'Microsoft.Samples.Debugging.Native'.'DumpModule'::'get_RawTimestamp'()
		}
		.property instance uint32 'Size'()
		{
			.get instance uint32 'Microsoft.Samples.Debugging.Native'.'DumpModule'::'get_Size'()
		}
		.property instance valuetype ['mscorlib']'System'.'DateTime' 'Timestamp'()
		{
			.get instance valuetype ['mscorlib']'System'.'DateTime' 'Microsoft.Samples.Debugging.Native'.'DumpModule'::'get_Timestamp'()
		}
	}
	.class public sequential sealed 'DumpPointer'
		extends ['mscorlib']'System'.'ValueType'
	{
		.method public static hidebysig 
			valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'DangerousMakeDumpPointer'(native int 'rawPointer', uint32 'size')
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'Shrink'(uint32 'size')
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'Adjust'(uint32 'delta')
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'Adjust'(uint64 'delta64')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Copy'(native int 'destinationBuffer', uint32 'destinationBufferSizeInBytes', uint32 'indexDestination', uint32 'numberBytesToCopy')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Copy'(native int 'destinationBuffer', uint32 'numberBytesToCopy')
		{
			ret
		}
		.method public hidebysig 
			instance int32 'ReadInt32'()
		{
			ret
		}
		.method public hidebysig 
			instance int64 'ReadInt64'()
		{
			ret
		}
		.method public hidebysig 
			instance uint32 'ReadUInt32'()
		{
			ret
		}
		.method public hidebysig 
			instance uint64 'ReadUInt64'()
		{
			ret
		}
		.method public hidebysig 
			instance string 'ReadAsUnicodeString'(int32 'lengthChars')
		{
			ret
		}
		.method public hidebysig 
			instance !!0 'PtrToStructure'<'T'>(uint32 'offset')
		{
			ret
		}
		.method public hidebysig 
			instance !!0 'PtrToStructureAdjustOffset'<'T'>(uint32& 'offset')
		{
			ret
		}
		.method public hidebysig 
			instance !!0 'PtrToStructure'<'T'>()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
	}
	.class public 'DumpReader'
		extends ['mscorlib']'System'.'Object'
		implements ['mscorlib']'System'.'IDisposable'
	{
		.class nested famorassem abstract sealed 'NativeMethods'
			extends ['mscorlib']'System'.'Object'
		{
			.class nested public interface abstract 'IMinidumpThreadList'
			{
				.method public virtual hidebysig newslot abstract 
					instance uint32 'Count'()
				{
				}
				.method public virtual hidebysig newslot abstract 
					instance class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD' 'GetElement'(uint32 'idx')
				{
				}
			}
			.class nested public 'LoadedFileMemoryLookups'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance void '.ctor'()
				{
					ret
				}
				.method public hidebysig 
					instance void 'GetBytes'(string 'fileName', uint64 'offset', native int 'destination', uint32 'bytesRequested', uint32& 'bytesWritten')
				{
					ret
				}
			}
			.class nested public sequential 'MINIDUMP_EXCEPTION'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance uint64 'get_ExceptionAddress'()
				{
					ret
				}
				.method public hidebysig specialname 
					instance void 'set_ExceptionAddress'(uint64 'value')
				{
					ret
				}
				.method public hidebysig specialname 
					instance void '.ctor'()
				{
					ret
				}
				.field public uint32 'ExceptionCode'
				.field public uint32 'ExceptionFlags'
				.field public uint64 'ExceptionRecord'
				.field public uint32 'NumberParameters'
				.field public uint32 '__unusedAlignment'
				.field public uint64[] 'ExceptionInformation'
				.property instance uint64 'ExceptionAddress'()
				{
					.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_EXCEPTION'::'get_ExceptionAddress'()
					.set instance void 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_EXCEPTION'::'set_ExceptionAddress'(uint64)
				}
			}
			.class nested public sequential 'MINIDUMP_EXCEPTION_STREAM'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance void '.ctor'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'dump')
				{
					ret
				}
				.field public uint32 'ThreadId'
				.field public uint32 '__alignment'
				.field public class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_EXCEPTION' 'ExceptionRecord'
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_LOCATION_DESCRIPTOR' 'ThreadContext'
			}
			.class nested public sequential sealed 'MINIDUMP_LOCATION_DESCRIPTOR'
				extends ['mscorlib']'System'.'ValueType'
			{
				.method public hidebysig specialname 
					instance bool 'get_IsNull'()
				{
					ret
				}
				.field public uint32 'DataSize'
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA' 'Rva'
				.property instance bool 'IsNull'()
				{
					.get instance bool 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_LOCATION_DESCRIPTOR'::'get_IsNull'()
				}
			}
			.class nested public sequential sealed 'MINIDUMP_LOCATION_DESCRIPTOR64'
				extends ['mscorlib']'System'.'ValueType'
			{
				.field public uint64 'DataSize'
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA64' 'Rva'
			}
			.class nested public sequential sealed 'MINIDUMP_MEMORY_DESCRIPTOR'
				extends ['mscorlib']'System'.'ValueType'
			{
				.method public hidebysig specialname 
					instance uint64 'get_StartOfMemoryRange'()
				{
					ret
				}
				.field static public literal int32 'SizeOf' = int32(0x00000010)
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_LOCATION_DESCRIPTOR' 'Memory'

				//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
				.field private int32 __Asmmeta_Private_Field
				.property instance uint64 'StartOfMemoryRange'()
				{
					.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR'::'get_StartOfMemoryRange'()
				}
			}
			.class nested public sequential sealed 'MINIDUMP_MEMORY_DESCRIPTOR64'
				extends ['mscorlib']'System'.'ValueType'
			{
				.method public hidebysig specialname 
					instance uint64 'get_StartOfMemoryRange'()
				{
					ret
				}
				.field static public literal int32 'SizeOf' = int32(0x00000010)
				.field public uint64 'DataSize'

				//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
				.field private int32 __Asmmeta_Private_Field
				.property instance uint64 'StartOfMemoryRange'()
				{
					.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR64'::'get_StartOfMemoryRange'()
				}
			}
			.class nested public sequential sealed 'MINIDUMP_MODULE'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance uint64 'get_BaseOfImage'()
				{
					ret
				}
				.method public hidebysig specialname 
					instance valuetype ['mscorlib']'System'.'DateTime' 'get_Timestamp'()
				{
					ret
				}
				.method public hidebysig specialname 
					instance void '.ctor'()
				{
					ret
				}
				.field public uint32 'SizeOfImage'
				.field public uint32 'CheckSum'
				.field public uint32 'TimeDateStamp'
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA' 'ModuleNameRva'
				.property instance uint64 'BaseOfImage'()
				{
					.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MODULE'::'get_BaseOfImage'()
				}
				.property instance valuetype ['mscorlib']'System'.'DateTime' 'Timestamp'()
				{
					.get instance valuetype ['mscorlib']'System'.'DateTime' 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MODULE'::'get_Timestamp'()
				}
			}
			.class nested public 'MINIDUMP_MODULE_LIST'
				extends class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpArray`1'<class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MODULE'>
			{
			}
			.class nested public sealed 'MINIDUMP_STREAM_TYPE'
				extends ['mscorlib']'System'.'Enum'
			{
				.field public rtspecialname specialname int32 'value__'
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'CommentStreamA' = int32(0x0000000A)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'CommentStreamW' = int32(0x0000000B)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'ExceptionStream' = int32(0x00000006)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'FunctionTableStream' = int32(0x0000000D)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'HandleDataStream' = int32(0x0000000C)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'LastReservedStream' = int32(0x0000FFFF)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'Memory64ListStream' = int32(0x00000009)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'MemoryInfoListStream' = int32(0x00000010)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'MemoryListStream' = int32(0x00000005)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'MiscInfoStream' = int32(0x0000000F)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'ModuleListStream' = int32(0x00000004)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'ReservedStream0' = int32(0x00000001)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'ReservedStream1' = int32(0x00000002)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'SystemInfoStream' = int32(0x00000007)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'ThreadExListStream' = int32(0x00000008)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'ThreadInfoListStream' = int32(0x00000011)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'ThreadListStream' = int32(0x00000003)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'UnloadedModuleListStream' = int32(0x0000000E)
				.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'UnusedStream' = int32(0x00000000)
			}
			.class nested public sequential 'MINIDUMP_SYSTEM_INFO'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance class ['mscorlib']'System'.'Version' 'get_Version'()
				{
					ret
				}
				.method public hidebysig specialname 
					instance void '.ctor'()
				{
					ret
				}
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'ProcessorArchitecture'
				.field public uint16 'ProcessorLevel'
				.field public uint16 'ProcessorRevision'
				.field public uint8 'NumberOfProcessors'
				.field public uint8 'ProductType'
				.field public uint32 'MajorVersion'
				.field public uint32 'MinorVersion'
				.field public uint32 'BuildNumber'
				.field public valuetype ['mscorlib']'System'.'PlatformID' 'PlatformId'
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA' 'CSDVersionRva'
				.property instance class ['mscorlib']'System'.'Version' 'Version'()
				{
					.get instance class ['mscorlib']'System'.'Version' 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_SYSTEM_INFO'::'get_Version'()
				}
			}
			.class nested public sequential 'MINIDUMP_THREAD'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance uint64 'get_Teb'()
				{
					ret
				}
				.method public virtual hidebysig newslot 
					instance bool 'HasBackingStore'()
				{
					ret
				}
				.method public virtual hidebysig newslot specialname 
					instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'get_BackingStore'()
				{
					ret
				}
				.method public virtual hidebysig newslot specialname 
					instance void 'set_BackingStore'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'value')
				{
					ret
				}
				.method public hidebysig specialname 
					instance void '.ctor'()
				{
					ret
				}
				.field public uint32 'ThreadId'
				.field public uint32 'SuspendCount'
				.field public uint32 'PriorityClass'
				.field public uint32 'Priority'
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'Stack'
				.field public valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_LOCATION_DESCRIPTOR' 'ThreadContext'
				.property instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'BackingStore'()
				{
					.get instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD'::'get_BackingStore'()
					.set instance void 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD'::'set_BackingStore'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR')
				}
				.property instance uint64 'Teb'()
				{
					.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD'::'get_Teb'()
				}
			}
			.class nested public sequential sealed 'MINIDUMP_THREAD_EX'
				extends 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD'
			{
				.method public virtual hidebysig 
					instance bool 'HasBackingStore'()
				{
					ret
				}
				.method public virtual hidebysig specialname 
					instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'get_BackingStore'()
				{
					ret
				}
				.method public virtual hidebysig specialname 
					instance void 'set_BackingStore'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'value')
				{
					ret
				}
				.method public hidebysig specialname 
					instance void '.ctor'()
				{
					ret
				}
				.property instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'BackingStore'()
				{
					.get instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD_EX'::'get_BackingStore'()
					.set instance void 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD_EX'::'set_BackingStore'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR')
				}
			}
			.class nested public 'MINIDUMP_THREAD_LIST`1'<('Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD') 'T'>
				extends class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpArray`1'<!0>
				implements 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'IMinidumpThreadList'
			{
				.method public final virtual hidebysig newslot 
					instance class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_THREAD' 'GetElement'(uint32 'idx')
				{
					ret
				}
				.method public final virtual hidebysig newslot 
					instance uint32 'Count'()
				{
					ret
				}
			}
			.class nested public 'MinidumpArray`1'<'T'>
				extends ['mscorlib']'System'.'Object'
			{
				.method family hidebysig specialname 
					instance void '.ctor'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'streamPointer', valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'streamType')
				{
					ret
				}
				.method public hidebysig specialname 
					instance uint32 'get_Count'()
				{
					ret
				}
				.method public hidebysig 
					instance !0 'GetElement'(uint32 'idx')
				{
					ret
				}
				.property instance uint32 'Count'()
				{
					.get instance uint32 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpArray`1'::'get_Count'()
				}
			}
			.class nested public 'MinidumpMemory64List'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance void '.ctor'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'streamPointer')
				{
					ret
				}
				.method public hidebysig specialname 
					instance uint64 'get_Count'()
				{
					ret
				}
				.method public hidebysig specialname 
					instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA64' 'get_BaseRva'()
				{
					ret
				}
				.method public hidebysig 
					instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR64' 'GetElement'(uint32 'idx')
				{
					ret
				}
				.property instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA64' 'BaseRva'()
				{
					.get instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA64' 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpMemory64List'::'get_BaseRva'()
				}
				.property instance uint64 'Count'()
				{
					.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpMemory64List'::'get_Count'()
				}
			}
			.class nested public 'MinidumpMemoryChunk'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance void '.ctor'()
				{
					ret
				}
				.field public uint64 'RVA'
				.field public uint64 'Size'
				.field public uint64 'TargetEndAddress'
				.field public uint64 'TargetStartAddress'
			}
			.class nested public 'MinidumpMemoryChunks'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig 
					instance uint64 'Size'(uint64 'i')
				{
					ret
				}
				.method public hidebysig 
					instance uint64 'RVA'(uint64 'i')
				{
					ret
				}
				.method public hidebysig 
					instance uint64 'StartAddress'(uint64 'i')
				{
					ret
				}
				.method public hidebysig 
					instance uint64 'EndAddress'(uint64 'i')
				{
					ret
				}
				.method public hidebysig specialname 
					instance void '.ctor'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'rawStream', valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'type')
				{
					ret
				}
				.method public hidebysig 
					instance void 'InitFromMemoryList'()
				{
					ret
				}
				.method public hidebysig specialname 
					instance uint64 'get_Count'()
				{
					ret
				}
				.property instance uint64 'Count'()
				{
					.get instance uint64 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpMemoryChunks'::'get_Count'()
				}
			}
			.class nested public 'MinidumpMemoryList'
				extends ['mscorlib']'System'.'Object'
			{
				.method public hidebysig specialname 
					instance void '.ctor'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'streamPointer')
				{
					ret
				}
				.method public hidebysig specialname 
					instance uint32 'get_Count'()
				{
					ret
				}
				.method public hidebysig 
					instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_MEMORY_DESCRIPTOR' 'GetElement'(uint32 'idx')
				{
					ret
				}
				.property instance uint32 'Count'()
				{
					.get instance uint32 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpMemoryList'::'get_Count'()
				}
			}
			.class nested public sequential sealed 'RVA'
				extends ['mscorlib']'System'.'ValueType'
			{
				.method public hidebysig specialname 
					instance bool 'get_IsNull'()
				{
					ret
				}
				.field public uint32 'Value'
				.property instance bool 'IsNull'()
				{
					.get instance bool 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA'::'get_IsNull'()
				}
			}
			.class nested public sequential sealed 'RVA64'
				extends ['mscorlib']'System'.'ValueType'
			{
				.field public uint64 'Value'
			}
			.method public static hidebysig pinvokeimpl("dummy" winapi) 
				bool marshal(bool) 'MiniDumpReadDumpStream'(native int 'pMiniDump', valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_STREAM_TYPE' 'streamType', [out] native int& 'dir', [out] native int& 'streamPointer', [out] uint32& 'cbStreamSize')
				preservesig 
			{
			}
			.field static public literal uint32 'EXCEPTION_MAXIMUM_PARAMETERS' = uint32(0x0000000F)
		}
		.method famorassem hidebysig 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'TranslateDescriptor'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MINIDUMP_LOCATION_DESCRIPTOR' 'location')
		{
			ret
		}
		.method famorassem hidebysig 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'TranslateRVA'(uint64 'rva')
		{
			ret
		}
		.method famorassem hidebysig 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'TranslateRVA'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA' 'rva')
		{
			ret
		}
		.method famorassem hidebysig 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'TranslateRVA'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA64' 'rva')
		{
			ret
		}
		.method famorassem hidebysig 
			instance string 'GetString'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'RVA' 'rva')
		{
			ret
		}
		.method famorassem hidebysig 
			instance string 'GetString'(valuetype 'Microsoft.Samples.Debugging.Native'.'DumpPointer' 'ptr')
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] 'ReadMemory'(uint64 'targetAddress', int32 'length')
		{
			ret
		}
		.method public hidebysig 
			instance void 'ReadMemory'(uint64 'targetAddress', uint8[] 'buffer')
		{
			ret
		}
		.method public hidebysig 
			instance void 'ReadMemory'(uint64 'targetRequestStart', native int 'destinationBuffer', uint32 'destinationBufferSizeInBytes')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance uint32 'ReadPartialMemory'(uint64 'targetRequestStart', native int 'destinationBuffer', uint32 'destinationBufferSizeInBytes')
		{
			ret
		}
		.method family hidebysig 
			instance uint32 'ReadPartialMemoryInternal'(uint64 'targetRequestStart', native int 'destinationBuffer', uint32 'destinationBufferSizeInBytes', uint32 'startIndex')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string 'ToString'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'path')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Dispose'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class ['mscorlib']'System'.'Version' 'get_Version'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class ['mscorlib']'System'.'OperatingSystem' 'get_OSVersion'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string 'get_OSVersionString'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'get_ProcessorArchitecture'()
		{
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.Samples.Debugging.Native'.'DumpThread' 'GetThread'(int32 'threadId')
		{
			ret
		}
		.method public hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<class 'Microsoft.Samples.Debugging.Native'.'DumpThread'> 'EnumerateThreads'()
		{
			ret
		}
		.method public hidebysig 
			instance bool 'IsExceptionStream'()
		{
			ret
		}
		.method public hidebysig 
			instance uint32 'ExceptionStreamThreadId'()
		{
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.Samples.Debugging.Native'.'DumpModule' 'LookupModule'(string 'nameModule')
		{
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.Samples.Debugging.Native'.'DumpModule' 'TryLookupModuleByAddress'(uint64 'targetAddress')
		{
			ret
		}
		.method public hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<class 'Microsoft.Samples.Debugging.Native'.'DumpModule'> 'EnumerateModules'()
		{
			ret
		}
		.field family class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'LoadedFileMemoryLookups' 'm_mappedFileMemory'
		.field family class 'Microsoft.Samples.Debugging.Native'.'DumpReader'/'NativeMethods'/'MinidumpMemoryChunks' 'm_memoryChunks'
		.property instance class ['mscorlib']'System'.'OperatingSystem' 'OSVersion'()
		{
			.get instance class ['mscorlib']'System'.'OperatingSystem' 'Microsoft.Samples.Debugging.Native'.'DumpReader'::'get_OSVersion'()
		}
		.property instance string 'OSVersionString'()
		{
			.get instance string 'Microsoft.Samples.Debugging.Native'.'DumpReader'::'get_OSVersionString'()
		}
		.property instance valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'ProcessorArchitecture'()
		{
			.get instance valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'Microsoft.Samples.Debugging.Native'.'DumpReader'::'get_ProcessorArchitecture'()
		}
		.property instance class ['mscorlib']'System'.'Version' 'Version'()
		{
			.get instance class ['mscorlib']'System'.'Version' 'Microsoft.Samples.Debugging.Native'.'DumpReader'::'get_Version'()
		}
	}
	.class public 'DumpThread'
		extends ['mscorlib']'System'.'Object'
	{
		.method public virtual hidebysig 
			instance bool 'Equals'(object 'obj')
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 'GetHashCode'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string 'ToString'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 'get_ThreadId'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'GetThreadContext'(native int 'buffer', int32 'sizeBufferBytes')
		{
			ret
		}
		.property instance int32 'ThreadId'()
		{
			.get instance int32 'Microsoft.Samples.Debugging.Native'.'DumpThread'::'get_ThreadId'()
		}
	}
	.class public abstract sealed 'DumpUtility'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			uint32 'GetTimestamp'(string 'file')
		{
			ret
		}
	}
	.class public sequential sealed 'EXCEPTION_DEBUG_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public valuetype 'Microsoft.Samples.Debugging.Native'.'EXCEPTION_RECORD' 'ExceptionRecord'
		.field public uint32 'dwFirstChance'
	}
	.class public sequential sealed 'EXCEPTION_RECORD'
		extends ['mscorlib']'System'.'ValueType'
	{
		.method public hidebysig specialname 
			instance bool 'get_IsNotContinuable'()
		{
			ret
		}
		.field public valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'ExceptionCode'
		.field public valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionRecordFlags' 'ExceptionFlags'
		.field public native int 'ExceptionRecord'
		.field public native int 'ExceptionAddress'
		.field public uint32 'NumberParameters'
		.field public native int 'ExceptionInformation0'
		.field public native int 'ExceptionInformation1'
		.field public native int 'ExceptionInformation2'
		.field public native int 'ExceptionInformation3'
		.field public native int 'ExceptionInformation4'
		.field public native int 'ExceptionInformation5'
		.field public native int 'ExceptionInformation6'
		.field public native int 'ExceptionInformation7'
		.field public native int 'ExceptionInformation8'
		.field public native int 'ExceptionInformation9'
		.field public native int 'ExceptionInformation10'
		.field public native int 'ExceptionInformation11'
		.field public native int 'ExceptionInformation12'
		.field public native int 'ExceptionInformation13'
		.field public native int 'ExceptionInformation14'

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance bool 'IsNotContinuable'()
		{
			.get instance bool 'Microsoft.Samples.Debugging.Native'.'EXCEPTION_RECORD'::'get_IsNotContinuable'()
		}
	}
	.class public sequential sealed 'EXIT_PROCESS_DEBUG_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'dwExitCode'
	}
	.class public sequential sealed 'EXIT_THREAD_DEBUG_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public uint32 'dwExitCode'
	}
	.class public sealed 'ExceptionCode'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname uint32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'DBG_CONTROL_C' = uint32(0x40010005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'EXCEPTION_ACCESS_VIOLATION' = uint32(0xC0000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'EXCEPTION_INT_DIVIDE_BY_ZERO' = uint32(0xC0000094)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'EXCEPTION_NONCONTINUABLE_EXCEPTION' = uint32(0xC0000025)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'EXCEPTION_STACK_OVERFLOW' = uint32(0xC00000FD)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'None' = uint32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'STATUS_BREAKPOINT' = uint32(0x80000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionCode' 'STATUS_SINGLESTEP' = uint32(0x80000004)
	}
	.class public sealed 'ExceptionRecordFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname uint32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionRecordFlags' 'EXCEPTION_NONCONTINUABLE' = uint32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ExceptionRecordFlags' 'None' = uint32(0x00000000)
	}
	.class public sealed 'IA64Flags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int64 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Flags' 'IA64_BUNDLE_SIZE' = int64(0x10)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Flags' 'PSR_RI' = int64(0x29)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Flags' 'SINGLE_STEP_FLAG' = int64(0x1000000000)
	}
	.class public sealed 'IA64Offsets'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'ApCCV' = int32(0x000009D8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'ApDCR' = int32(0x000009E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'ApEC' = int32(0x000009D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'ApLC' = int32(0x000009C8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'ApUNAT' = int32(0x000009C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrRp' = int32(0x00000980)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrS0' = int32(0x00000988)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrS1' = int32(0x00000990)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrS2' = int32(0x00000998)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrS3' = int32(0x000009A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrS4' = int32(0x000009A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrT0' = int32(0x000009B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'BrT1' = int32(0x000009B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'Cflag' = int32(0x00000A48)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'ContextFlags' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD0' = int32(0x00000050)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD1' = int32(0x00000058)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD2' = int32(0x00000060)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD3' = int32(0x00000068)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD4' = int32(0x00000070)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD5' = int32(0x00000078)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD6' = int32(0x00000080)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbD7' = int32(0x00000088)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI0' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI1' = int32(0x00000018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI2' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI3' = int32(0x00000028)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI4' = int32(0x00000030)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI5' = int32(0x00000038)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI6' = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'DbI7' = int32(0x00000048)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'Eflag' = int32(0x00000A30)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF100' = int32(0x000006B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF101' = int32(0x000006C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF102' = int32(0x000006D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF103' = int32(0x000006E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF104' = int32(0x000006F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF105' = int32(0x00000700)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF106' = int32(0x00000710)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF107' = int32(0x00000720)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF108' = int32(0x00000730)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF109' = int32(0x00000740)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF110' = int32(0x00000750)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF111' = int32(0x00000760)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF112' = int32(0x00000770)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF113' = int32(0x00000780)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF114' = int32(0x00000790)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF115' = int32(0x000007A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF116' = int32(0x000007B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF117' = int32(0x000007C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF118' = int32(0x000007D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF119' = int32(0x000007E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF120' = int32(0x000007F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF121' = int32(0x00000800)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF122' = int32(0x00000810)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF123' = int32(0x00000820)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF124' = int32(0x00000830)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF125' = int32(0x00000840)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF126' = int32(0x00000850)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF127' = int32(0x00000860)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF32' = int32(0x00000270)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF33' = int32(0x00000280)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF34' = int32(0x00000290)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF35' = int32(0x000002A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF36' = int32(0x000002B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF37' = int32(0x000002C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF38' = int32(0x000002D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF39' = int32(0x000002E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF40' = int32(0x000002F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF41' = int32(0x00000300)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF42' = int32(0x00000310)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF43' = int32(0x00000320)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF44' = int32(0x00000330)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF45' = int32(0x00000340)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF46' = int32(0x00000350)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF47' = int32(0x00000360)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF48' = int32(0x00000370)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF49' = int32(0x00000380)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF50' = int32(0x00000390)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF51' = int32(0x000003A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF52' = int32(0x000003B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF53' = int32(0x000003C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF54' = int32(0x000003D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF55' = int32(0x000003E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF56' = int32(0x000003F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF57' = int32(0x00000400)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF58' = int32(0x00000410)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF59' = int32(0x00000420)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF60' = int32(0x00000430)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF61' = int32(0x00000440)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF62' = int32(0x00000450)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF63' = int32(0x00000460)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF64' = int32(0x00000470)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF65' = int32(0x00000480)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF66' = int32(0x00000490)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF67' = int32(0x000004A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF68' = int32(0x000004B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF69' = int32(0x000004C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF70' = int32(0x000004D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF71' = int32(0x000004E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF72' = int32(0x000004F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF73' = int32(0x00000500)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF74' = int32(0x00000510)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF75' = int32(0x00000520)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF76' = int32(0x00000530)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF77' = int32(0x00000540)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF78' = int32(0x00000550)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF79' = int32(0x00000560)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF80' = int32(0x00000570)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF81' = int32(0x00000580)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF82' = int32(0x00000590)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF83' = int32(0x000005A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF84' = int32(0x000005B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF85' = int32(0x000005C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF86' = int32(0x000005D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF87' = int32(0x000005E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF88' = int32(0x000005F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF89' = int32(0x00000600)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF90' = int32(0x00000610)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF91' = int32(0x00000620)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF92' = int32(0x00000630)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF93' = int32(0x00000640)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF94' = int32(0x00000650)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF95' = int32(0x00000660)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF96' = int32(0x00000670)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF97' = int32(0x00000680)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF98' = int32(0x00000690)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltF99' = int32(0x000006A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS0' = int32(0x00000090)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS1' = int32(0x000000A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS10' = int32(0x000001D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS11' = int32(0x000001E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS12' = int32(0x000001F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS13' = int32(0x00000200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS14' = int32(0x00000210)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS15' = int32(0x00000220)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS16' = int32(0x00000230)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS17' = int32(0x00000240)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS18' = int32(0x00000250)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS19' = int32(0x00000260)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS2' = int32(0x000000B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS3' = int32(0x000000C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS4' = int32(0x00000170)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS5' = int32(0x00000180)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS6' = int32(0x00000190)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS7' = int32(0x000001A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS8' = int32(0x000001B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltS9' = int32(0x000001C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT0' = int32(0x000000D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT1' = int32(0x000000E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT2' = int32(0x000000F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT3' = int32(0x00000100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT4' = int32(0x00000110)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT5' = int32(0x00000120)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT6' = int32(0x00000130)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT7' = int32(0x00000140)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT8' = int32(0x00000150)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'FltT9' = int32(0x00000160)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntGp' = int32(0x00000878)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntNats' = int32(0x00000970)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntS0' = int32(0x00000890)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntS1' = int32(0x00000898)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntS2' = int32(0x000008A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntS3' = int32(0x000008A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntSp' = int32(0x000008D0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT0' = int32(0x00000880)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT1' = int32(0x00000888)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT10' = int32(0x00000908)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT11' = int32(0x00000910)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT12' = int32(0x00000918)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT13' = int32(0x00000920)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT14' = int32(0x00000928)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT15' = int32(0x00000930)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT16' = int32(0x00000938)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT17' = int32(0x00000940)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT18' = int32(0x00000948)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT19' = int32(0x00000950)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT2' = int32(0x000008B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT20' = int32(0x00000958)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT21' = int32(0x00000960)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT22' = int32(0x00000968)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT3' = int32(0x000008C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT4' = int32(0x000008C8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT5' = int32(0x000008E0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT6' = int32(0x000008E8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT7' = int32(0x000008F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT8' = int32(0x000008F8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntT9' = int32(0x00000900)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntTeb' = int32(0x000008D8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'IntV0' = int32(0x000008B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'Preds' = int32(0x00000978)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'RsBSP' = int32(0x000009F0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'RsBSPSTORE' = int32(0x000009F8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'RsPFS' = int32(0x000009E8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'RsRNAT' = int32(0x00000A08)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'RsRSC' = int32(0x00000A00)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'SegCSD' = int32(0x00000A38)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'SegSSD' = int32(0x00000A40)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StFCR' = int32(0x00000A28)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StFDR' = int32(0x00000A60)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StFIR' = int32(0x00000A58)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StFPSR' = int32(0x00000870)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StFSR' = int32(0x00000A50)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StIFS' = int32(0x00000A20)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StIIP' = int32(0x00000A18)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'StIPSR' = int32(0x00000A10)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'IA64Offsets' 'UNUSEDPACK' = int32(0x00000A68)
	}
	.class public interface abstract 'IMemoryReader'
	{
		.method public virtual hidebysig newslot abstract 
			instance void 'ReadMemory'(native int 'address', uint8[] 'buffer')
		{
		}
	}
	.class public sealed 'ImageFileMachine'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ImageFileMachine' 'AMD64' = int32(0x00008664)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ImageFileMachine' 'ARM' = int32(0x000001C4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ImageFileMachine' 'IA64' = int32(0x00000200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ImageFileMachine' 'X86' = int32(0x0000014C)
	}
	.class public sequential sealed 'LOAD_DLL_DEBUG_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.method public hidebysig 
			instance string 'ReadImageNameFromTarget'(class 'Microsoft.Samples.Debugging.Native'.'IMemoryReader' 'reader')
		{
			ret
		}
		.field public native int 'hFile'
		.field public native int 'lpBaseOfDll'
		.field public uint32 'dwDebugInfoFileOffset'
		.field public uint32 'nDebugInfoSize'
		.field public native int 'lpImageName'
		.field public uint16 'fUnicode'
	}
	.class public sequential sealed 'ModuleInfo'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public native int 'lpBaseOfDll'
		.field public uint32 'SizeOfImage'
		.field public native int 'EntryPoint'
	}
	.class public sealed 'NativeDebugEventCode'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'CREATE_PROCESS_DEBUG_EVENT' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'CREATE_THREAD_DEBUG_EVENT' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'EXCEPTION_DEBUG_EVENT' = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'EXIT_PROCESS_DEBUG_EVENT' = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'EXIT_THREAD_DEBUG_EVENT' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'LOAD_DLL_DEBUG_EVENT' = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'None' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'OUTPUT_DEBUG_STRING_EVENT' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'RIP_EVENT' = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeDebugEventCode' 'UNLOAD_DLL_DEBUG_EVENT' = int32(0x00000007)
	}
	.class public abstract sealed 'NativeMethods'
		extends ['mscorlib']'System'.'Object'
	{
		.class nested public sealed 'ContinueStatus'
			extends ['mscorlib']'System'.'Enum'
		{
			.field public rtspecialname specialname uint32 'value__'
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'ContinueStatus' 'CONTINUED' = uint32(0x00000000)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'ContinueStatus' 'DBG_CONTINUE' = uint32(0x00010002)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'ContinueStatus' 'DBG_EXCEPTION_NOT_HANDLED' = uint32(0x80010001)
		}
		.class nested public sealed 'CreateProcessFlags'
			extends ['mscorlib']'System'.'Enum'
		{
			.field public rtspecialname specialname int32 'value__'
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'CreateProcessFlags' 'CREATE_NEW_CONSOLE' = int32(0x00000010)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'CreateProcessFlags' 'DEBUG_ONLY_THIS_PROCESS' = int32(0x00000002)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'CreateProcessFlags' 'DEBUG_PROCESS' = int32(0x00000001)
		}
		.class nested public sealed 'LoadLibraryFlags'
			extends ['mscorlib']'System'.'Enum'
		{
			.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
			.field public rtspecialname specialname uint32 'value__'
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'LoadLibraryFlags' 'DontResolveDllReferences' = uint32(0x00000001)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'LoadLibraryFlags' 'LoadIgnoreCodeAuthzLevel' = uint32(0x00000010)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'LoadLibraryFlags' 'LoadLibraryAsDatafile' = uint32(0x00000002)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'LoadLibraryFlags' 'LoadLibraryAsDatafileExclusive' = uint32(0x00000040)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'LoadLibraryFlags' 'LoadLibraryAsImageResource' = uint32(0x00000020)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'LoadLibraryFlags' 'LoadWithAlteredSearchPath' = uint32(0x00000008)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'LoadLibraryFlags' 'NoFlags' = uint32(0x00000000)
		}
		.class nested public sealed 'PageProtection'
			extends ['mscorlib']'System'.'Enum'
		{
			.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
			.field public rtspecialname specialname uint32 'value__'
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'Execute' = uint32(0x00000010)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'ExecuteRead' = uint32(0x00000020)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'ExecuteReadWrite' = uint32(0x00000040)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'ExecuteWriteCopy' = uint32(0x00000080)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'Guard' = uint32(0x00000100)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'NoAccess' = uint32(0x00000001)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'NoCache' = uint32(0x00000200)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'ReadWrite' = uint32(0x00000004)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'Readonly' = uint32(0x00000002)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'WriteCombine' = uint32(0x00000400)
			.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'WriteCopy' = uint32(0x00000008)
		}
		.class nested public sequential sealed 'SYSTEM_INFO'
			extends ['mscorlib']'System'.'ValueType'
		{
			.field public uint32 'dwPageSize'
			.field public native int 'lpMinimumApplicationAddress'
			.field public native int 'lpMaximumApplicationAddress'
			.field public native int 'dwActiveProcessorMask'
			.field public uint32 'dwNumberOfProcessors'
			.field public uint32 'dwProcessorType'
			.field public uint32 'dwAllocationGranularity'
			.field public uint16 'dwProcessorLevel'
			.field public uint16 'dwProcessorRevision'

			//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
			.field private int32 __Asmmeta_Private_Field
		}
		.class nested public sealed 'SafeLoadLibraryHandle'
			extends ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeHandleZeroOrMinusOneIsInvalid'
		{
			.permissionset linkcheck = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 02 0D 55 6E 6D 61 6E 61 67 65 64 43 6F 64 65 01)
			.method public hidebysig specialname 
				instance void '.ctor'(native int 'handle')
			{
				ret
			}
			.method family virtual hidebysig 
				instance bool 'ReleaseHandle'()
			{
				ret
			}
			.method public hidebysig specialname 
				instance native int 'get_BaseAddress'()
			{
				ret
			}
			.property instance native int 'BaseAddress'()
			{
				.get instance native int 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'SafeLoadLibraryHandle'::'get_BaseAddress'()
			}
		}
		.class nested public sealed 'SafeMapViewHandle'
			extends ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeHandleZeroOrMinusOneIsInvalid'
		{
			.permissionset linkcheck = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 02 0D 55 6E 6D 61 6E 61 67 65 64 43 6F 64 65 01)
			.method family virtual hidebysig 
				instance bool 'ReleaseHandle'()
			{
				ret
			}
			.method public hidebysig specialname 
				instance native int 'get_BaseAddress'()
			{
				ret
			}
			.property instance native int 'BaseAddress'()
			{
				.get instance native int 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'SafeMapViewHandle'::'get_BaseAddress'()
			}
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'CloseHandle'(native int 'handle')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			int32 'WaitForSingleObject'(native int 'hHandle', uint32 'dwMilliseconds')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'GetThreadContext'(native int 'hThread', native int 'lpContext')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			native int 'OpenThread'(valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'dwDesiredAccess', bool marshal(bool) 'bInheritHandle', uint32 'dwThreadId')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			class 'Microsoft.Samples.Debugging.Native'.'SafeWin32Handle' 'OpenProcess'(int32 'dwDesiredAccess', bool 'bInheritHandle', int32 'dwProcessId')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'SetThreadContext'(native int 'hThread', native int 'lpContext')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			int32 'GetCurrentThreadId'()
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'IsWow64Process'(class 'Microsoft.Samples.Debugging.Native'.'SafeWin32Handle' 'hProcess', bool& 'isWow')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			class 'Microsoft.Samples.Debugging.Native'.'SafeWin32Handle' 'CreateFileMapping'(class ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeFileHandle' 'hFile', native int 'lpFileMappingAttributes', valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'PageProtection' 'flProtect', uint32 'dwMaximumSizeHigh', uint32 'dwMaximumSizeLow', string 'lpName')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'UnmapViewOfFile'(native int 'baseAddress')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			class 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'SafeMapViewHandle' 'MapViewOfFile'(class 'Microsoft.Samples.Debugging.Native'.'SafeWin32Handle' 'hFileMappingObject', uint32 'dwDesiredAccess', uint32 'dwFileOffsetHigh', uint32 'dwFileOffsetLow', native int 'dwNumberOfBytesToMap')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'GetFileSizeEx'(native int 'hFile', [out] int64& 'lpFileSize')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'GetModuleInformation'(native int 'hProcess', native int 'hModule', [out] valuetype 'Microsoft.Samples.Debugging.Native'.'ModuleInfo'& 'lpmodinfo', uint32 'countBytes')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'ReadProcessMemory'(native int 'hProcess', native int 'lpBaseAddress', uint8[] 'lpBuffer', native uint 'nSize', [out] int32& 'lpNumberOfBytesRead')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'DebugSetProcessKillOnExit'(bool marshal(bool) 'KillOnExit')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'DebugBreakProcess'(native int 'hProcess')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'SetEvent'(class 'Microsoft.Samples.Debugging.Native'.'SafeWin32Handle' 'eventHandle')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'CreateProcess'(string 'lpApplicationName', string 'lpCommandLine', native int 'lpProcessAttributes', native int 'lpThreadAttributes', bool marshal(bool) 'bInheritHandles', valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'CreateProcessFlags' 'dwCreationFlags', native int 'lpEnvironment', string 'lpCurrentDirectory', class 'Microsoft.Samples.Debugging.NativeApi'.'STARTUPINFO' 'lpStartupInfo', class 'Microsoft.Samples.Debugging.NativeApi'.'PROCESS_INFORMATION' 'lpProcessInformation')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'DebugActiveProcess'(uint32 'dwProcessId')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'DebugActiveProcessStop'(uint32 'dwProcessId')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'TerminateProcess'(native int 'hProcess', uint32 'uExitCode')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'WaitForDebugEvent32'(valuetype 'Microsoft.Samples.Debugging.Native'.'DebugEvent32'& 'pDebugEvent', int32 'dwMilliseconds')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'WaitForDebugEvent64'(valuetype 'Microsoft.Samples.Debugging.Native'.'DebugEvent64'& 'pDebugEvent', int32 'dwMilliseconds')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool marshal(bool) 'ContinueDebugEvent'(uint32 'dwProcessId', uint32 'dwThreadId', valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'ContinueStatus' 'dwContinueStatus')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			void 'GetSystemInfo'([out] valuetype 'Microsoft.Samples.Debugging.Native'.'NativeMethods'/'SYSTEM_INFO'& marshal(struct) 'lpSystemInfo')
			preservesig 
		{
		}
	}
	.class public sequential sealed 'OUTPUT_DEBUG_STRING_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.method public hidebysig 
			instance string 'ReadMessageFromTarget'(class 'Microsoft.Samples.Debugging.Native'.'IMemoryReader' 'reader')
		{
			ret
		}
		.field public native int 'lpDebugStringData'
		.field public uint16 'fUnicode'
		.field public uint16 'nDebugStringLength'
	}
	.class public sealed 'Platform'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'Platform' 'AMD64' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'Platform' 'ARM' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'Platform' 'IA64' = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'Platform' 'None' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'Platform' 'X86' = int32(0x00000001)
	}
	.class public sealed 'ProcessorArchitecture'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname uint16 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_ALPHA' = uint16(0x0002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_ALPHA64' = uint16(0x0007)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_AMD64' = uint16(0x0009)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_ARM' = uint16(0x0005)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_IA32_ON_WIN64' = uint16(0x000A)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_IA64' = uint16(0x0006)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_INTEL' = uint16(0x0000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_MIPS' = uint16(0x0001)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_MSIL' = uint16(0x0008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_PPC' = uint16(0x0003)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ProcessorArchitecture' 'PROCESSOR_ARCHITECTURE_SHX' = uint16(0x0004)
	}
	.class public serializable 'ReadMemoryFailureException'
		extends ['mscorlib']'System'.'InvalidOperationException'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(native int 'address', int32 'countBytes')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(native int 'address', int32 'countBytes', class ['mscorlib']'System'.'Exception' 'innerException')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message', class ['mscorlib']'System'.'Exception' 'innerException')
		{
			ret
		}
		.method family hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.Runtime.Serialization'.'SerializationInfo' 'info', valuetype ['mscorlib']'System.Runtime.Serialization'.'StreamingContext' 'context')
		{
			ret
		}
	}
	.class public sealed 'SafeWin32Handle'
		extends ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeHandleZeroOrMinusOneIsInvalid'
	{
		.permissionset linkcheck = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 02 0D 55 6E 6D 61 6E 61 67 65 64 43 6F 64 65 01)
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(native int 'handle')
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool 'ReleaseHandle'()
		{
			ret
		}
	}
	.class public sealed 'ThreadAccess'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'None' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_ALL_ACCESS' = int32(0x001F03FF)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_DIRECT_IMPERSONATION' = int32(0x00000200)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_GET_CONTEXT' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_IMPERSONATE' = int32(0x00000100)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_QUERY_INFORMATION' = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_QUERY_LIMITED_INFORMATION' = int32(0x00000800)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_SET_CONTEXT' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_SET_INFORMATION' = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_SET_LIMITED_INFORMATION' = int32(0x00000400)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_SET_THREAD_TOKEN' = int32(0x00000080)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_SUSPEND_RESUME' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'ThreadAccess' 'THREAD_TERMINATE' = int32(0x00000001)
	}
	.class public sequential sealed 'UNLOAD_DLL_DEBUG_INFO'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public native int 'lpBaseOfDll'
	}
	.class public sealed 'X86Flags'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Flags' 'SINGLE_STEP_FLAG' = int32(0x00000100)
	}
	.class public sealed 'X86Offsets'
		extends ['mscorlib']'System'.'Enum'
	{
		.custom instance void ['mscorlib']'System'.'FlagsAttribute'::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'ContextFlags' = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Dr0' = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Dr1' = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Dr2' = int32(0x0000000C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Dr3' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Dr6' = int32(0x00000014)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Dr7' = int32(0x00000018)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'EFlags' = int32(0x000000C0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Eax' = int32(0x000000B0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Ebp' = int32(0x000000B4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Ebx' = int32(0x000000A4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Ecx' = int32(0x000000AC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Edi' = int32(0x0000009C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Edx' = int32(0x000000A8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Eip' = int32(0x000000B8)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Esi' = int32(0x000000A0)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'Esp' = int32(0x000000C4)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'ExtendedRegisters' = int32(0x000000CB)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'FloatSave' = int32(0x0000001C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'SegCs' = int32(0x000000BC)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'SegDs' = int32(0x00000098)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'SegEs' = int32(0x00000094)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'SegFs' = int32(0x00000090)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'SegGs' = int32(0x0000008C)
		.field static public literal valuetype 'Microsoft.Samples.Debugging.Native'.'X86Offsets' 'SegSs' = int32(0x000000C8)
	}
}
.namespace 'Microsoft.Samples.Debugging.NativeApi'
{
	.class public sequential 'PROCESS_INFORMATION'
		extends ['mscorlib']'System'.'Object'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.field public native int 'hProcess'
		.field public native int 'hThread'
		.field public int32 'dwProcessId'
		.field public int32 'dwThreadId'
	}
	.class public sequential 'SECURITY_ATTRIBUTES'
		extends ['mscorlib']'System'.'Object'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.field public int32 'nLength'
		.field public native int 'lpSecurityDescriptor'
		.field public bool 'bInheritHandle'
	}
	.class public sequential autochar 'STARTUPINFO'
		extends ['mscorlib']'System'.'Object'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.field public int32 'cb'
		.field public string 'lpReserved'
		.field public string 'lpDesktop'
		.field public string 'lpTitle'
		.field public int32 'dwX'
		.field public int32 'dwY'
		.field public int32 'dwXSize'
		.field public int32 'dwYSize'
		.field public int32 'dwXCountChars'
		.field public int32 'dwYCountChars'
		.field public int32 'dwFillAttribute'
		.field public int32 'dwFlags'
		.field public int16 'wShowWindow'
		.field public int16 'cbReserved2'
		.field public native int 'lpReserved2'
		.field public class ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeFileHandle' 'hStdInput'
		.field public class ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeFileHandle' 'hStdOutput'
		.field public class ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeFileHandle' 'hStdError'
	}
}
.namespace 'Profiler'
{
	.class public sealed 'CLRDebugging'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'OpenVirtualProcess'(uint64 'moduleBaseAddress', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugDataTarget' 'dataTarget', class 'Profiler'.'ICLRDebuggingLibraryProvider' 'libraryProvider', class ['mscorlib']'System'.'Version' 'maxDebuggerSupportedVersion', [out] class ['mscorlib']'System'.'Version'& 'version', [out] valuetype 'Profiler'.'ClrDebuggingProcessFlags'& 'flags')
		{
			ret
		}
		.method public hidebysig 
			instance int32 'TryOpenVirtualProcess'(uint64 'moduleBaseAddress', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugDataTarget' 'dataTarget', class 'Profiler'.'ICLRDebuggingLibraryProvider' 'libraryProvider', class ['mscorlib']'System'.'Version' 'maxDebuggerSupportedVersion', [out] class ['mscorlib']'System'.'Version'& 'version', [out] valuetype 'Profiler'.'ClrDebuggingProcessFlags'& 'flags', [out] class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess'& 'process')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'CanUnloadNow'(native int 'moduleHandle')
		{
			ret
		}
	}
	.class public sealed 'CLRMetaHost'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.method public hidebysig 
			instance class 'Profiler'.'CLRRuntimeInfo' 'GetInstalledRuntimeByVersion'(string 'version')
		{
			ret
		}
		.method public hidebysig 
			instance class 'Profiler'.'CLRRuntimeInfo' 'GetLoadedRuntimeByVersion'(int32 'processId', string 'version')
		{
			ret
		}
		.method public hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<class 'Profiler'.'CLRRuntimeInfo'> 'EnumerateInstalledRuntimes'()
		{
			ret
		}
		.method public hidebysig 
			instance class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<class 'Profiler'.'CLRRuntimeInfo'> 'EnumerateLoadedRuntimes'(int32 'processId')
		{
			ret
		}
		.method public hidebysig 
			instance class 'Profiler'.'CLRRuntimeInfo' 'GetRuntime'(string 'version')
		{
			ret
		}
		.field static public literal int32 'MaxVersionStringLength' = int32(0x0000001A)
	}
	.class public sealed 'CLRRuntimeInfo'
		extends ['mscorlib']'System'.'Object'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(object 'clrRuntimeInfo')
		{
			ret
		}
		.method public hidebysig 
			instance string 'GetVersionString'()
		{
			ret
		}
		.method public hidebysig 
			instance string 'GetRuntimeDirectory'()
		{
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug' 'GetLegacyICorDebugInterface'()
		{
			ret
		}
		.method public hidebysig 
			instance class 'ICLRProfiling' 'GetProfilingInterface'()
		{
			ret
		}
		.method public hidebysig 
			instance class 'Profiler'.'IMetaDataDispenser' 'GetIMetaDataDispenser'()
		{
			ret
		}
	}
	.class public sealed 'ClrDebuggingProcessFlags'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'Profiler'.'ClrDebuggingProcessFlags' 'ManagedDebugEventPending' = int32(0x00000001)
	}
	.class public sequential sealed 'ClrDebuggingVersion'
		extends ['mscorlib']'System'.'ValueType'
	{
		.field public int16 'StructVersion'
		.field public int16 'Major'
		.field public int16 'Minor'
		.field public int16 'Build'
		.field public int16 'Revision'
	}
	.class public 'Debugger'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug' 'GetDebuggerForProcess'(int32 'processID', string 'minimumVersion', [opt] class 'Profiler'.'DebuggerCallBacks' 'callBacks')
		{
			.param [3] = nullref
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'GetDebuggerHandleFromProcessDump'(string 'processDumpFile', [opt] int64 'clrInstanceId')
		{
			.param [2] = int64(0x0)
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
	}
	.class public 'DebuggerCallBacks'
		extends ['mscorlib']'System'.'Object'
		implements 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback3', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback2', 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugManagedCallback'
	{
		.method public virtual hidebysig newslot 
			instance void 'CustomNotification'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'FunctionRemapOpportunity'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' 'pOldFunction', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' 'pNewFunction', uint32 'oldILOffset')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'CreateConnection'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess', uint32 'dwConnectionId', uint16& 'pConnName')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'ChangeConnection'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess', uint32 'dwConnectionId')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'DestroyConnection'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess', uint32 'dwConnectionId')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'Exception'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFrame' 'pFrame', uint32 'nOffset', valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionCallbackType' 'dwEventType', uint32 'dwFlags')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'ExceptionUnwind'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugExceptionUnwindCallbackType' 'dwEventType', uint32 'dwFlags')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'FunctionRemapComplete'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' 'pFunction')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'MDANotification'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugController' 'pController', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugMDA' 'pMDA')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'Breakpoint'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint' 'pBreakpoint')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'StepComplete'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugStepper' 'pStepper', valuetype 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'CorDebugStepReason' 'reason')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'Break'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'thread')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'Exception'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', int32 'unhandled')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'EvalComplete'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEval' 'pEval')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'EvalException'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugEval' 'pEval')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'CreateProcess'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'ExitProcess'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'CreateThread'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'thread')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'ExitThread'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'thread')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'LoadModule'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' 'pModule')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'UnloadModule'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' 'pModule')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'LoadClass'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' 'c')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'UnloadClass'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugClass' 'c')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'DebuggerError'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess', int32 'errorHR', uint32 'errorCode')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'LogMessage'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', int32 'lLevel', string 'pLogSwitchName', string 'pMessage')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'LogSwitch'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', int32 'lLevel', uint32 'ulReason', string 'pLogSwitchName', string 'pParentName')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'CreateAppDomain'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'ExitAppDomain'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'LoadAssembly'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssembly' 'pAssembly')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'UnloadAssembly'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAssembly' 'pAssembly')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'ControlCTrap'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugProcess' 'pProcess')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'NameChange'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'UpdateModuleSymbols'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugModule' 'pModule', class ['mscorlib']'System.Runtime.InteropServices.ComTypes'.'IStream' 'pSymbolStream')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'EditAndContinueRemap'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugFunction' 'pFunction', int32 'fAccurate')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'BreakpointSetError'(class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugAppDomain' 'pAppDomain', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugThread' 'pThread', class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebugBreakpoint' 'pBreakpoint', uint32 'dwError')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
	}
	.class public interface abstract import 'ICLRDebugging'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 44 32 38 46 33 43 35 41 2D 39 36 33 34 2D 34 32 30 36 2D 41 35 30 39 2D 34 37 37 35 35 32 45 45 46 42 31 30 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance int32 'OpenVirtualProcess'([in] uint64 'moduleBaseAddress', [in] object marshal(iunknown) 'dataTarget', [in] class 'Profiler'.'ICLRDebuggingLibraryProvider' marshal(interface) 'libraryProvider', [in] valuetype 'Profiler'.'ClrDebuggingVersion'& 'maxDebuggerSupportedVersion', [in] valuetype ['mscorlib']'System'.'Guid'& 'riidProcess', [out] object& marshal(iunknown) 'process', [in][out] valuetype 'Profiler'.'ClrDebuggingVersion'& 'version', [out] valuetype 'Profiler'.'ClrDebuggingProcessFlags'& 'flags')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'CanUnloadNow'(native int 'moduleHandle')
			preservesig 
		{
		}
	}
	.class public interface abstract import 'ICLRDebuggingLibraryProvider'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 33 31 35 31 43 30 38 44 2D 34 44 30 39 2D 34 66 39 62 2D 38 38 33 38 2D 32 38 38 30 42 46 31 38 46 45 35 31 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance int32 'ProvideLibrary'([in] string marshal(lpwstr) 'fileName', int32 'timestamp', int32 'sizeOfImage', [out] native int& 'hModule')
			preservesig 
		{
		}
	}
	.class public interface abstract import 'IMetaDataDispenser'
	{
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'GuidAttribute'::.ctor(string) = (01 00 24 38 30 39 43 36 35 32 45 2D 37 33 39 36 2D 31 31 44 32 2D 39 37 37 31 2D 30 30 41 30 43 39 42 34 44 35 30 43 00 00)
		.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'InterfaceTypeAttribute'::.ctor(valuetype ['mscorlib']'System.Runtime.InteropServices'.'ComInterfaceType') = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void 'DefineScope'([in] valuetype ['mscorlib']'System'.'Guid'& 'rclsid', [in] uint32 'dwCreateFlags', [in] valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] object& marshal(interface) 'ppIUnk')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'OpenScope'([in] string marshal(lpwstr) 'szScope', [in] int32 'dwOpenFlags', [in] valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] object& marshal(interface) 'ppIUnk')
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'OpenScopeOnMemory'([in] native int 'pData', [in] uint32 'cbData', [in] int32 'dwOpenFlags', [in] valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] object& marshal(iunknown) 'ppIUnk')
			preservesig 
		{
		}
	}
	.class public 'LibraryProvider'
		extends ['mscorlib']'System'.'Object'
		implements 'Profiler'.'ICLRDebuggingLibraryProvider'
	{
		.method public final virtual hidebysig newslot 
			instance int32 'ProvideLibrary'(string 'fileName', int32 'timestamp', int32 'sizeOfImage', [out] native int& 'hModule')
		{
			ret
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			native int 'LoadLibrary'(string 'fileName')
			preservesig 
		{
		}
		.method public hidebysig specialname 
			instance string 'get_LastLoadedDbi'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string 'get_LastLoadedDac'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
		.property instance string 'LastLoadedDac'()
		{
			.get instance string 'Profiler'.'LibraryProvider'::'get_LastLoadedDac'()
		}
		.property instance string 'LastLoadedDbi'()
		{
			.get instance string 'Profiler'.'LibraryProvider'::'get_LastLoadedDbi'()
		}
	}
	.class public abstract sealed 'NativeMethods'
		extends ['mscorlib']'System'.'Object'
	{
		.class nested public sealed 'ProcessAccessOptions'
			extends ['mscorlib']'System'.'Enum'
		{
			.field public rtspecialname specialname int32 'value__'
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessCreateProcess' = int32(0x00000080)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessCreateThread' = int32(0x00000002)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessDupHandle' = int32(0x00000040)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessQueryInformation' = int32(0x00000400)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessSetInformation' = int32(0x00000200)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessSetQuota' = int32(0x00000100)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessSetSessionID' = int32(0x00000004)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessSuspendResume' = int32(0x00000800)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessTerminate' = int32(0x00000001)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessVMOperation' = int32(0x00000008)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessVMRead' = int32(0x00000010)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'ProcessVMWrite' = int32(0x00000020)
			.field static public literal valuetype 'Profiler'.'NativeMethods'/'ProcessAccessOptions' 'Synchronize' = int32(0x00100000)
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool 'CloseHandle'(native int 'handle')
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			class 'Microsoft.Samples.Debugging.CorDebug.NativeApi'.'ICorDebug' 'CreateDebuggingInterfaceFromVersion'(int32 'iDebuggerVersion', string 'szDebuggeeVersion')
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			void 'GetVersionFromProcess'(class 'Profiler'.'ProcessSafeHandle' 'hProcess', class ['mscorlib']'System.Text'.'StringBuilder' 'versionString', int32 'bufferSize', [out] int32& 'dwLength')
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			void 'GetRequestedRuntimeVersion'(string 'pExe', class ['mscorlib']'System.Text'.'StringBuilder' 'pVersion', int32 'cchBuffer', [out] int32& 'dwLength')
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			void 'CLRCreateInstance'(valuetype ['mscorlib']'System'.'Guid'& 'clsid', valuetype ['mscorlib']'System'.'Guid'& 'riid', [out] object& marshal(interface) 'metahostInterface')
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			class 'Profiler'.'ProcessSafeHandle' 'OpenProcess'(int32 'dwDesiredAccess', bool 'bInheritHandle', int32 'dwProcessId')
			preservesig 
		{
		}
		.field static public literal int32 'MAX_PATH' = int32(0x00000104)
	}
	.class public 'ProcessSafeHandle'
		extends ['mscorlib']'Microsoft.Win32.SafeHandles'.'SafeHandleZeroOrMinusOneIsInvalid'
	{
		.method family virtual hidebysig 
			instance bool 'ReleaseHandle'()
		{
			.permissionset linkcheck = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 02 0D 55 6E 6D 61 6E 61 67 65 64 43 6F 64 65 01)
			ret
		}
	}
}
