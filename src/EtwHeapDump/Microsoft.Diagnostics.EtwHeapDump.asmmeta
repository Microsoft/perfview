.assembly extern 'Microsoft.Diagnostics.FastSerialization'
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 14:0:0:0
}
.assembly extern 'Microsoft.Diagnostics.MemoryGraph'
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 14:0:0:0
}
.assembly extern 'Microsoft.Diagnostics.Tracing.TraceEvent'
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 14:0:0:0
}
.assembly extern 'mscorlib'
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly 'Microsoft.Diagnostics.EtwHeapDump'
{
	.custom instance void ['mscorlib']'System'.'CLSCompliantAttribute'::.ctor(bool) = (01 00 00 00 00)
	.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
	.permissionset reqmin = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 15 01 54 02 10 53 6B 69 70 56 65 72 69 66 69 63 61 74 69 6F 6E 01)
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93)
	.hash algorithm 0x00008004
	.ver 14:0:0:0
}
.class public 'DotNetHeapDumpGraphReader'
	extends ['mscorlib']'System'.'Object'
{
	.method public hidebysig specialname 
		instance void '.ctor'(class ['mscorlib']'System.IO'.'TextWriter' 'log')
	{
		ret
	}
	.method public hidebysig 
		instance class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'Read'(string 'etlFilePath', [opt] string 'processNameOrId', [opt] float64 'startTimeRelativeMSec')
	{
		.param [2] = nullref
		.param [3] = float64(0x0)
		ret
	}
	.method public hidebysig 
		instance void 'Append'(class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'memoryGraph', string 'etlName', [opt] string 'processNameOrId', [opt] float64 'startTimeRelativeMSec')
	{
		.param [3] = nullref
		.param [4] = float64(0x0)
		ret
	}
	.method public hidebysig 
		instance void 'Append'(class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'memoryGraph', class ['Microsoft.Diagnostics.Tracing.TraceEvent']'Microsoft.Diagnostics.Tracing'.'TraceEventDispatcher' 'source', [opt] string 'processNameOrId', [opt] float64 'startTimeRelativeMSec')
	{
		.param [3] = nullref
		.param [4] = float64(0x0)
		ret
	}
	.method public hidebysig specialname 
		instance class 'DotNetHeapInfo' 'get_DotNetHeapInfo'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance void 'set_DotNetHeapInfo'(class 'DotNetHeapInfo' 'value')
	{
		ret
	}
	.property instance class 'DotNetHeapInfo' 'DotNetHeapInfo'()
	{
		.get instance class 'DotNetHeapInfo' 'DotNetHeapDumpGraphReader'::'get_DotNetHeapInfo'()
		.set instance void 'DotNetHeapDumpGraphReader'::'set_DotNetHeapInfo'(class 'DotNetHeapInfo')
	}
}
.class public 'DotNetHeapDumper'
	extends ['mscorlib']'System'.'Object'
{
	.method public static hidebysig 
		bool 'DumpAsEtlFile'(int32 'processID', string 'etlFileName', class ['mscorlib']'System.IO'.'TextWriter' 'log', [opt] class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'memoryGraph', [opt] class 'DotNetHeapInfo' 'dotNetInfo')
	{
		.param [4] = nullref
		.param [5] = nullref
		ret
	}
	.method public static hidebysig 
		bool 'Dump'(int32 'processID', class ['Microsoft.Diagnostics.MemoryGraph']'Graphs'.'MemoryGraph' 'memoryGraph', class ['mscorlib']'System.IO'.'TextWriter' 'log', [opt] class 'DotNetHeapInfo' 'dotNetInfo')
	{
		.param [4] = nullref
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'()
	{
		ret
	}
}
.class public 'DotNetHeapInfo'
	extends ['mscorlib']'System'.'Object'
	implements ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'
{
	.method public hidebysig specialname 
		instance int32 'get_CorruptedObject'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int64 'get_UndumpedSegementRegion'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance int64 'get_SizeOfAllSegments'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance class ['mscorlib']'System.Collections.Generic'.'List`1'<class 'GCHeapDumpSegment'> 'get_Segments'()
	{
		ret
	}
	.method public hidebysig 
		instance int32 'GenerationFor'(uint64 'obj')
	{
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.ToStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Serializer' 'serializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'ToStream'
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.FromStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Deserializer' 'deserializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'FromStream'
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'()
	{
		ret
	}
	.property instance int32 'CorruptedObject'()
	{
		.get instance int32 'DotNetHeapInfo'::'get_CorruptedObject'()
	}
	.property instance class ['mscorlib']'System.Collections.Generic'.'List`1'<class 'GCHeapDumpSegment'> 'Segments'()
	{
		.get instance class ['mscorlib']'System.Collections.Generic'.'List`1'<class 'GCHeapDumpSegment'> 'DotNetHeapInfo'::'get_Segments'()
	}
	.property instance int64 'SizeOfAllSegments'()
	{
		.get instance int64 'DotNetHeapInfo'::'get_SizeOfAllSegments'()
	}
	.property instance int64 'UndumpedSegementRegion'()
	{
		.get instance int64 'DotNetHeapInfo'::'get_UndumpedSegementRegion'()
	}
}
.class public 'GCHeapDumpSegment'
	extends ['mscorlib']'System'.'Object'
	implements ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'
{
	.method public hidebysig specialname 
		instance uint64 'get_Start'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen0End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen1End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen2End'()
	{
		ret
	}
	.method public hidebysig specialname 
		instance uint64 'get_Gen3End'()
	{
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.ToStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Serializer' 'serializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'ToStream'
		ret
	}
	.method private final virtual hidebysig newslot 
		instance void 'FastSerialization.IFastSerializable.FromStream'(class ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'Deserializer' 'deserializer')
	{
		.override ['Microsoft.Diagnostics.FastSerialization']'FastSerialization'.'IFastSerializable'::'FromStream'
		ret
	}
	.method public hidebysig specialname 
		instance void '.ctor'()
	{
		ret
	}
	.property instance uint64 'End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_End'()
	}
	.property instance uint64 'Gen0End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen0End'()
	}
	.property instance uint64 'Gen1End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen1End'()
	}
	.property instance uint64 'Gen2End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen2End'()
	}
	.property instance uint64 'Gen3End'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Gen3End'()
	}
	.property instance uint64 'Start'()
	{
		.get instance uint64 'GCHeapDumpSegment'::'get_Start'()
	}
}
