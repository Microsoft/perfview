.assembly extern 'mscorlib'
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly 'Microsoft.Diagnostics.Utilities'
{
	.custom instance void ['mscorlib']'System'.'CLSCompliantAttribute'::.ctor(bool) = (01 00 00 00 00)
	.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
	.permissionset reqmin = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 15 01 54 02 10 53 6B 69 70 56 65 72 69 66 69 63 61 74 69 6F 6E 01)
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93)
	.hash algorithm 0x00008004
	.ver 14:0:0:0
}
.namespace 'Microsoft.Diagnostics.Utilities'
{
	.class public abstract sealed 'DirectoryUtilities'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			void 'Copy'(string 'sourceDirectory', string 'targetDirectory')
		{
			ret
		}
		.method public static hidebysig 
			void 'Copy'(string 'sourceDirectory', string 'targetDirectory', valuetype ['mscorlib']'System.IO'.'SearchOption' 'searchOptions')
		{
			ret
		}
		.method public static hidebysig 
			int32 'Clean'(string 'directory')
		{
			ret
		}
		.method public static hidebysig 
			bool 'DeleteOldest'(string 'directoryPath', int32 'numberToKeep')
		{
			ret
		}
		.method public static hidebysig 
			class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<string> 'GetFiles'(string 'directoryPath', string 'searchPattern', valuetype ['mscorlib']'System.IO'.'SearchOption' 'searchOptions')
		{
			ret
		}
		.method public static hidebysig 
			class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<string> 'GetFiles'(string 'directoryName', [opt] string 'searchPattern')
		{
			.param [2] = "*"
			ret
		}
	}
	.class public abstract sealed 'EnvironmentUtilities'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig specialname 
			bool 'get_Is64BitProcess'()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool 'get_Is64BitOperatingSystem'()
		{
			ret
		}
		.property bool 'Is64BitOperatingSystem'()
		{
			.get bool 'Microsoft.Diagnostics.Utilities'.'EnvironmentUtilities'::'get_Is64BitOperatingSystem'()
		}
		.property bool 'Is64BitProcess'()
		{
			.get bool 'Microsoft.Diagnostics.Utilities'.'EnvironmentUtilities'::'get_Is64BitProcess'()
		}
	}
	.class public abstract sealed 'FileUtilities'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<string> 'ReadAllLines'(string 'fileName')
		{
			ret
		}
		.method public static hidebysig 
			class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<string> 'ExpandWildcards'(string[] 'fileSpecifications', [opt] valuetype ['mscorlib']'System.IO'.'SearchOption' 'searchOpt')
		{
			.param [2] = int32(0x00000000)
			ret
		}
		.method public static hidebysig 
			bool 'ForceDelete'(string 'fileName')
		{
			ret
		}
		.method public static hidebysig 
			bool 'TryDelete'(string 'fileName')
		{
			ret
		}
		.method public static hidebysig 
			void 'ForceCopy'(string 'sourceFile', string 'destinationFile')
		{
			ret
		}
		.method public static hidebysig 
			void 'ForceMove'(string 'sourceFile', string 'destinationFile')
		{
			ret
		}
		.method public static hidebysig 
			bool 'Equals'(string 'fileName1', string 'fileName2')
		{
			ret
		}
	}
	.class public abstract sealed 'PathUtil'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			string 'PathRelativeTo'(string 'path', string 'relativeToDirectory')
		{
			ret
		}
	}
	.class public abstract sealed 'StreamUtilities'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			void 'CopyFromFile'(string 'fromFilePath', class ['mscorlib']'System.IO'.'Stream' 'toStream')
		{
			ret
		}
		.method public static hidebysig 
			void 'CopyToFile'(class ['mscorlib']'System.IO'.'Stream' 'fromStream', string 'toFilePath')
		{
			ret
		}
		.method public static hidebysig 
			int32 'CopyStream'(class ['mscorlib']'System.IO'.'Stream' 'fromStream', class ['mscorlib']'System.IO'.'Stream' 'toStream')
		{
			ret
		}
	}
	.class public abstract sealed 'StringUtilities'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			bool 'IsNullOrWhiteSpace'(string 'value')
		{
			ret
		}
	}
	.class public sealed 'TeeTextWriter'
		extends ['mscorlib']'System.IO'.'TextWriter'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.IO'.'TextWriter' 'stream1', class ['mscorlib']'System.IO'.'TextWriter' 'stream2')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class ['mscorlib']'System.IO'.'TextWriter' 'get_Stream1'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class ['mscorlib']'System.IO'.'TextWriter' 'get_Stream2'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class ['mscorlib']'System.Text'.'Encoding' 'get_Encoding'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'Write'(char 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'Write'(char[] 'buffer', int32 'index', int32 'count')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'Write'(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'Flush'()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void 'Dispose'(bool 'disposing')
		{
			ret
		}
		.property instance class ['mscorlib']'System.Text'.'Encoding' 'Encoding'()
		{
			.get instance class ['mscorlib']'System.Text'.'Encoding' 'Microsoft.Diagnostics.Utilities'.'TeeTextWriter'::'get_Encoding'()
		}
		.property instance class ['mscorlib']'System.IO'.'TextWriter' 'Stream1'()
		{
			.get instance class ['mscorlib']'System.IO'.'TextWriter' 'Microsoft.Diagnostics.Utilities'.'TeeTextWriter'::'get_Stream1'()
		}
		.property instance class ['mscorlib']'System.IO'.'TextWriter' 'Stream2'()
		{
			.get instance class ['mscorlib']'System.IO'.'TextWriter' 'Microsoft.Diagnostics.Utilities'.'TeeTextWriter'::'get_Stream2'()
		}
	}
	.class public 'XmlUtilities'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			string 'OpenXmlElement'(string 'xmlElement')
		{
			ret
		}
		.method public static hidebysig 
			string 'XmlEscape'(object 'obj', [opt] bool 'quote')
		{
			.param [2] = bool(false)
			ret
		}
		.method public static hidebysig 
			string 'XmlQuote'(object 'obj')
		{
			ret
		}
		.method public static hidebysig 
			string 'XmlQuote'(int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			string 'XmlQuoteHex'(uint32 'value')
		{
			ret
		}
		.method public static hidebysig 
			string 'XmlQuoteHex'(uint64 'value')
		{
			ret
		}
		.method public static hidebysig 
			string 'XmlQuoteHex'(int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			string 'XmlQuoteHex'(int64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'()
		{
			ret
		}
	}
}
