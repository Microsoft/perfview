.assembly extern 'mscorlib'
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly 'Microsoft.Diagnostics.FastSerialization'
{
	.custom instance void ['mscorlib']'System'.'CLSCompliantAttribute'::.ctor(bool) = (01 00 00 00 00)
	.custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
	.permissionset reqmin = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 15 01 54 02 10 53 6B 69 70 56 65 72 69 66 69 63 61 74 69 6F 6E 01)
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93)
	.hash algorithm 0x00008004
	.ver 14:0:0:0
}
.namespace 'FastSerialization'
{
	.class public sequential sealed 'DeferedRegion'
		extends ['mscorlib']'System'.'ValueType'
	{
		.method public hidebysig 
			instance void 'Write'(class 'FastSerialization'.'Serializer' 'serializer', class ['mscorlib']'System'.'Action' 'toStream')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'(class 'FastSerialization'.'Deserializer' 'deserializer', class ['mscorlib']'System'.'Action' 'fromStream')
		{
			ret
		}
		.method public hidebysig 
			instance void 'FinishRead'([opt] bool 'preserveStreamPosition')
		{
			.param [1] = bool(false)
			ret
		}
		.method public hidebysig specialname 
			instance bool 'get_IsFinished'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'FastSerialization'.'Deserializer' 'get_Deserializer'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'FastSerialization'.'StreamLabel' 'get_StartPosition'()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class 'FastSerialization'.'Deserializer' 'Deserializer'()
		{
			.get instance class 'FastSerialization'.'Deserializer' 'FastSerialization'.'DeferedRegion'::'get_Deserializer'()
		}
		.property instance bool 'IsFinished'()
		{
			.get instance bool 'FastSerialization'.'DeferedRegion'::'get_IsFinished'()
		}
		.property instance valuetype 'FastSerialization'.'StreamLabel' 'StartPosition'()
		{
			.get instance valuetype 'FastSerialization'.'StreamLabel' 'FastSerialization'.'DeferedRegion'::'get_StartPosition'()
		}
	}
	.class public sealed 'Deserializer'
		extends ['mscorlib']'System'.'Object'
		implements ['mscorlib']'System'.'IDisposable'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'filePath')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.IO'.'Stream' 'inputStream', string 'streamName')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(class 'FastSerialization'.'IStreamReader' 'reader', string 'streamName')
		{
			ret
		}
		.method public hidebysig 
			instance string 'GetEntryTypeName'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'GetEntryObject'<'T'>([out] !!0& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance class 'FastSerialization'.'IFastSerializable' 'GetEntryObject'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] bool& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] uint8& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] int16& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] int32& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] int64& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] valuetype ['mscorlib']'System'.'Guid'& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] float32& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] float64& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] string& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'([out] valuetype 'FastSerialization'.'StreamLabel'& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Read'<('FastSerialization'.'IFastSerializable') 'T'>([out] !!0& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance class 'FastSerialization'.'IFastSerializable' 'ReadObject'()
		{
			ret
		}
		.method public hidebysig 
			instance bool 'ReadBool'()
		{
			ret
		}
		.method public hidebysig 
			instance uint8 'ReadByte'()
		{
			ret
		}
		.method public hidebysig 
			instance int16 'ReadInt16'()
		{
			ret
		}
		.method public hidebysig 
			instance int32 'ReadInt'()
		{
			ret
		}
		.method public hidebysig 
			instance int64 'ReadInt64'()
		{
			ret
		}
		.method public hidebysig 
			instance float32 'ReadFloat'()
		{
			ret
		}
		.method public hidebysig 
			instance float64 'ReadDouble'()
		{
			ret
		}
		.method public hidebysig 
			instance string 'ReadString'()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'FastSerialization'.'StreamLabel' 'ReadLabel'()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'FastSerialization'.'ForwardReference' 'ReadForwardReference'()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'FastSerialization'.'StreamLabel' 'ResolveForwardReference'(valuetype 'FastSerialization'.'ForwardReference' 'reference', [opt] bool 'preserveCurrent')
		{
			.param [2] = bool(true)
			ret
		}
		.method public hidebysig specialname 
			instance int32 'get_VersionBeingRead'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 'get_MinimumReaderVersionBeingRead'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string 'get_Name'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class ['mscorlib']'System'.'Func`2'<string,class ['mscorlib']'System'.'Type'> 'get_TypeResolver'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void 'set_TypeResolver'(class ['mscorlib']'System'.'Func`2'<string,class ['mscorlib']'System'.'Type'> 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'RegisterFactory'(class ['mscorlib']'System'.'Type' 'type', class ['mscorlib']'System'.'Func`1'<class 'FastSerialization'.'IFastSerializable'> 'factory')
		{
			ret
		}
		.method public hidebysig 
			instance void 'RegisterDefaultFactory'(class ['mscorlib']'System'.'Func`2'<class ['mscorlib']'System'.'Type',class 'FastSerialization'.'IFastSerializable'> 'defaultFactory')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'TryReadTagged'(bool& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'TryReadTagged'(uint8& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'TryReadTagged'(int16& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'TryReadTagged'(int32& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'TryReadTagged'(int64& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'TryReadTagged'(string& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'TryReadTagged'<('FastSerialization'.'IFastSerializable') 'T'>(!!0& 'ret')
		{
			ret
		}
		.method public hidebysig 
			instance class 'FastSerialization'.'IFastSerializable' 'TryReadTaggedObject'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Goto'(valuetype 'FastSerialization'.'StreamLabel' 'label')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Goto'(valuetype 'FastSerialization'.'ForwardReference' 'reference')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'FastSerialization'.'StreamLabel' 'get_Current'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'FastSerialization'.'IStreamReader' 'get_Reader'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Dispose'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Log'(string 'str')
		{
			.custom instance void ['mscorlib']'System.Diagnostics'.'ConditionalAttribute'::.ctor(string) = (01 00 0F 44 45 42 55 47 5F 53 45 52 49 41 4C 49 5A 45 00 00)
			ret
		}
		.property instance valuetype 'FastSerialization'.'StreamLabel' 'Current'()
		{
			.get instance valuetype 'FastSerialization'.'StreamLabel' 'FastSerialization'.'Deserializer'::'get_Current'()
		}
		.property instance int32 'MinimumReaderVersionBeingRead'()
		{
			.get instance int32 'FastSerialization'.'Deserializer'::'get_MinimumReaderVersionBeingRead'()
		}
		.property instance string 'Name'()
		{
			.get instance string 'FastSerialization'.'Deserializer'::'get_Name'()
		}
		.property instance class 'FastSerialization'.'IStreamReader' 'Reader'()
		{
			.get instance class 'FastSerialization'.'IStreamReader' 'FastSerialization'.'Deserializer'::'get_Reader'()
		}
		.property instance class ['mscorlib']'System'.'Func`2'<string,class ['mscorlib']'System'.'Type'> 'TypeResolver'()
		{
			.get instance class ['mscorlib']'System'.'Func`2'<string,class ['mscorlib']'System'.'Type'> 'FastSerialization'.'Deserializer'::'get_TypeResolver'()
			.set instance void 'FastSerialization'.'Deserializer'::'set_TypeResolver'(class ['mscorlib']'System'.'Func`2'<string,class ['mscorlib']'System'.'Type'>)
		}
		.property instance int32 'VersionBeingRead'()
		{
			.get instance int32 'FastSerialization'.'Deserializer'::'get_VersionBeingRead'()
		}
	}
	.class public sealed 'ForwardReference'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname int32 'value__'
		.field static public literal valuetype 'FastSerialization'.'ForwardReference' 'Invalid' = int32(0xFFFFFFFF)
	}
	.class public interface abstract 'IFastSerializable'
	{
		.method public virtual hidebysig newslot abstract 
			instance void 'ToStream'(class 'FastSerialization'.'Serializer' 'serializer')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'FromStream'(class 'FastSerialization'.'Deserializer' 'deserializer')
		{
		}
	}
	.class public interface abstract 'IFastSerializableVersion'
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 'get_Version'()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 'get_MinimumVersionCanRead'()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 'get_MinimumReaderVersion'()
		{
		}
		.property instance int32 'MinimumReaderVersion'()
		{
			.get instance int32 'FastSerialization'.'IFastSerializableVersion'::'get_MinimumReaderVersion'()
		}
		.property instance int32 'MinimumVersionCanRead'()
		{
			.get instance int32 'FastSerialization'.'IFastSerializableVersion'::'get_MinimumVersionCanRead'()
		}
		.property instance int32 'Version'()
		{
			.get instance int32 'FastSerialization'.'IFastSerializableVersion'::'get_Version'()
		}
	}
	.class public 'IOStreamStreamReader'
		extends 'FastSerialization'.'MemoryStreamReader'
		implements ['mscorlib']'System'.'IDisposable'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'fileName')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.IO'.'Stream' 'inputStream', [opt] int32 'bufferSize')
		{
			.param [2] = int32(0x00004000)
			ret
		}
		.method public hidebysig 
			instance void 'Close'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'FastSerialization'.'StreamLabel' 'get_Current'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'Goto'(valuetype 'FastSerialization'.'StreamLabel' 'label')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 'get_Length'()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void 'Dispose'(bool 'disposing')
		{
			ret
		}
		.property instance valuetype 'FastSerialization'.'StreamLabel' 'Current'()
		{
			.get instance valuetype 'FastSerialization'.'StreamLabel' 'FastSerialization'.'IOStreamStreamReader'::'get_Current'()
		}
		.property instance int64 'Length'()
		{
			.get instance int64 'FastSerialization'.'IOStreamStreamReader'::'get_Length'()
		}
	}
	.class public 'IOStreamStreamWriter'
		extends 'FastSerialization'.'MemoryStreamWriter'
		implements ['mscorlib']'System'.'IDisposable'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'fileName')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.IO'.'Stream' 'outputStream', [opt] int32 'bufferSize')
		{
			.param [2] = int32(0x00002000)
			ret
		}
		.method public hidebysig 
			instance void 'Flush'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Close'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class ['mscorlib']'System.IO'.'Stream' 'get_RawStream'()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 'get_Length'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype 'FastSerialization'.'StreamLabel' 'GetLabel'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void 'Clear'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class 'FastSerialization'.'MemoryStreamReader' 'GetReader'()
		{
			ret
		}
		.method public virtual hidebysig 
			instance uint8[] 'GetBytes'()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void 'Dispose'(bool 'disposing')
		{
			ret
		}
		.property instance int64 'Length'()
		{
			.get instance int64 'FastSerialization'.'IOStreamStreamWriter'::'get_Length'()
		}
		.property instance class ['mscorlib']'System.IO'.'Stream' 'RawStream'()
		{
			.get instance class ['mscorlib']'System.IO'.'Stream' 'FastSerialization'.'IOStreamStreamWriter'::'get_RawStream'()
		}
	}
	.class public interface abstract 'IStreamReader'
		implements ['mscorlib']'System'.'IDisposable'
	{
		.method public virtual hidebysig newslot abstract 
			instance uint8 'ReadByte'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int16 'ReadInt16'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 'ReadInt32'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int64 'ReadInt64'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string 'ReadString'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'FastSerialization'.'StreamLabel' 'ReadLabel'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Goto'(valuetype 'FastSerialization'.'StreamLabel' 'label')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype 'FastSerialization'.'StreamLabel' 'get_Current'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'GotoSuffixLabel'()
		{
		}
		.property instance valuetype 'FastSerialization'.'StreamLabel' 'Current'()
		{
			.get instance valuetype 'FastSerialization'.'StreamLabel' 'FastSerialization'.'IStreamReader'::'get_Current'()
		}
	}
	.class public interface abstract 'IStreamWriter'
		implements ['mscorlib']'System'.'IDisposable'
	{
		.method public virtual hidebysig newslot abstract 
			instance void 'Write'(uint8 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Write'(int16 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Write'(int32 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Write'(int64 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Write'(valuetype 'FastSerialization'.'StreamLabel' 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'Write'(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'FastSerialization'.'StreamLabel' 'GetLabel'()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void 'WriteSuffixLabel'(valuetype 'FastSerialization'.'StreamLabel' 'value')
		{
		}
	}
	.class public abstract sealed 'IStreamWriterExentions'
		extends ['mscorlib']'System'.'Object'
	{
		.method public static hidebysig 
			void 'Write'(class 'FastSerialization'.'IStreamWriter' 'writer', valuetype ['mscorlib']'System'.'Guid' 'guid')
		{
			ret
		}
		.method public static hidebysig 
			valuetype ['mscorlib']'System'.'Guid' 'ReadGuid'(class 'FastSerialization'.'IStreamReader' 'reader')
		{
			ret
		}
	}
	.class public 'MemoryStreamReader'
		extends ['mscorlib']'System'.'Object'
		implements 'FastSerialization'.'IStreamReader', ['mscorlib']'System'.'IDisposable'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(uint8[] 'data')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(uint8[] 'data', int32 'start', int32 'length')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int64 'get_Length'()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'Skip'(int32 'byteCount')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance uint8 'ReadByte'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int16 'ReadInt16'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 'ReadInt32'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int64 'ReadInt64'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string 'ReadString'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype 'FastSerialization'.'StreamLabel' 'ReadLabel'()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'Goto'(valuetype 'FastSerialization'.'StreamLabel' 'label')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'FastSerialization'.'StreamLabel' 'get_Current'()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'GotoSuffixLabel'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Dispose'()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void 'Dispose'(bool 'disposing')
		{
			ret
		}
		.property instance valuetype 'FastSerialization'.'StreamLabel' 'Current'()
		{
			.get instance valuetype 'FastSerialization'.'StreamLabel' 'FastSerialization'.'MemoryStreamReader'::'get_Current'()
		}
		.property instance int64 'Length'()
		{
			.get instance int64 'FastSerialization'.'MemoryStreamReader'::'get_Length'()
		}
	}
	.class public 'MemoryStreamWriter'
		extends ['mscorlib']'System'.'Object'
		implements 'FastSerialization'.'IStreamWriter', ['mscorlib']'System'.'IDisposable'
	{
		.method public hidebysig specialname 
			instance void '.ctor'([opt] int32 'initialSize')
		{
			.param [1] = int32(0x00000040)
			ret
		}
		.method public virtual hidebysig newslot 
			instance class 'FastSerialization'.'MemoryStreamReader' 'GetReader'()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int64 'get_Length'()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance uint8[] 'GetBytes'()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void 'Clear'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Write'(uint8 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Write'(int16 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Write'(int32 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Write'(int64 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Write'(valuetype 'FastSerialization'.'StreamLabel' 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Write'(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'FastSerialization'.'StreamLabel' 'GetLabel'()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'WriteSuffixLabel'(valuetype 'FastSerialization'.'StreamLabel' 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Dispose'()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void 'Dispose'(bool 'disposing')
		{
			ret
		}
		.property instance int64 'Length'()
		{
			.get instance int64 'FastSerialization'.'MemoryStreamWriter'::'get_Length'()
		}
	}
	.class public sealed 'PinnedStreamReader'
		extends 'FastSerialization'.'IOStreamStreamReader'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'fileName', [opt] int32 'bufferSize')
		{
			.param [2] = int32(0x00004000)
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.IO'.'Stream' 'inputStream', [opt] int32 'bufferSize')
		{
			.param [2] = int32(0x00004000)
			ret
		}
		.method public hidebysig 
			instance class 'FastSerialization'.'PinnedStreamReader' 'Clone'()
		{
			ret
		}
		.method public hidebysig 
			instance uint8* 'GetPointer'(valuetype 'FastSerialization'.'StreamLabel' 'Position', int32 'length')
		{
			ret
		}
		.method public hidebysig 
			instance uint8* 'GetPointer'(int32 'length')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void 'Finalize'()
		{
			.override ['mscorlib']'System'.'Object'::'Finalize'
			ret
		}
		.method family virtual hidebysig 
			instance void 'Dispose'(bool 'disposing')
		{
			ret
		}
	}
	.class public serializable 'SerializationException'
		extends ['mscorlib']'System'.'Exception'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'message')
		{
			ret
		}
	}
	.class public sealed 'Serializer'
		extends ['mscorlib']'System'.'Object'
		implements ['mscorlib']'System'.'IDisposable'
	{
		.method public hidebysig specialname 
			instance void '.ctor'(string 'filePath', class 'FastSerialization'.'IFastSerializable' 'entryObject')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(class ['mscorlib']'System.IO'.'Stream' 'outputStream', class 'FastSerialization'.'IFastSerializable' 'entryObject')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void '.ctor'(class 'FastSerialization'.'IStreamWriter' 'writer', class 'FastSerialization'.'IFastSerializable' 'entryObject')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(uint8 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(int16 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(int32 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(int64 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(valuetype ['mscorlib']'System'.'Guid' 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(float32 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(float64 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(valuetype 'FastSerialization'.'StreamLabel' 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(valuetype 'FastSerialization'.'ForwardReference' 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Write'(class 'FastSerialization'.'IFastSerializable' 'obj')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteDefered'(class 'FastSerialization'.'IFastSerializable' 'obj')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WritePrivate'(class 'FastSerialization'.'IFastSerializable' 'obj')
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'FastSerialization'.'ForwardReference' 'GetForwardReference'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'DefineForwardReference'(valuetype 'FastSerialization'.'ForwardReference' 'forwardReference')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTagged'(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTagged'(uint8 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTagged'(int16 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTagged'(int32 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTagged'(int64 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTagged'(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTagged'(class 'FastSerialization'.'IFastSerializable' 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'WriteTaggedEnd'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'FastSerialization'.'IStreamWriter' 'get_Writer'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Close'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Log'(string 'str')
		{
			.custom instance void ['mscorlib']'System.Diagnostics'.'ConditionalAttribute'::.ctor(string) = (01 00 0F 44 45 42 55 47 5F 53 45 52 49 41 4C 49 5A 45 00 00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void 'Dispose'()
		{
			ret
		}
		.property instance class 'FastSerialization'.'IStreamWriter' 'Writer'()
		{
			.get instance class 'FastSerialization'.'IStreamWriter' 'FastSerialization'.'Serializer'::'get_Writer'()
		}
	}
	.class public sealed 'StreamLabel'
		extends ['mscorlib']'System'.'Enum'
	{
		.field public rtspecialname specialname uint32 'value__'
		.field static public literal valuetype 'FastSerialization'.'StreamLabel' 'Invalid' = uint32(0xFFFFFFFF)
	}
}
.namespace 'System.Collections.Generic'
{
	.class public sequential sealed 'GrowableArray`1'<'T'>
		extends ['mscorlib']'System'.'ValueType'
	{
		.custom instance void ['mscorlib']'System.Reflection'.'DefaultMemberAttribute'::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.class nested public sealed 'Comparison`1'<'T', 'Key'>
			extends ['mscorlib']'System'.'MulticastDelegate'
		{
			.method public hidebysig specialname 
				instance void '.ctor'(object 'object', native int 'method')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance int32 'Invoke'(!1 'x', !0 'elem')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance class ['mscorlib']'System'.'IAsyncResult' 'BeginInvoke'(!1 'x', !0 'elem', class ['mscorlib']'System'.'AsyncCallback' 'callback', object 'object')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance int32 'EndInvoke'(class ['mscorlib']'System'.'IAsyncResult' 'result')
				runtime 
			{
			}
		}
		.class nested public sequential sealed 'GrowableArrayEnumerator'<'T'>
			extends ['mscorlib']'System'.'ValueType'
		{
			.method public hidebysig specialname 
				instance !0 'get_Current'()
			{
				ret
			}
			.method public hidebysig 
				instance bool 'MoveNext'()
			{
				ret
			}

			//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
			.field private int32 __Asmmeta_Private_Field
			.property instance !0 'Current'()
			{
				.get instance !0 'System.Collections.Generic'.'GrowableArray`1'/'GrowableArrayEnumerator'::'get_Current'()
			}
		}
		.method public hidebysig specialname 
			instance void '.ctor'(int32 'initialSize')
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 'get_Item'(int32 'index')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void 'set_Item'(int32 'index', !0 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 'get_Count'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void 'set_Count'(int32 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Clear'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Add'(!0 'item')
		{
			ret
		}
		.method public hidebysig 
			instance void 'AddRange'(class ['mscorlib']'System.Collections.Generic'.'IEnumerable`1'<!0> 'items')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Insert'(int32 'index', !0 'item')
		{
			ret
		}
		.method public hidebysig 
			instance void 'RemoveRange'(int32 'index', int32 'count')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Set'(int32 'index', !0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance !0 'Get'(int32 'index')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool 'get_Empty'()
		{
			ret
		}
		.method public hidebysig 
			instance !0 'Pop'()
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 'get_Top'()
		{
			ret
		}
		.method public hidebysig 
			instance void 'Trim'(int32 'maxWaste')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string 'ToString'()
		{
			ret
		}
		.method public hidebysig 
			instance bool 'BinarySearch'<'Key'>(!!0 'key', [out] int32& 'index', class 'System.Collections.Generic'.'GrowableArray`1'/'Comparison`1'<!0,!!0> 'comparison')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Sort'(int32 'index', int32 'count', class ['mscorlib']'System'.'Comparison`1'<!0> 'comparison')
		{
			ret
		}
		.method public hidebysig 
			instance void 'Sort'(class ['mscorlib']'System'.'Comparison`1'<!0> 'comparison')
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'System.Collections.Generic'.'GrowableArray`1'<!!0> 'Foreach'<'T1'>(class ['mscorlib']'System'.'Func`2'<!0,!!0> 'func')
		{
			ret
		}
		.method public hidebysig 
			instance bool 'Search'<'Key'>(!!0 'key', int32 'startIndex', class 'System.Collections.Generic'.'GrowableArray`1'/'Comparison`1'<!0,!!0> 'compare', int32& 'index')
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0[] 'get_UnderlyingArray'()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'System.Collections.Generic'.'GrowableArray`1'/'GrowableArrayEnumerator'<!0> 'GetEnumerator'()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 'Count'()
		{
			.get instance int32 'System.Collections.Generic'.'GrowableArray`1'::'get_Count'()
			.set instance void 'System.Collections.Generic'.'GrowableArray`1'::'set_Count'(int32)
		}
		.property instance bool 'Empty'()
		{
			.get instance bool 'System.Collections.Generic'.'GrowableArray`1'::'get_Empty'()
		}
		.property instance !0 'Item'(int32)
		{
			.get instance !0 'System.Collections.Generic'.'GrowableArray`1'::'get_Item'(int32)
			.set instance void 'System.Collections.Generic'.'GrowableArray`1'::'set_Item'(int32, !0)
		}
		.property instance !0 'Top'()
		{
			.get instance !0 'System.Collections.Generic'.'GrowableArray`1'::'get_Top'()
		}
		.property instance !0[] 'UnderlyingArray'()
		{
			.get instance !0[] 'System.Collections.Generic'.'GrowableArray`1'::'get_UnderlyingArray'()
		}
	}
}
